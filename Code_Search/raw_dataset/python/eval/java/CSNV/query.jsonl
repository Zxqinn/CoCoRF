{"id": "https://github.com/apache/spark/blob/25ee0474f47d9c30d6f553a7892d9549f91071cf/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/thrift/ThriftHttpServlet.java#L281-L296", "method_name": "createCookie", "code": "  private Cookie createCookie(String str) throws UnsupportedEncodingException {    if (LOG.isDebugEnabled()) {      LOG.debug(\"Cookie name = \" + AUTH_COOKIE + \" value = \" + str);    }    Cookie cookie = new Cookie(AUTH_COOKIE, str);    cookie.setMaxAge(cookieMaxAge);    if (cookieDomain != null) {      cookie.setDomain(cookieDomain);    }    if (cookiePath != null) {      cookie.setPath(cookiePath);    }    cookie.setSecure(isCookieSecure);    return cookie;  }"}
{"id": "https://github.com/hypfvieh/java-utils/blob/407c32d6b485596d4d2b644f5f7fc7a02d0169c6/src/main/java/com/github/hypfvieh/util/FileIoUtil.java#L78-L89", "method_name": "readPropertiesFromFile", "code": "    public static Properties readPropertiesFromFile(String _fileName, Properties _props) {        Properties props = _props == null ? new Properties() : _props;        LOGGER.debug(\"Trying to read properties from file: \" + _fileName);        Properties newProperties = readProperties(new File(_fileName));        if (newProperties != null) {            LOGGER.debug(\"Successfully read properties from file: \" + _fileName);            props.putAll(newProperties);        }        return props;    }"}
{"id": "https://github.com/mike10004/common-helper/blob/744f82d9b0768a9ad9c63a57a37ab2c93bf408f4/native-helper/src/main/java/com/github/mike10004/nativehelper/subprocess/Subprocess.java#L505-L509", "method_name": "running", "code": "    public static Builder running(File executable) {        checkArgument(executable.isFile(), \"file not found: %s\", executable);        checkArgument(executable.canExecute(), \"executable.canExecute\");        return running(executable.getPath());    }"}
{"id": "https://github.com/apache/flink/blob/b62db93bf63cb3bb34dd03d611a779d9e3fc61ac/flink-java/src/main/java/org/apache/flink/api/java/io/LocalCollectionOutputFormat.java#L58-L64", "method_name": "generateRandomId", "code": "\tprivate int generateRandomId() {\t\tint num = (int) (Math.random() * Integer.MAX_VALUE);\t\twhile (RESULT_HOLDER.containsKey(num)) {\t\t\tnum = (int) (Math.random() * Integer.MAX_VALUE);\t\t}\t\treturn num;\t}"}
{"id": "https://github.com/biojava/biojava/blob/a1c71a8e3d40cc32104b1d387a3d3b560b43356e/biojava-structure/src/main/java/org/biojava/nbio/structure/symmetry/core/PermutationGroup.java#L61-L83", "method_name": "completeGroup", "code": "\tpublic void completeGroup() {\t\t// Copy initial set to allow permutations to grow\t\tList<List<Integer>> gens = new ArrayList<List<Integer>>(permutations);\t\t// Keep HashSet version of permutations for fast lookup.\t\tSet<List<Integer>> known = new HashSet<List<Integer>>(permutations);\t\t//breadth-first search through the map of all members\t\tList<List<Integer>> currentLevel = new ArrayList<List<Integer>>(permutations);\t\twhile( currentLevel.size() > 0) {\t\t\tList<List<Integer>> nextLevel = new ArrayList<List<Integer>>();\t\t\tfor( List<Integer> p : currentLevel) {\t\t\t\tfor(List<Integer> gen : gens) {\t\t\t\t\tList<Integer> y = combine(p,gen);\t\t\t\t\tif(!known.contains(y)) {\t\t\t\t\t\tnextLevel.add(y);\t\t\t\t\t\t//bypass addPermutation(y) for performance\t\t\t\t\t\tpermutations.add(y);\t\t\t\t\t\tknown.add(y);\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t\tcurrentLevel = nextLevel;\t\t}\t}"}
{"id": "https://github.com/E7du/jfinal-ext3/blob/8ffcbd150fd50c72852bb778bd427b5eb19254dc/src/main/java/com/jfinal/ext/kit/DateTimeKit.java#L384-L391", "method_name": "dateStringToDate", "code": "\tpublic static Date dateStringToDate(String dateString){\t\tSimpleDateFormat sdf=new SimpleDateFormat(DateTimeKit.FULL_DATE_24HR_STYLE);\t\tDate date = null;\t\ttry {\t\t\tdate = sdf.parse(dateString);\t\t} catch (ParseException e) {}  \t\treturn date;\t}"}
{"id": "https://github.com/jpmml/jpmml-model/blob/b2b00ec3f15ca9a3cce09553932837340688b1d7/pmml-model-example/src/main/java/org/jpmml/model/CopyExample.java#L66-L78", "method_name": "printSummary", "code": "\tprivate void printSummary(PMML pmml){\t\tMemoryMeasurer measurer = new MemoryMeasurer();\t\tmeasurer.applyTo(pmml);\t\tNumberFormat numberFormat = NumberFormat.getInstance(Locale.US);\t\tnumberFormat.setGroupingUsed(true);\t\tlong size = measurer.getSize();\t\tSystem.out.println(\"Bytesize of the object graph: \" + numberFormat.format(size));\t\tSet<Object> objects = measurer.getObjects();\t\tSystem.out.println(\"Number of distinct Java objects in the object graph: \" + numberFormat.format(objects.size()));\t}"}
{"id": "https://github.com/paypal/SeLion/blob/694d12d0df76db48d0360b16192770c6a4fbdfd2/client/src/main/java/com/paypal/selion/platform/html/Table.java#L324-L328", "method_name": "uncheckCheckboxInCell", "code": "    public void uncheckCheckboxInCell(int row, int column) {        String checkboxLocator = getXPathBase() + \"tr[\" + row + \"]/td[\" + column + \"]/input\";        CheckBox cb = new CheckBox(checkboxLocator);        cb.uncheck();    }"}
{"id": "https://github.com/spotbugs/spotbugs/blob/f6365c6eea6515035bded38efa4a7c8b46ccf28c/eclipsePlugin/src/de/tobject/findbugs/wizards/ExportWizardPage.java#L255-L261", "method_name": "copyToClipboard", "code": "    protected void copyToClipboard(String toolTip) {        Object[] data = new Object[] { toolTip };        Transfer[] transfer = new Transfer[] { TextTransfer.getInstance() };        Clipboard clipboard = new Clipboard(Display.getCurrent());        clipboard.setContents(data, transfer);        clipboard.dispose();    }"}
{"id": "https://github.com/haifengl/smile/blob/e27e43e90fbaacce3f99d30120cf9dd6a764c33d/math/src/main/java/smile/sort/QuickSort.java#L886-L893", "method_name": "sort", "code": "    public static <T extends Comparable<? super T>>  int[] sort(T[] arr) {        int[] order = new int[arr.length];        for (int i = 0; i < order.length; i++) {            order[i] = i;        }        sort(arr, order);        return order;    }"}
{"id": "https://github.com/joniles/mpxj/blob/143ea0e195da59cd108f13b3b06328e9542337e8/src/main/java/net/sf/mpxj/mpx/MPXWriter.java#L1088-L1091", "method_name": "formatDate", "code": "   private String formatDate(Date value)   {      return (value == null ? null : m_formats.getDateFormat().format(value));   }"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/conf/distribution/Distributions.java#L28-L64", "method_name": "createDistribution", "code": "    public static org.nd4j.linalg.api.rng.distribution.Distribution createDistribution(Distribution dist) {        if (dist == null)            return null;        if (dist instanceof NormalDistribution) {            NormalDistribution nd = (NormalDistribution) dist;            return Nd4j.getDistributions().createNormal(nd.getMean(), nd.getStd());        }        if (dist instanceof GaussianDistribution) {            GaussianDistribution nd = (GaussianDistribution) dist;            return Nd4j.getDistributions().createNormal(nd.getMean(), nd.getStd());        }        if (dist instanceof UniformDistribution) {            UniformDistribution ud = (UniformDistribution) dist;            return Nd4j.getDistributions().createUniform(ud.getLower(), ud.getUpper());        }        if (dist instanceof BinomialDistribution) {            BinomialDistribution bd = (BinomialDistribution) dist;            return Nd4j.getDistributions().createBinomial(bd.getNumberOfTrials(), bd.getProbabilityOfSuccess());        }        if (dist instanceof LogNormalDistribution) {            LogNormalDistribution lnd = (LogNormalDistribution) dist;            return Nd4j.getDistributions().createLogNormal(lnd.getMean(), lnd.getStd());        }        if (dist instanceof TruncatedNormalDistribution) {            TruncatedNormalDistribution tnd = (TruncatedNormalDistribution) dist;            return Nd4j.getDistributions().createTruncatedNormal(tnd.getMean(), tnd.getStd());        }        if (dist instanceof OrthogonalDistribution) {            OrthogonalDistribution od = (OrthogonalDistribution) dist;            return Nd4j.getDistributions().createOrthogonal(od.getGain());        }        if (dist instanceof ConstantDistribution) {            ConstantDistribution od = (ConstantDistribution) dist;            return Nd4j.getDistributions().createConstant(od.getValue());        }        throw new RuntimeException(\"unknown distribution type: \" + dist.getClass());    }"}
{"id": "https://github.com/yanzhenjie/Album/blob/b17506440d32909d42aba41f6a388041a25c8363/album/src/main/java/com/yanzhenjie/album/util/AlbumUtils.java#L266-L271", "method_name": "getNowDateTime", "code": "    @NonNull    public static String getNowDateTime(@NonNull String format) {        SimpleDateFormat formatter = new SimpleDateFormat(format, Locale.ENGLISH);        Date curDate = new Date(System.currentTimeMillis());        return formatter.format(curDate);    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.wsoc/src/com/ibm/ws/wsoc/external/RemoteEndpointBasicExt.java#L76-L86", "method_name": "sendBinary", "code": "    @Override    public void sendBinary(@Sensitive ByteBuffer partialByte, boolean isLast) throws IOException {        if (partialByte == null) {            IllegalArgumentException up = new IllegalArgumentException();            throw up;        }        impl.sendBinary(partialByte, OpcodeType.BINARY_WHOLE, isLast);        return;    }"}
{"id": "https://github.com/baratine/baratine/blob/db34b45c03c5a5e930d8142acc72319125569fcf/framework/src/main/java/com/caucho/v5/cli/spi/CommandLineParser.java#L160-L195", "method_name": "extends", "code": "  private <A extends ArgsBase>  int parseCommandOption(Command<? super A> command,                         A args,                         String arg,                         int i)  {    final String []argv = args.getRawArgv();    OptionCommandLine<? super A> option = command.getOption(arg);    if (option != null) {      i = option.parse(args, argv, i);    }    else if (arg.startsWith(\"--\") && arg.indexOf(\"=\") > 0) {      int p = arg.indexOf(\"=\");            String key = arg.substring(2, p);      String value = arg.substring(p + 1);            args.property(key, value);    }    else if (arg.startsWith(\"-\")) {      throw new CommandArgumentException(L.l(\"'{0}' is an unexpected option for {1}.\",                                             arg,                                             command.name()));    }    else if (command.getTailArgsMinCount() >= 0) {      args.addTailArg(arg);    }    else {      throw new CommandArgumentException(L.l(\"'{0}' is an unexpected argument for {1}.\",                                             arg,                                             command.name()));    }    return i;  }"}
{"id": "https://github.com/blackdoor/blackdoor/blob/060c7a71dfafb85e10e8717736e6d3160262e96b/src/main/java/black/door/crypto/Crypto.java#L186-L193", "method_name": "doAESDecryption", "code": "\tpublic void doAESDecryption(byte[] salt, byte[] iv) throws Exception{\t\tsetSalt(salt);\t\tif(!initAESDone)\t\t\tinitAES();\t\tCipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\t\tcipher.init(Cipher.DECRYPT_MODE, secretKey, new IvParameterSpec(iv));\t\tsecretPlain = cipher.doFinal(secretCipher);\t}"}
{"id": "https://github.com/stratosphere/stratosphere/blob/c543a08f9676c5b2b0a7088123bd6e795a8ae0c8/stratosphere-examples/stratosphere-java-examples/src/main/java/eu/stratosphere/example/java/wordcount/WordCount.java#L135-L143", "method_name": "getTextDataSet", "code": "\tprivate static DataSet<String> getTextDataSet(ExecutionEnvironment env) {\t\tif(fileOutput) {\t\t\t// read the text file from given input path\t\t\treturn env.readTextFile(textPath);\t\t} else {\t\t\t// get default test text data\t\t\treturn WordCountData.getDefaultTextLineDataSet(env);\t\t}\t}"}
{"id": "https://github.com/samskivert/samskivert/blob/a64d9ef42b69819bdb2c66bddac6a64caef928b6/src/main/java/com/samskivert/util/RandomUtil.java#L363-L379", "method_name": "pickRandom", "code": "    public static <T> T pickRandom (List<T> values, T skip, Random r)    {        int size = values.size();        if (size < 2) {            throw new IllegalArgumentException(                \"Must have at least two elements [size=\" + size + \"]\");        }        int pick = r.nextInt(size - 1);        for (int ii = 0; ii < size; ii++) {            T val = values.get(ii);            if ((val != skip) && (pick-- == 0)) {                return val;            }        }        return null;    }"}
{"id": "https://github.com/foundation-runtime/service-directory/blob/a7bdefe173dc99e75eff4a24e07e6407e62f2ed4/1.1/sd-core/src/main/java/com/cisco/oss/foundation/directory/utils/JsonSerializer.java#L57-L60", "method_name": "deserialize", "code": "    public static <T> T deserialize(byte[] input, Class<T> classType)            throws JsonParseException, JsonMappingException, IOException {        return mapper.readValue(input, classType);    }"}
{"id": "https://github.com/EasyPost/easypost-java/blob/323b4cece5fa0f607e80a7e66cb1ce20c9d5b844/src/main/java/com/easypost/net/EasyPostResource.java#L144-L146", "method_name": "urlEncodePair", "code": "\tprivate static String urlEncodePair(String k, String v) throws UnsupportedEncodingException {\t\treturn String.format(\"%s=%s\", URLEncoder.encode(k, CHARSET), URLEncoder.encode(v, CHARSET));\t}"}
{"id": "https://github.com/dasein-cloud/dasein-cloud-google/blob/f52ada0f8abbe69bc81a1cdf398e87ebb5647cd7/src/main/java/org/dasein/cloud/google/network/IPAddressSupport.java#L139-L171", "method_name": "getIpAddress", "code": "    @Nullable    @Override    public IpAddress getIpAddress(@Nonnull String addressId) throws InternalException, CloudException {        APITrace.begin(getProvider(), \"IpAddress.getIpAddress\");        try{            try{                Compute gce = getProvider().getGoogleCompute();                AddressAggregatedList addressList = gce.addresses().aggregatedList(getContext().getAccountNumber()).setFilter(\"name eq \" + addressId).execute();                if(addressList != null && addressList.getItems() != null && !addressList.getItems().isEmpty())        {                    Iterator<String> regions = addressList.getItems().keySet().iterator();                    while(regions.hasNext()){                        String region = regions.next();                        if(addressList.getItems() != null && addressList.getItems().get(region) != null && addressList.getItems().get(region).getAddresses() != null && !addressList.getItems().get(region).getAddresses().isEmpty()){                            for(Address address : addressList.getItems().get(region).getAddresses()){                                if(address.getName().equals(addressId))return toIpAddress(address);                            }                        }                    }                }    \t    } catch (IOException ex) {\t            logger.error(ex.getMessage());    \t\t\tif (ex.getClass() == GoogleJsonResponseException.class) {    \t\t\t\tGoogleJsonResponseException gjre = (GoogleJsonResponseException)ex;    \t\t\t\tthrow new GoogleException(CloudErrorType.GENERAL, gjre.getStatusCode(), gjre.getContent(), gjre.getDetails().getMessage());    \t\t\t} else                    throw new CloudException(\"An error occurred getting the IPAddress: \" + ex.getMessage());    \t\t}            throw new InternalException(\"Could not find IPAddress: \" + addressId);        }        finally {            APITrace.end();        }    }"}
{"id": "https://github.com/chen0040/java-genetic-programming/blob/498fc8f4407ea9d45f2e0ac797a8948da337c74f/src/main/java/com/github/chen0040/gp/services/SimpleRandEngine.java#L22-L25", "method_name": "normal", "code": "   @Override public double normal(double mean, double sd) {      NormalDistribution normal = new NormalDistribution(mean, sd);      return normal.sample();   }"}
{"id": "https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/clcommon/src/main/java/ucar/nc2/iosp/fysat/Fysatiosp.java#L189-L253", "method_name": "readCompressedZlib", "code": "  public Array readCompressedZlib(ucar.nc2.Variable v2, long dataPos, int nx, int ny, int[] origin, int[] shape, int[] stride) throws IOException, InvalidRangeException {    long length = raf.length();    raf.seek(dataPos);    int data_size = (int) (length - dataPos);     //  or 5120 as read buffer size    byte[] data = new byte[data_size];    raf.readFully(data);    // decompress the bytes    int resultLength;    int result = 0;    byte[] tmp;    int uncompLen;        /* length of decompress space    */    byte[] uncomp = new byte[nx * (ny + 1) + 4000];    Inflater inflater = new Inflater(false);    inflater.setInput(data, 0, data_size);    int offset = 0;    int limit = nx * ny + nx;    while (inflater.getRemaining() > 0) {      try {        resultLength = inflater.inflate(uncomp, offset, 4000);      } catch (DataFormatException ex) {        ex.printStackTrace();        throw new IOException(ex.getMessage());      }      offset = offset + resultLength;      result = result + resultLength;      if ((result) > limit) {        // when uncomp data larger then limit, the uncomp need to increase size        tmp = new byte[result];        System.arraycopy(uncomp, 0, tmp, 0, result);        uncompLen = result + 4000;        uncomp = new byte[uncompLen];        System.arraycopy(tmp, 0, uncomp, 0, result);      }      if (resultLength == 0) {        int tt = inflater.getRemaining();        byte[] b2 = new byte[2];        System.arraycopy(data, data_size - tt, b2, 0, 2);        if (isZlibHed(b2) == 0) {          System.arraycopy(data, data_size - tt, uncomp, result, tt);          break;        }        inflater.reset();        inflater.setInput(data, data_size - tt, tt);      }    }    inflater.end();    byte[] inflateData = new byte[nx * ny];    System.arraycopy(uncomp, 0, inflateData, 0, nx * ny);    Array array = Array.factory(DataType.BYTE, v2.getShape(), inflateData);    if (array.getSize() < Variable.defaultSizeToCache)      v2.setCachedData(array, false);    return array.sectionNoReduce(origin, shape, stride);  }"}
{"id": "https://github.com/EdwardRaff/JSAT/blob/0ff53b7b39684b2379cc1da522f5b3a954b15cfb/JSAT/src/jsat/linear/Matrix.java#L298-L303", "method_name": "multiply", "code": "    public Matrix multiply(Matrix B)    {        Matrix C = new DenseMatrix(this.rows(), B.cols());        multiply(B, C);        return C;    }"}
{"id": "https://github.com/lucee/Lucee/blob/29b153fc4e126e5edb97da937f2ee2e231b87593/core/src/main/java/lucee/runtime/type/util/ListUtil.java#L1157-L1159", "method_name": "sort", "code": "    public static String sort(String list, String sortType, String sortOrder, String delimiter) throws PageException {\treturn _sort(toStringArray(listToArray(list, delimiter)), sortType, sortOrder, delimiter);    }"}
{"id": "https://github.com/arxanchain/java-common/blob/3ddfedfd948f5bab3fee0b74b85cdce4702ed84e/src/main/java/com/arxanfintech/common/util/ByteUtils.java#L127-L133", "method_name": "fromHex", "code": "    public static byte[] fromHex(String hex) {        try {            return Hex.decodeHex(hex.toCharArray());        } catch (DecoderException e) {            return null;        }    }"}
{"id": "https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/json/JsonSlurper.java#L209-L211", "method_name": "parseURL", "code": "    private Object parseURL(URL url, Map params, String charset) {            return parse(new StringReader( HTTP.getJSONWithParams ( url.toString (), null, params )));    }"}
{"id": "https://github.com/jmapper-framework/jmapper-core/blob/b48fd3527f35055b8b4a30f53a51136f183acc90/JMapper Framework/src/main/java/com/googlecode/jmapper/xml/XML.java#L158-L181", "method_name": "conversionsLoad", "code": "public Map<String, List<ConversionMethod>> conversionsLoad(){\r\t\tMap<String, List<ConversionMethod>> map = new HashMap<String, List<ConversionMethod>>();\r\t\t\r\t\ttry{\t// if xml mapping file isn't empty\r\t\t\t\tif(!isEmpty(xmlJmapper.classes))\r\t\t\t\t\tfor (XmlClass xmlClass : xmlJmapper.classes) {\r\t\t\t\t\t   List<ConversionMethod> conversions = new ArrayList<ConversionMethod>();\r\t\t\t\t\t   if(!isEmpty(xmlClass.conversions))\r\t\t\t\t\t\t for (XmlConversion xmlConversion : xmlClass.conversions)\r\t\t\t\t\t\t\t try{\t conversions.add(Converter.toConversionMethod(xmlConversion));\r\t\t\t\t\t\t\t }catch (XmlConversionNameException e) {\r\t\t\t\t\t\t\t\t Error.xmlConversionNameUndefined(this.xmlPath,xmlClass.name);\r\t\t\t\t\t\t\t }catch (XmlConversionTypeException e) {\r\t\t\t\t\t\t\t\t Error.xmlConversionTypeIncorrect(xmlConversion.name,this.xmlPath,xmlClass.name,xmlConversion.type);\r\t\t\t\t\t\t\t }catch (XmlConversionParameterException e) {\r\t\t\t\t\t\t\t\t Error.improperUseOfTheParameter(xmlConversion.name,this.xmlPath,xmlClass.name);\r\t\t\t\t\t\t\t }\r\t\t\t\t\t   // enrich map only if for this class there are conversions\r\t\t\t\t\t   if(!conversions.isEmpty())\r\t\t\t\t\t\t   map.put(xmlClass.name, conversions);\r\t\t\t\t\t}\r\t\t}catch (Exception e) {JmapperLog.error(e);}\r\t\treturn map;\r\t}\r"}
{"id": "https://github.com/cdk/cdk/blob/c3d0f16502bf08df50365fee392e11d7c9856657/tool/group/src/main/java/org/openscience/cdk/group/PermutationGroup.java#L308-L324", "method_name": "all", "code": "    public List<Permutation> all() {        final List<Permutation> permutations = new ArrayList<Permutation>();        Backtracker counter = new Backtracker() {            @Override            public void applyTo(Permutation p) {                permutations.add(p);            }            @Override            public boolean isFinished() {                return false;            }        };        this.apply(counter);        return permutations;    }"}
{"id": "https://github.com/allure-framework/allure1/blob/9a816fa05d8b894a917b7ebb7fd1a4056dee4693/allure-commandline/src/main/java/ru/yandex/qatools/allure/command/ReportGenerate.java#L158-L161", "method_name": "getJavaExecutablePath", "code": "    protected String getJavaExecutablePath() {        String executableName = isWindows() ? \"bin/java.exe\" : \"bin/java\";        return PROPERTIES.getJavaHome().resolve(executableName).toAbsolutePath().toString();    }"}
{"id": "https://github.com/lessthanoptimal/BoofCV/blob/f01c0243da0ec086285ee722183804d5923bc3ac/integration/boofcv-swing/src/main/java/boofcv/gui/ApplicationLauncherApp.java#L337-L371", "method_name": "handleContextMenu", "code": "\tprivate void handleContextMenu(JTree tree, int x, int y) {\t\tTreePath path = tree.getPathForLocation(x, y);\t\ttree.setSelectionPath(path);\t\tDefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();\t\tif (node == null)\t\t\treturn;\t\tif (!node.isLeaf()) {\t\t\ttree.setSelectionPath(null);\t\t\treturn;\t\t}\t\tfinal AppInfo info = (AppInfo) node.getUserObject();\t\tJMenuItem copyname = new JMenuItem(\"Copy Name\");\t\tcopyname.addActionListener(e -> {\t\t\tClipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\t\t\tclipboard.setContents(new StringSelection(info.app.getSimpleName()), null);\t\t});\t\tJMenuItem copypath = new JMenuItem(\"Copy Path\");\t\tcopypath.addActionListener(e -> {\t\t\tString path1 = UtilIO.getSourcePath(info.app.getPackage().getName(), info.app.getSimpleName());\t\t\tClipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\t\t\tclipboard.setContents(new StringSelection(path1), null);\t\t});\t\tJMenuItem github = new JMenuItem(\"Go to Github\");\t\tgithub.addActionListener(e -> openInGitHub(info));\t\tJPopupMenu submenu = new JPopupMenu();\t\tsubmenu.add(copyname);\t\tsubmenu.add(copypath);\t\tsubmenu.add(github);\t\tsubmenu.show(tree, x, y);\t}"}
{"id": "https://github.com/FaritorKang/unmz-common-util/blob/2912b8889b85ed910d536f85b24b6fa68035814a/src/main/java/net/unmz/java/util/date/DateUtils.java#L588-L605", "method_name": "stringToString", "code": "    public static String stringToString(String dateString, String desfmt) {        // ISO_DATE_FORMAT = \"yyyyMMdd\";        if (dateString.trim().length() == 8) {            return stringToString(dateString, ISO_DATE_FORMAT, desfmt);        } else if (dateString.trim().length() == 10) {            // ISO_EXPANDED_DATE_FORMAT = \"yyyy-MM-dd\";            return stringToString(dateString, ISO_EXPANDED_DATE_FORMAT, desfmt);        } else if (dateString.trim().length() == 19) {            // DATETIME_PATTERN = \"yyyy-MM-dd hh:mm:ss\";            return stringToString(dateString.substring(0, 10),                    ISO_EXPANDED_DATE_FORMAT, desfmt);        } else if (dateString.trim().length() == 11) {            // CHINESE_EXPANDED_DATE_FORMAT = \"yyyy年MM月dd日\";            return stringToString(dateString, CHINESE_EXPANDED_DATE_FORMAT,                    desfmt);        }        return null;    }"}
{"id": "https://github.com/QSFT/Doradus/blob/ad64d3c37922eefda68ec8869ef089c1ca604b70/doradus-server/src/main/java/com/dell/doradus/core/ServerParams.java#L551-L575", "method_name": "parseCommandLineArgs", "code": "    private void parseCommandLineArgs(String[] args) throws ConfigurationException {\r        if (args == null || args.length == 0) {\r            return;\r        }\r        logger.info(\"Parsing command line arguments\");\r        m_commandLineArgs = args;\r        \r        try {\r            for (int inx = 0; inx < args.length; inx++) {\r                String arg = args[inx];\r                if (arg.equals(\"-?\") || arg.equalsIgnoreCase(\"-h\") || arg.equalsIgnoreCase(\"-help\")) {\r                    System.out.println(\"See documentation and doradus.yaml for help.\");\r                    System.exit(0);\r                }\r                Utils.require(arg.charAt(0) == '-', \"Unrecognized argument: %s\", arg);\r                Utils.require(inx + 1 < args.length, \"A value is expected after: %s\", arg);\r                String name = arg.substring(1);\r                String value = args[++inx];\r                setCommandLineParam(name, value);\r            }\r        } catch (Exception e) {\r            logger.error(\"Failed to parse command line arguments\", e);\r            throw new ConfigurationException(\"Failed to parse command line arguments\", e);\r        }\r    }\r"}
{"id": "https://github.com/ujmp/universal-java-matrix-package/blob/b7e1d293adeadaf35d208ffe8884028d6c06b63b/ujmp-core/src/main/java/org/ujmp/core/util/GnuPlot.java#L191-L194", "method_name": "scatterPlot", "code": "\tpublic void scatterPlot(Matrix matrix, String... format) throws Exception {\t\tmatrix.exportTo().file(matrixFile).asDenseCSV();\t\texecute(getPlotCommand(matrix, false, false));\t}"}
{"id": "https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/cluster/EmrClusterProvider.java#L221-L232", "method_name": "replaceFileInJar", "code": "  void replaceFileInJar(String absolutePath, String fileToBeCopied) throws IOException {    Map<String, String> env = new HashMap<>();    env.put(\"create\", \"true\");    URI uri = URI.create(\"jar:file:\" + absolutePath);    try (FileSystem zipfs = FileSystems.newFileSystem(uri, env)) {      Path externalTxtFile = Paths.get(fileToBeCopied);      Path pathInZipfile = zipfs.getPath(\"cluster_sdc.properties\");      Files.copy( externalTxtFile,pathInZipfile,          StandardCopyOption.REPLACE_EXISTING );    }  }"}
{"id": "https://github.com/jhunters/jprotobuf/blob/55832c9b4792afb128e5b35139d8a3891561d8a3/src/main/java/com/baidu/bjf/remoting/protobuf/code/CodedConstant.java#L632-L647", "method_name": "getEnumName", "code": "    public static String getEnumName(Enum[] e, int value) {        if (e != null) {            int toCompareValue;            for (Enum en : e) {                if (en instanceof EnumReadable) {                    toCompareValue = ((EnumReadable) en).value();                } else {                    toCompareValue = en.ordinal();                }                if (value == toCompareValue) {                    return en.name();                }            }        }        return \"\";    }"}
{"id": "https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/sort/Sorting.java#L56-L58", "method_name": "sort", "code": "    public static void sort(List list, Sort... sorts) {        Sort.sorts(sorts).sort(list);    }"}
{"id": "https://github.com/Crab2died/Excel4J/blob/2ab0a3b8226a69ff868c3ead6e724f3a774f5f77/src/main/java/com/github/crab2died/ExcelUtils.java#L995-L1003", "method_name": "exportObjects2Excel", "code": "    public void exportObjects2Excel(List<?> data, Class clazz, boolean isWriteHeader,                                    String sheetName, boolean isXSSF, String targetPath)            throws Excel4JException, IOException {        try (FileOutputStream fos = new FileOutputStream(targetPath);             Workbook workbook = exportExcelNoTemplateHandler(data, clazz, isWriteHeader, sheetName, isXSSF)) {            workbook.write(fos);        }    }"}
{"id": "https://github.com/spotbugs/spotbugs/blob/f6365c6eea6515035bded38efa4a7c8b46ccf28c/eclipsePlugin/src/de/tobject/findbugs/view/BugInfoView.java#L625-L639", "method_name": "removeHtmlMarkup", "code": "    private static String removeHtmlMarkup(String html) {        // replace any amount of white space with newline between through one        // space        html = html.replaceAll(\"\\\\s*[\\\\n]+\\\\s*\", \" \");        // remove all valid html tags        html = html.replaceAll(\"<[a-zA-Z]+>\", \"\\n\");        html = html.replaceAll(\"</[a-zA-Z]+>\", \"\");        // convert some of the entities which are used in current FB        // messages.xml        html = html.replaceAll(\"&nbsp;\", \"\");        html = html.replaceAll(\"&lt;\", \"<\");        html = html.replaceAll(\"&gt;\", \">\");        html = html.replaceAll(\"&amp;\", \"&\");        return html.trim();    }"}
{"id": "https://github.com/astrapi69/jaulp-wicket/blob/85d74368d00abd9bb97659b5794e38c0f8a013d4/jaulp-wicket-components/src/main/java/de/alpharogroup/wicket/components/factory/ComponentFactory.java#L71-L76", "method_name": "newCheckBox", "code": "\tpublic static CheckBox newCheckBox(final String id, final IModel<Boolean> model)\t{\t\tfinal CheckBox checkBox = new CheckBox(id, model);\t\tcheckBox.setOutputMarkupId(true);\t\treturn checkBox;\t}"}
{"id": "https://github.com/gocd/gocd/blob/59a8480e23d6c06de39127635108dff57603cb71/commandline/src/main/java/com/thoughtworks/go/util/command/CommandLine.java#L232-L240", "method_name": "setWorkingDirectory", "code": "    public void setWorkingDirectory(String path) {        if (path != null) {            File dir = new File(path);            checkWorkingDir(dir);            workingDir = dir;        } else {            workingDir = null;        }    }"}
{"id": "https://github.com/netty/netty/blob/ba06eafa1c1824bd154f1a380019e7ea2edf3c4c/microbench/src/main/java/io/netty/microbenchmark/common/IsValidIpV6Benchmark.java#L41-L53", "method_name": "isValidIp4Word", "code": "    private static boolean isValidIp4Word(String word) {        char c;        if (word.length() < 1 || word.length() > 3) {            return false;        }        for (int i = 0; i < word.length(); i++) {            c = word.charAt(i);            if (!(c >= '0' && c <= '9')) {                return false;            }        }        return Integer.parseInt(word) <= 255;    }"}
{"id": "https://github.com/exoplatform/jcr/blob/3e7f9ee1b5683640d73a4316fb4b0ad5eac5b8a2/exo.jcr.component.webdav/src/main/java/org/exoplatform/services/jcr/webdav/WebDavConst.java#L540-L551", "method_name": "getStatusDescription", "code": "   public static String getStatusDescription(int status)   {      String description = \"\";      Integer statusKey = new Integer(status);      if (statusDescriptions.containsKey(statusKey))      {         description = statusDescriptions.get(statusKey);      }      return String.format(\"%s %d %s\", WebDavConst.HTTPVER, status, description);   }"}
{"id": "https://github.com/hazelcast/hazelcast/blob/8c4bc10515dbbfb41a33e0302c0caedf3cda1baf/hazelcast/src/main/java/com/hazelcast/mapreduce/aggregation/impl/DistinctValuesAggregation.java#L53-L66", "method_name": "getCollator", "code": "    @Override    public Collator<Map.Entry<Integer, Set<DistinctType>>, Set<DistinctType>> getCollator() {        return new Collator<Map.Entry<Integer, Set<DistinctType>>, Set<DistinctType>>() {            @Override            public Set<DistinctType> collate(Iterable<Map.Entry<Integer, Set<DistinctType>>> values) {                Set<DistinctType> distinctValues = new HashSet<DistinctType>();                for (Map.Entry<Integer, Set<DistinctType>> value : values) {                    distinctValues.addAll(value.getValue());                }                return distinctValues;            }        };    }"}
{"id": "https://github.com/damiencarol/jsr203-hadoop/blob/d36a4b0c6498fc5d25ce79bd8c5bb69c6ef70057/src/main/java/hdfs/jsr203/HadoopFileSystem.java#L691-L763", "method_name": "copyFile", "code": "\tvoid copyFile(boolean deletesrc, byte[]src, byte[] dst, CopyOption... options)        throws IOException    {\t\tcheckWritable();        if (Arrays.equals(src, dst))            return;    // do nothing, src and dst are the same        beginWrite();        try {            ensureOpen();            org.apache.hadoop.fs.Path eSrc_path = new HadoopPath(this, src).getRawResolvedPath();            FileStatus eSrc = this.fs.getFileStatus(eSrc_path);            if (!this.fs.exists(eSrc_path))                throw new NoSuchFileException(getString(src));            if (eSrc.isDirectory()) {    // specification says to create dst directory                createDirectory(dst);                return;            }            boolean hasReplace = false;            boolean hasCopyAttrs = false;            for (CopyOption opt : options) {                if (opt == REPLACE_EXISTING)                    hasReplace = true;                else if (opt == COPY_ATTRIBUTES)                    hasCopyAttrs = true;            }            org.apache.hadoop.fs.Path eDst_path = new HadoopPath(this, dst).getRawResolvedPath();//            FileStatus eDst = this.fs.getFileStatus(eDst_path); //if eDst_path not exist, it will throw an error                if (fs.exists(eDst_path)) {                if (!hasReplace)                    throw new FileAlreadyExistsException(getString(dst));                if(!fs.delete(eDst_path, false)) {                \tthrow new AccessDeniedException(\"cannot delete hdfs file \" + getString(dst));                }            } else {                //checkParents(dst);            }                        //Simply use FileUtil.copy here. Can we use DistCp for very big files here? zongjie@novelbio.com            boolean isCanDeleteSourceFile = FileUtil.copy(fs, eSrc_path, fs, eDst_path, deletesrc, fs.getConf());            if (!isCanDeleteSourceFile) {            \tthrow new AccessDeniedException(\"cannot delete source file \" + eSrc_path.toString());            }            //            org.apache.hadoop.fs.Path[] srcs = new org.apache.hadoop.fs.Path[] {eSrc_path};//\t\t\tthis.fs.concat(eDst_path, srcs);                        /*            Entry u = new Entry(eSrc, Entry.COPY);    // copy eSrc entry            u.name(dst);                              // change name            if (eSrc.type == Entry.NEW || eSrc.type == Entry.FILECH)            {                u.type = eSrc.type;    // make it the same type                if (!deletesrc) {      // if it's not \"rename\", just take the data                    if (eSrc.bytes != null)                        u.bytes = Arrays.copyOf(eSrc.bytes, eSrc.bytes.length);                    else if (eSrc.file != null) {                        u.file = getTempPathForEntry(null);                        Files.copy(eSrc.file, u.file, REPLACE_EXISTING);                    }                }            }            if (!hasCopyAttrs)                u.mtime = u.atime= u.ctime = System.currentTimeMillis();            update(u);            if (deletesrc)                updateDelete(eSrc);*/        } finally {            endWrite();        }    }"}
{"id": "https://github.com/sdl/odata/blob/eb747d73e9af0f4e59a25b82ed656e526a7e2189/odata_renderer/src/main/java/com/sdl/odata/renderer/batch/ODataBatchRequestRenderer.java#L271-L288", "method_name": "getRenderedJSON", "code": "    private String getRenderedJSON(ProcessorResult result) throws ODataException {        LOG.debug(\"JSON found as the content type. JSON Renderer will be used to render the result data\");        JsonRenderer renderer = new JsonRenderer();        ODataResponse.Builder builder = new ODataResponse.Builder()                .setStatus(result.getStatus());        renderer.render(result.getRequestContext(), result.getQueryResult(), builder);        try {            // pretty print            ObjectMapper objectMapper = new ObjectMapper();            Object jsonObject = objectMapper.readValue(builder.build().getBodyText(StandardCharsets.UTF_8.name()),                    Object.class);            return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonObject);        } catch (IOException ex) {            throw new ODataBatchRendererException(\"Unable to pretty print following json data\");        }    }"}
{"id": "https://github.com/searchbox-io/Jest/blob/42f0a97acc45582baf5e8ecd7ccbbc5ac0c111fc/jest-common/src/main/java/io/searchbox/client/JestResult.java#L138-L141", "method_name": "setJsonMap", "code": "    public void setJsonMap(Map<String, Object> resultMap) {        String json = gson.toJson(resultMap, Map.class);        setJsonObject(new JsonParser().parse(json).getAsJsonObject());    }"}
{"id": "https://github.com/srikalyc/Sql4D/blob/2c052fe60ead5a16277c798a3440de7d4f6f24f6/Sql4Ddriver/src/main/java/com/yahoo/sql4d/sql4ddriver/DruidNodeAccessor.java#L133-L143", "method_name": "postJson", "code": "    public CloseableHttpResponse postJson(String url, String json, Map<String, String> reqHeaders) throws IOException {        CloseableHttpClient req = getClient();        CloseableHttpResponse resp = null;        HttpPost post = new HttpPost(url);        addHeaders(post, reqHeaders);        post.setHeader(json, url);        StringEntity input = new StringEntity(json, ContentType.APPLICATION_JSON);        post.setEntity(input);        resp = req.execute(post);        return resp;    }"}
{"id": "https://github.com/Stratio/bdt/blob/55324d19e7497764ad3dd7139923e13eb9841d75/src/main/java/com/stratio/qa/specs/CommonG.java#L2120-L2167", "method_name": "connectToPostgreSQLDatabase", "code": "    public void connectToPostgreSQLDatabase(String database, String host, String port, String user, String password, Boolean secure, String ca, String crt, String key) throws SQLException {        if (port.startsWith(\"[\")) {            port = port.substring(1, port.length() - 1);        }        if (!secure) {            if (password == null) {                password = \"stratio\";            }            try {                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, user, password);            } catch (SQLException se) {                // log the exception                this.getLogger().error(se.getMessage());                // re-throw the exception                throw se;            }        } else {            Properties props = new Properties();            if (user != null) {                props.setProperty(\"user\", user);            }            if (ca != null) {                props.setProperty(\"sslrootcert\", ca);            }            if (crt != null) {                props.setProperty(\"sslcert\", crt);            }            if (key != null) {                props.setProperty(\"sslkey\", key);            }            props.setProperty(\"password\", \"null\");            props.setProperty(\"ssl\", \"true\");            props.setProperty(\"sslmode\", \"verify-full\");            try {                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, props);            } catch (SQLException se) {                // log the exception                this.getLogger().error(se.getMessage());                // re-throw the exception                throw se;            }        }    }"}
{"id": "https://github.com/jbake-org/jbake/blob/beb9042a54bf0eb168821d524c88b9ea0bee88dc/jbake-core/src/main/java/org/jbake/app/Asset.java#L79-L91", "method_name": "copySingleFile", "code": "    public void copySingleFile(File asset) {        try {            if ( !asset.isDirectory() ) {                String targetPath = config.getDestinationFolder().getCanonicalPath() + File.separatorChar + assetSubPath(asset);                LOGGER.info(\"Copying single asset file to [{}]\", targetPath);                copyFile(asset, new File(targetPath));            } else {                LOGGER.info(\"Skip copying single asset file [{}]. Is a directory.\", asset.getPath());            }        } catch (IOException io) {            LOGGER.error(\"Failed to copy the asset file.\", io);        }    }"}
{"id": "https://github.com/hal/core/blob/d6d03f0bb128dc0470f5dc75fdb1ea1014400602/gui/src/main/java/org/jboss/as/console/client/administration/accesscontrol/ui/ScopedRoleDialog.java#L126-L184", "method_name": "asWidget", "code": "    public Widget asWidget() {        TextBoxItem name = new TextBoxItem(\"name\", \"Name\", true);        ComboBoxItem baseRole = new ComboBoxItem(\"baseRole\", \"Base Role\");        baseRole.setDefaultToFirstOption(true);        Collection<String> roleNames = Collections2.transform(StandardRole.values(), StandardRole::getId);        baseRole.setValueMap(roleNames);        ComboBoxItem type = new ComboBoxItem(\"type\", \"Type\");        type.setDefaultToFirstOption(true);        type.setValueMap(new String[]{\"Host\", \"Server Group\"});        ListItem scope = new ListItem(\"scope\", \"Scope\");        scope.setRequired(true);        CheckBoxItem includeAll = new CheckBoxItem(\"includeAll\", \"Include All\");        Form<RoleBean> form = new Form<>(RoleBean.class);        if (scoped) {            form.setFields(name, baseRole, type, scope, includeAll);        } else {            form.setFields(name, includeAll);        }        if (this.existingRole != null) {            name.setEnabled(false);            type.setEnabled(false);            form.edit(modelToBean(existingRole));        }        form.addFormValidator((formItems, outcome) -> {            if (existingRole == null && duplicateNameAndType(beanToModel(form.getUpdatedEntity()))) {                outcome.addError(\"name\");                name.setErrMessage(\"Role already exists\");                name.setErroneous(true);            }        });        VerticalPanel layout = new VerticalPanel();        layout.setStyleName(\"window-content\");        layout.add(new HelpPanel().asWidget());        layout.add(form.asWidget());        DialogueOptions options = new DialogueOptions(                event -> {                    FormValidation validation = form.validate();                    if (!validation.hasErrors()) {                        if (existingRole == null) {                            circuit.dispatch(new AddScopedRole(beanToModel(form.getUpdatedEntity())));                        } else if (existingRole.isScoped()) {                            circuit.dispatch(new ModifyScopedRole(beanToModel(form.getUpdatedEntity())));                        } else {                            circuit.dispatch(new ModifyStandardRole(beanToModel(form.getUpdatedEntity())));                        }                        presenter.closeWindow();                    }                },                event -> presenter.closeWindow()        );        return new WindowContentBuilder(layout, options).build();    }"}
{"id": "https://github.com/apache/groovy/blob/71cf20addb611bb8d097a59e395fd20bc7f31772/src/main/java/org/codehaus/groovy/runtime/IOGroovyMethods.java#L841-L844", "method_name": "getText", "code": "    public static String getText(Reader reader) throws IOException {        BufferedReader bufferedReader = new BufferedReader(reader);        return getText(bufferedReader);    }"}
{"id": "https://github.com/bladecoder/blade-ink/blob/930922099f7073f50f956479adaa3cbd47c70225/src/main/java/com/bladecoder/ink/runtime/Stopwatch.java#L103-L111", "method_name": "getElapsedHours", "code": "\tpublic long getElapsedHours() {\t\tlong elapsed;\t\tif (running) {\t\t\telapsed = (System.nanoTime() - startTime);\t\t} else {\t\t\telapsed = (stopTime - startTime);\t\t}\t\treturn elapsed / nsPerHh;\t}"}
{"id": "https://github.com/epam/JDI/blob/abc01be4b1c07bf545bbea1eee51c98051b05357/Java/JDI/jdi-commons/src/main/java/com/epam/commons/EnumUtils.java#L63-L65", "method_name": "extends", "code": "    public static <T extends Enum> List<String> getAllEnumNames(Class<T> enumValue) {        return LinqUtils.select(getAllEnumValuesAsArray(enumValue), EnumUtils::getEnumValue);    }"}
{"id": "https://github.com/Samsung/GearVRf/blob/05034d465a7b0a494fabb9e9f2971ac19392f32d/GVRf/Framework/framework/src/main/java/org/gearvrf/utility/TextFile.java#L101-L124", "method_name": "readTextFile", "code": "    private static String readTextFile(BufferedReader reader) {        StringBuilder text = new StringBuilder();        try {            char[] buffer = new char[8192]; // default BufferedReader size            int read;            while ((read = reader.read(buffer)) >= 0) {                if (read > 0) {                    text.append(buffer, 0, read);                }            }        } catch (IOException e) {            e.printStackTrace();            return null;        } finally {            try {                reader.close();            } catch (IOException e) {                e.printStackTrace();            }        }        return text.toString();    }"}
{"id": "https://github.com/defei/codelogger-utils/blob/d906f5d217b783c7ae3e53442cd6fb87b20ecc0a/src/main/java/org/codelogger/utils/StringUtils.java#L463-L466", "method_name": "reverse", "code": "  public static String reverse(final String string) {    return isEmpty(string) ? string : new StringBuilder(string).reverse().toString();  }"}
{"id": "https://github.com/aol/cyclops/blob/59a9fde30190a4d1faeb9f6d9851d209d82b81dd/cyclops-futurestream/src/main/java/com/oath/cyclops/internal/react/async/future/PipelineBuilder.java#L33-L40", "method_name": "memoize", "code": "    private <T, R> Function<T, R> memoize(final Function<T, R> fn) {        if (!autoMemoize)            return fn;        if (memoizeFactory == null)            return Memoize.memoizeFunction(fn);        return Memoize.memoizeFunction(fn, memoizeFactory);    }"}
{"id": "https://github.com/biojava/biojava/blob/a1c71a8e3d40cc32104b1d387a3d3b560b43356e/biojava-structure/src/main/java/org/biojava/nbio/structure/symmetry/core/SystematicSolver.java#L72-L98", "method_name": "solve", "code": "\tprivate void solve() {\t\tinitialize();\t\tint n = subunits.getSubunitCount();\t\tPermutationGenerator g = new PermutationGenerator(n);\t\t// loop over all permutations\t\twhile (g.hasMore()) {\t\t\tint[] perm = g.getNext();\t\t\tList<Integer> permutation = new ArrayList<Integer>(perm.length);\t\t\tfor (int j = 0; j < n; j++) {\t\t\t\tpermutation.add(perm[j]);\t\t\t}\t\t\tif (! isValidPermutation(permutation)) {\t\t\t\tcontinue;\t\t\t}\t\t\tboolean newPermutation = evaluatePermutation(permutation);\t\t\tif (newPermutation) {\t\t\t\tcompleteRotationGroup();\t\t\t}\t\t\tif (rotations.getOrder() >= subunits.getSubunitCount()) {\t\t\t\treturn;\t\t\t}\t\t}\t}"}
{"id": "https://github.com/ios-driver/ios-driver/blob/a9744419508d970fbb1ce18e4326cc624b237c8b/server/src/main/java/org/uiautomation/ios/application/IPAApplication.java#L94-L142", "method_name": "extractFolder", "code": "  private static String extractFolder(File zipFile) throws ZipException, IOException {    int BUFFER = 2048;    ZipFile zip = new ZipFile(zipFile);    String newPath = getExtractedFolder(zipFile).getAbsolutePath();    new File(newPath).mkdir();    Enumeration zipFileEntries = zip.entries();    // Process each entry    while (zipFileEntries.hasMoreElements()) {      // grab a zip file entry      ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();      String currentEntry = entry.getName();      File destFile = new File(newPath, currentEntry);      //destFile = new File(newPath, destFile.getName());      File destinationParent = destFile.getParentFile();      // create the parent directory structure if needed      destinationParent.mkdirs();      if (!entry.isDirectory()) {        BufferedInputStream is = new BufferedInputStream(zip                                                             .getInputStream(entry));        int currentByte;        // establish buffer for writing file        byte data[] = new byte[BUFFER];        // write the current file to disk        FileOutputStream fos = new FileOutputStream(destFile);        BufferedOutputStream dest = new BufferedOutputStream(fos,                                                             BUFFER);        // read and write until last byte is encountered        while ((currentByte = is.read(data, 0, BUFFER)) != -1) {          dest.write(data, 0, currentByte);        }        dest.flush();        dest.close();        is.close();      }      if (currentEntry.endsWith(\".zip\")) {        // found a zip file, try to open        extractFolder(destFile);      }    }    return newPath;  }"}
{"id": "https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/primitive/CharScanner.java#L1617-L1619", "method_name": "findString", "code": "    public static int findString(String matchString, int startIndex, char[] line) {        return findChars(FastStringUtils.toCharArray(matchString), startIndex, line);    }"}
{"id": "https://github.com/facebookarchive/hadoop-20/blob/2a29bc6ecf30edb1ad8dbde32aa49a317b4d44f4/src/mapred/org/apache/hadoop/mapreduce/Job.java#L91-L94", "method_name": "setWorkingDirectory", "code": "  public void setWorkingDirectory(Path dir) throws IOException {    ensureState(JobState.DEFINE);    conf.setWorkingDirectory(dir);  }"}
{"id": "https://github.com/xmlet/XsdAsmFaster/blob/ccb78f9dd4b957ad5ac1ca349eaf24338c421e94/src/main/java/org/xmlet/xsdasmfaster/classes/XsdAsmUtils.java#L273-L285", "method_name": "getEnumElementName", "code": "    static String getEnumElementName(XsdEnumeration enumElem) {        String value = enumElem.getValue();        if (value.equals(\"\")){            return \"EMPTY\";        }        if (value.matches(\"-?\\\\d*[,|.]?\\\\d*\")){            return \"_\" + value;        }        return enumElem.getValue().toUpperCase().replaceAll(\"[^a-zA-Z0-9]\", \"_\");    }"}
{"id": "https://github.com/datumbox/datumbox-framework/blob/909dff0476e80834f05ecdde0624dd2390e9b0ca/datumbox-framework-applications/src/main/java/com/datumbox/framework/applications/nlp/CETR.java#L137-L156", "method_name": "extract", "code": "    public String extract(String html, CETR.Parameters parameters) {        html = clearText(html); //preprocess the Document by removing irrelevant HTML tags and empty lines and break the document to its lines        List<String> rows = extractRows(html); //                List<Integer> selectedRowIds = selectRows(rows, parameters);                StringBuilder sb = new StringBuilder(html.length());        for(Integer rowId : selectedRowIds) {            String row = rows.get(rowId);                        //extract the clear text from the selected row            row = StringCleaner.removeExtraSpaces(HTMLParser.extractText(row));            if(row.isEmpty()) {                continue;            }            sb.append(row).append(\" \");        }                return sb.toString().trim();    }"}
{"id": "https://github.com/codescape/bitvunit/blob/cef6d9af60d684e41294981c10b6d92c8f063a4e/bitvunit-core/src/main/java/de/codescape/bitvunit/util/html/HtmlPageUtil.java#L89-L98", "method_name": "toHtmlPage", "code": "    public static HtmlPage toHtmlPage(WebDriver webDriver) {        try {            return HTMLParser.parseHtml(                    new StringWebResponse(webDriver.getPageSource(), new URL(webDriver.getCurrentUrl())),                    new WebClient().getCurrentWindow()            );        } catch (IOException e) {            throw new RuntimeException(\"Error creating HtmlPage from WebDriver.\", e);        }    }"}
{"id": "https://github.com/ios-driver/ios-driver/blob/a9744419508d970fbb1ce18e4326cc624b237c8b/server/src/main/java/org/uiautomation/ios/utils/FolderMonitor.java#L128-L135", "method_name": "unzipToWatchedFolder", "code": "  private void unzipToWatchedFolder(File file) {    log.info(\"Unzipping... \" + file.getName());    try {      ZipUtils.unzip(file, new File(iosServerConfiguration.getAppFolderToMonitor()));    } catch (IOException e) {      log.warning(\"Problem unzipping \" + file.getAbsolutePath() + \", \" + e.toString());    }  }"}
{"id": "https://github.com/kocakosm/pitaya/blob/f2b203b6cdb32723bd1249a1325a3bb5918bf99a/src/org/kocakosm/pitaya/time/Dates.java#L318-L322", "method_name": "format", "code": "\tpublic static String format(Date date, String format)\t{\t\tParameters.checkNotNull(date);\t\treturn new SimpleDateFormat(format).format(date);\t}"}
{"id": "https://github.com/jbundle/jbundle/blob/4037fcfa85f60c7d0096c453c1a3cd573c2b0abc/base/screen/view/html/src/main/java/org/jbundle/base/screen/view/html/HBasePanel.java#L237-L244", "method_name": "printHtmlFooter", "code": "    public void printHtmlFooter(PrintWriter out, ResourceBundle reg)    {        String strHTML = reg.getString(\"htmlFooter\");        if ((strHTML == null) || (strHTML.length() == 0))            strHTML = \"</body>\\n</html>\";        out.println(strHTML);        out.flush();    }"}
{"id": "https://github.com/RestComm/media-core/blob/07b8703343708599f60af66bae62aded77ee81b5/network/src/main/java/org/restcomm/media/core/network/deprecated/IPAddressCompare.java#L70-L79", "method_name": "getAddressType", "code": "    public static IPAddressType getAddressType(String ipAddress)    {    \tif(IPAddressUtil.isIPv4LiteralAddress(ipAddress))    \t\treturn IPAddressType.IPV4;    \t    \tif(IPAddressUtil.isIPv6LiteralAddress(ipAddress))    \t\treturn IPAddressType.IPV6;    \t    \treturn IPAddressType.INVALID;    }"}
{"id": "https://github.com/CloudSlang/cs-actions/blob/9a1be1e99ad88286a6c153d5f2275df6ae1a57a1/cs-xml/src/main/java/io/cloudslang/content/xml/services/ConvertXmlToJsonService.java#L75-L83", "method_name": "prettyPrint", "code": "    private String prettyPrint(final JsonObject rootJson, final boolean prettyPrint) {        if (prettyPrint) {            final Gson gson = new GsonBuilder().setPrettyPrinting()                    .disableHtmlEscaping()                    .create();            return gson.toJson(rootJson);        }        return rootJson.toString();    }"}
{"id": "https://github.com/TheHortonMachine/hortonmachine/blob/d2b436bbdf951dc1fda56096a42dbc0eae4d35a5/gui/src/main/java/org/hortonmachine/gui/utils/GuiUtilities.java#L243-L247", "method_name": "getFromClipboard", "code": "    public static String getFromClipboard() throws Exception {        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();        String string = (String) clipboard.getData(DataFlavor.stringFlavor);        return string;    }"}
{"id": "https://github.com/h2oai/h2o-3/blob/845eb49dfeaadf638b6e2f779d82fac996391fad/h2o-core/src/main/java/water/rapids/ast/prims/string/algorithms/H2OJaroWinklerComparator.java#L38-L128", "method_name": "similarity", "code": "  public static double similarity(String s1, String s2) {    if (s1.equals(s2))      return 1.0;    // ensure that s1 is shorter than or same length as s2    if (s1.length() > s2.length()) {      String tmp = s2;      s2 = s1;      s1 = tmp;    }    /*     * this list of Boolean values is used for avoiding duplicated count of     * common characters in S2     */    List<Boolean> isCommonCharInS2 = new ArrayList<Boolean>();    for (int i=0; i<s2.length(); i++) {      isCommonCharInS2.add(false);    }    // (1) find the number of characters the two strings have in common.    // note that matching characters can only be half the length of the    // longer string apart.    int maxdist = (int) Math.floor(s2.length() / 2) ;    int c = 0; // count of common characters    int t = 0; // count of transpositions    int prevpos = -1;    for (int ix = 0; ix < s1.length(); ix++) {      char ch = s1.charAt(ix);      // now try to find it in s2      for (int ix2 = Math.max(0, ix - maxdist);           ix2 < Math.min(s2.length(), ix + maxdist);           ix2++) {        if (ch == s2.charAt(ix2) && !isCommonCharInS2.get(ix2)) {          c++; // we found a common character          isCommonCharInS2.set(ix2, true);          if (prevpos != -1 && ix2 < prevpos)            t++; // moved back before earlier          prevpos = ix2;          break;        }      }    }    // we don't divide t by 2 because as far as we can tell, the above    // code counts transpositions directly.    // System.out.println(\"c: \" + c);    // System.out.println(\"t: \" + t);    // System.out.println(\"c/m: \" + (c / (double) s1.length()));    // System.out.println(\"c/n: \" + (c / (double) s2.length()));    // System.out.println(\"(c-t)/c: \" + ((c - t) / (double) c));    // we might have to give up right here    if (c == 0)      return 0.0;    // first compute the score    double score = ((c / (double) s1.length()) +            (c / (double) s2.length()) +            ((c - t) / (double) c)) / 3.0;    // (2) common prefix modification    int p = 0; // length of prefix    int last = Math.min(4, s1.length());    for (; p < last && s1.charAt(p) == s2.charAt(p); p++)      ;    score = score + ((p * (1 - score)) / 10);    // (3) longer string adjustment    // I'm confused about this part. Winkler's original source code includes    // it, and Yancey's 2005 paper describes it. However, Winkler's list of    // test cases in his 2006 paper does not include this modification. So    // is this part of Jaro-Winkler, or is it not? Hard to say.    //    //   if (s1.length() >= 5 && // both strings at least 5 characters long    //       c - p >= 2 && // at least two common characters besides prefix    //       c - p >= ((s1.length() - p) / 2)) // fairly rich in common chars    //     {    //     System.out.println(\"ADJUSTED!\");    //     score = score + ((1 - score) * ((c - (p + 1)) /    //                                     ((double) ((s1.length() + s2.length())    //                                                - (2 * (p - 1))))));    // }    // (4) similar characters adjustment    // the same holds for this as for (3) above.    return score;  }"}
{"id": "https://github.com/apache/flink/blob/b62db93bf63cb3bb34dd03d611a779d9e3fc61ac/flink-core/src/main/java/org/apache/flink/configuration/Configuration.java#L895-L902", "method_name": "convertToBoolean", "code": "\tprivate boolean convertToBoolean(Object o) {\t\tif (o.getClass() == Boolean.class) {\t\t\treturn (Boolean) o;\t\t}\t\telse {\t\t\treturn Boolean.parseBoolean(o.toString());\t\t}\t}"}
{"id": "https://github.com/jtablesaw/tablesaw/blob/68a75b4098ac677e9486df5572cf13ec39f9f701/core/src/main/java/tech/tablesaw/api/IntColumn.java#L273-L282", "method_name": "countUnique", "code": "    @Override    public int countUnique() {        IntSet uniqueElements = new IntOpenHashSet();        for (int i = 0; i < size(); i++) {            if (!isMissingValue(getInt(i))) {                uniqueElements.add(getInt(i));            }        }        return uniqueElements.size();    }"}
{"id": "https://github.com/hibegin/simplewebserver/blob/262df49e1cd75df8d8c6469ac55204208ff8eeec/src/main/java/com/hibegin/http/server/util/StringsUtil.java#L5-L7", "method_name": "getHtmlStrByStatusCode", "code": "    public static String getHtmlStrByStatusCode(int statusCode) {        return \"<html><head><title>\" + statusCode + \" \" + StatusCodeUtil.getStatusCode(statusCode) + \"</title></head><body><center><h1>\" + statusCode + \" \" + StatusCodeUtil.getStatusCode(statusCode) + \"</h1></center><hr><center>\" + ServerInfo.getName() + \"/\" + ServerInfo.getVersion() + \"</center></body></html>\";    }"}
{"id": "https://github.com/GerdHolz/TOVAL/blob/036922cdfd710fa53b18e5dbe1e07f226f731fde/src/de/invation/code/toval/math/MathUtils.java#L30-L42", "method_name": "binCoeff", "code": "        public static long binCoeff(int n, int k) {\r                if (k > n) {\r                        return 0;\r                }\r                if (k == 0 || k == n) {\r                        return 1;\r                }\r                long result = 1;\r                for (int i = 1; i <= k; i++) {\r                        result *= (n - i + 1) / i;\r                }\r                return result;\r        }\r"}
{"id": "https://github.com/alibaba/otter/blob/c7b5f94a0dd162e01ddffaf3a63cade7d23fca55/shared/common/src/main/java/com/alibaba/otter/shared/common/utils/AddressUtils.java#L124-L164", "method_name": "getHostAddress", "code": "    public static InetAddress getHostAddress() {        InetAddress localAddress = null;        try {            localAddress = InetAddress.getLocalHost();            if (isValidHostAddress(localAddress)) {                return localAddress;            }        } catch (Throwable e) {            logger.warn(\"Failed to retriving local host ip address, try scan network card ip address. cause: \"                        + e.getMessage());        }        try {            Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();            if (interfaces != null) {                while (interfaces.hasMoreElements()) {                    try {                        NetworkInterface network = interfaces.nextElement();                        Enumeration<InetAddress> addresses = network.getInetAddresses();                        if (addresses != null) {                            while (addresses.hasMoreElements()) {                                try {                                    InetAddress address = addresses.nextElement();                                    if (isValidHostAddress(address)) {                                        return address;                                    }                                } catch (Throwable e) {                                    logger.warn(\"Failed to retriving network card ip address. cause:\" + e.getMessage());                                }                            }                        }                    } catch (Throwable e) {                        logger.warn(\"Failed to retriving network card ip address. cause:\" + e.getMessage());                    }                }            }        } catch (Throwable e) {            logger.warn(\"Failed to retriving network card ip address. cause:\" + e.getMessage());        }        logger.error(\"Could not get local host ip address, will use 127.0.0.1 instead.\");        return localAddress;    }"}
{"id": "https://github.com/MKLab-ITI/simmo/blob/a78436e982e160fb0260746c563c7e4d24736486/src/main/java/gr/iti/mklab/simmo/impl/posts/RSSPost.java#L38-L44", "method_name": "extractDocumentContent", "code": "\tprivate String extractDocumentContent(String htmlContent){\r\t\torg.jsoup.nodes.Document doc = Jsoup.parse(htmlContent);\r\t\t\r\t\tString content = doc.body().text();\r\t\t\r\t\treturn content;\r\t}\r"}
{"id": "https://github.com/Teddy-Zhu/SilentGo/blob/27f58b0cafe56b2eb9fc6993efa9ca2b529661e1/orm/src/main/java/com/silentgo/orm/source/druid/DruidPool.java#L31-L51", "method_name": "getDBConnect", "code": "    @Override    public synchronized DBConnect getDBConnect() {        try {            DBConnect connect = threadConnect.get();            if (connect == null) {                connect = new DruidConnect(ds.getConnection());                LOGGER.info(\"druid debug ------ create common connect : {}\", connect);                threadConnect.set(connect);            } else {                if (!connect.getConnect().isValid(3000) || connect.getConnect().isClosed()) {                    connect = new DruidConnect(ds.getConnection());                    LOGGER.info(\"druid debug ------ create common connect : {}\", connect);                    threadConnect.set(connect);                }            }            return connect;        } catch (SQLException e) {            LOGGER.error(e, \"get druid connect error\");            return null;        }    }"}
{"id": "https://github.com/apache/incubator-heron/blob/776abe2b5a45b93a0eb957fd65cbc149d901a92a/heron/schedulers/src/java/org/apache/heron/scheduler/utils/HttpJsonClient.java#L118-L138", "method_name": "post", "code": "  public void post(String jsonBody, Integer expectedResponseCode) throws IOException {    HttpURLConnection conn = getUrlConnection();    try {      // send post request with json body for the topology      if (!NetworkUtils.sendHttpPostRequest(conn, NetworkUtils.JSON_TYPE, jsonBody.getBytes())) {        throw new IOException(\"Failed to send POST to \" + endpointURI);      }      // check the response      if (!NetworkUtils.checkHttpResponseCode(conn, expectedResponseCode)) {        byte[] bytes = NetworkUtils.readHttpResponse(conn);        LOG.log(Level.SEVERE, \"Failed to send POST request to endpoint\");        LOG.log(Level.SEVERE, new String(bytes));        throw new IOException(\"Unexpected response from connection. Expected \"            + expectedResponseCode + \" but received \" + conn.getResponseCode());      }    } finally {      conn.disconnect();    }  }"}
{"id": "https://github.com/JRebirth/JRebirth/blob/93f4fc087b83c73db540333b9686e97b4cec694d/org.jrebirth.af/core/src/main/java/org/jrebirth/af/core/resource/i18n/MessageBuilder.java#L94-L113", "method_name": "readPropertiesFiles", "code": "    private void readPropertiesFiles() {\r\r        if (this.messageFileWildcard.isEmpty() || !CoreParameters.LOG_RESOLUTION.get()) {\r            // Skip configuration loading\r            LOGGER.info(JRebirthMarkers.MESSAGE, \"Messages Loading is skipped\");\r\r        } else {\r            // Assemble the regex pattern\r            final Pattern filePattern = Pattern.compile(this.messageFileWildcard + \"\\\\.properties\");\r\r            // Retrieve all resources from default classpath\r            final Collection<String> list = ClasspathUtility.getClasspathResources(filePattern);\r\r            LOGGER.info(JRebirthMarkers.MESSAGE, \"{} Messages file{} found.\", list.size(), list.size() > 1 ? \"s\" : \"\");\r\r            for (final String rbFilename : list) {\r                readPropertiesFile(rbFilename);\r            }\r        }\r    }\r"}
{"id": "https://github.com/Metatavu/edelphi/blob/d91a0b54f954b33b4ee674a1bdf03612d76c3305/edelphi/src/main/java/fi/metatavu/edelphi/utils/QueryDataUtils.java#L256-L270", "method_name": "writeCsv", "code": "  private static byte[] writeCsv(String[] columnHeaders, String[][] rows) throws IOException {    try (ByteArrayOutputStream csvStream = new ByteArrayOutputStream(); OutputStreamWriter streamWriter = new OutputStreamWriter(csvStream, Charset.forName(\"UTF-8\"))) {      CSVWriter csvWriter = new CSVWriter(streamWriter, ',');      csvWriter.writeNext(columnHeaders);            for (String[] row : rows) {        csvWriter.writeNext(row);      }      csvWriter.close();            return csvStream.toByteArray();    }  }"}
{"id": "https://github.com/CODAIT/stocator/blob/35969cadd2e8faa6fdac45e8bec1799fdd3d8299/src/main/java/com/ibm/stocator/fs/ObjectStoreFileSystem.java#L407-L411", "method_name": "setWorkingDirectory", "code": "  @Override  public void setWorkingDirectory(Path new_dir) {    LOG.debug(\"set working directory: {}\", new_dir.toString());    storageClient.setWorkingDirectory(new_dir);  }"}
{"id": "https://github.com/oehf/ipf-oht-atna/blob/25ed1e926825169c94923a2c89a4618f60478ae8/auditor/src/main/java/org/openhealthtools/ihe/atna/auditor/utils/TimestampUtils.java#L36-L42", "method_name": "getRFC3881Timestamp", "code": "\tpublic static String getRFC3881Timestamp(Date date)\t{\t\t\t\tStringBuilder formattedDate = new StringBuilder(RFC3881_DATE_FORMATTER.format(date));\t\tformattedDate.insert((formattedDate.length()-2), ':');\t\treturn formattedDate.toString();\t}"}
{"id": "https://github.com/paypal/SeLion/blob/694d12d0df76db48d0360b16192770c6a4fbdfd2/client/src/main/java/com/paypal/selion/platform/html/CheckBox.java#L97-L109", "method_name": "check", "code": "    public void check() {        getDispatcher().beforeCheck(this);                RemoteWebElement e = (RemoteWebElement) getElement();        while (!e.isSelected()) {            e.click();        }        if (Config.getBoolConfigProperty(ConfigProperty.ENABLE_GUI_LOGGING)) {            logUIAction(UIActions.CHECKED);        }                getDispatcher().afterCheck(this);    }"}
{"id": "https://github.com/microfocus-idol/haven-search-components/blob/6f5df74ba67ec0d3f86e73bc1dd0d6edd01a8e44/hod/src/main/java/com/hp/autonomy/searchcomponents/hod/parametricvalues/HodParametricValuesServiceImpl.java#L282-L284", "method_name": "epochToZonedDateTime", "code": "    private ZonedDateTime epochToZonedDateTime(final double epochTime) {        return ZonedDateTime.ofInstant(Instant.ofEpochSecond((long)epochTime), ZoneOffset.UTC);    }"}
{"id": "https://github.com/TGIO/RNCryptorNative/blob/5209f10b988e4033c0b769a40b0d6cc99ea16af7/jncryptor/src/main/java/org/cryptonode/jncryptor/AES256JNCryptor.java#L478-L500", "method_name": "encryptData", "code": "  byte[] encryptData(byte[] plaintext, PasswordKey encryptionKey, PasswordKey hmacKey, byte[] iv) throws CryptorException {    try {      Cipher cipher = Cipher.getInstance(AES_CIPHER_ALGORITHM);      cipher.init(Cipher.ENCRYPT_MODE, encryptionKey.getKey(), new IvParameterSpec(iv));      byte[] ciphertext = cipher.doFinal(plaintext);      AES256v3Ciphertext output = new AES256v3Ciphertext(encryptionKey.getSalt(),          hmacKey.getSalt(), iv, ciphertext);      Mac mac = Mac.getInstance(HMAC_ALGORITHM);      mac.init(hmacKey.getKey());      byte[] hmac = mac.doFinal(output.getDataToHMAC());      output.setHmac(hmac);      return output.getRawData();    } catch (InvalidKeyException e) {      throw new CryptorException(          \"Caught InvalidKeyException. Do you have unlimited strength jurisdiction files installed?\",          e);    } catch (GeneralSecurityException e) {      throw new CryptorException(\"Failed to generate ciphertext.\", e);    }      }"}
{"id": "https://github.com/sdl/Testy/blob/b3ae061554016f926f04694a39ff00dab7576609/src/main/java/com/sdl/selenium/web/table/Table.java#L239-L243", "method_name": "check", "code": "    public void check(Cell... cells) {\r        CheckBox checkBox = new CheckBox(getRow(cells));\r        boolean selected = checkBox.isSelected() || checkBox.click();\r        assertThat(\"Could not checked \" + toString(), selected);\r    }\r"}
{"id": "https://github.com/phax/ph-math/blob/9f998870c7e05226e032b1f38c23e7d45ec0169d/ph-math/src/main/java/com/helger/numbercruncher/matrix/Matrix.java#L395-L409", "method_name": "multiply", "code": "  public Matrix multiply (final float k)  {    final float pv[][] = new float [m_nRows] [m_nCols]; // product values    // Compute values of the product.    for (int r = 0; r < m_nRows; ++r)    {      for (int c = 0; c < m_nCols; ++c)      {        pv[r][c] = k * m_aValues[r][c];      }    }    return new Matrix (pv);  }"}
{"id": "https://github.com/micronaut-projects/micronaut-core/blob/c31f5b03ce0eb88c2f6470710987db03b8967d5c/core/src/main/java/io/micronaut/core/cli/CommandLineParser.java#L81-L84", "method_name": "parse", "code": "    CommandLine parse(DefaultCommandLine cl, String[] args) {        parseInternal(cl, args, true);        return cl;    }"}
{"id": "https://github.com/ukase/ukase/blob/30f69cd2f950e15308b19a0ba788eb309933a4f4/core/src/main/java/com/github/ukase/service/PdfRenderer.java#L43-L59", "method_name": "render", "code": "    public byte[] render(String html) throws RenderException {        try {            log.debug(\"Start rendering pdf from html with size of \" + html.length());            ByteArrayOutputStream baos = new ByteArrayOutputStream();            PdfSaucerRenderer renderer = provider.getRenderer(html);            log.debug(\"Renderer prepared\");            renderer.createPDF(baos);            renderer.finishPDF();            log.debug(\"pdf rendered\");            return baos.toByteArray();        } catch (IOException|DocumentException e) {            throw new RenderException(\"Cannot render pdf\", e, \"pdf\");        }    }"}
{"id": "https://github.com/mangstadt/biweekly/blob/2e21350f85c13dfff52fdef98fdbebe2976fcf61/src/main/java/biweekly/util/com/google/ical/util/TimeUtils.java#L91-L110", "method_name": "convert", "code": "\tprivate static DateTimeValue convert(DateTimeValue time, TimeZone zone, int sense) {\t\tif (zone == null || zone.hasSameRules(ZULU) || time.year() == 0) {\t\t\treturn time;\t\t}\t\tTimeZone epochTz, dateTimeValueTz;\t\tif (sense > 0) {\t\t\t//time is in UTC; convert to time in zone provided\t\t\tepochTz = ZULU;\t\t\tdateTimeValueTz = zone;\t\t} else {\t\t\t//time is in local time; convert to UTC\t\t\tepochTz = zone;\t\t\tdateTimeValueTz = ZULU;\t\t}\t\tlong epochSeconds = secsSinceEpoch(time);\t\tlong timetMillis = timetMillisFromEpochSecs(epochSeconds, epochTz);\t\treturn toDateTimeValue(timetMillis, dateTimeValueTz);\t}"}
{"id": "https://github.com/ahome-it/lienzo-charts/blob/4237150a5758265eb19ce5b45e50b54fe0168616/src/main/java/com/ait/lienzo/charts/client/core/xy/label/XYChartLabelFormatter.java#L84-L103", "method_name": "cut", "code": "    private void cut(XYChartLabel label, double maxWidth, double maxHeight, double rotation)    {        String text = label.getLabel().getText();        // Cut text.        cutLabelText(label, maxWidth - 5, maxHeight - 5, rotation);        String cutText = label.getLabel().getText();        // If text is cut, add suffix characters.        if (text.length() != cutText.length())        {            label.getLabel().setText(label.getLabel().getText() + \"...\");        }        // TODO: Animate.        // animate(label, text, cutText, originalRotation);        // Move label to top.        label.getLabelContainer().moveToTop();    }"}
{"id": "https://github.com/Teddy-Zhu/SilentGo/blob/27f58b0cafe56b2eb9fc6993efa9ca2b529661e1/orm/src/main/java/com/silentgo/orm/source/jdbc/JDBCPool.java#L97-L105", "method_name": "restoreConnect", "code": "    private void restoreConnect(DBConnect connect) {        try {            connect.getConnect().setAutoCommit(true);            connect.getConnect().setTransactionIsolation(source.getConfig().getDefaultTranscationLevel());        } catch (SQLException e) {            e.printStackTrace();        }        connects.push((JDBCConnect) connect);    }"}
{"id": "https://github.com/akarnokd/akarnokd-xml/blob/57466a5a9cb455a13d7121557c165287b31ee870/src/main/java/hu/akarnokd/xml/XNElement.java#L1037-L1041", "method_name": "save", "code": "    public void save(File file) throws IOException {        try (FileOutputStream fout = new FileOutputStream(file)) {            save(fout);        }    }"}
{"id": "https://github.com/qsardb/qsardb-common/blob/6c5e8e79294bf2b634fb9c1debd5c0b081cc83e1/statistics/src/main/java/org/qsardb/statistics/ClassificationStatistics.java#L68-L81", "method_name": "makeConfusionMatrix", "code": "\tprivate void makeConfusionMatrix(Map<String, String> actual, Map<String, String> predicted) {\t\tconfusion = new int[categories.size()][categories.size()];\t\tfor (String k: predicted.keySet()) {\t\t\tfor (int i=0; i<categories.size(); ++i) {\t\t\t\tString ci = categories.get(i);\t\t\t\tfor (int j=0; j<categories.size(); ++j) {\t\t\t\t\tString cj = categories.get(j);\t\t\t\t\tif (ci.equals(actual.get(k)) && cj.equals(predicted.get(k))) {\t\t\t\t\t\tconfusion[i][j]++;\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t}\t}"}
{"id": "https://github.com/sagiegurari/fax4j/blob/42fa51acabe7bf279e27ab3dd1cf76146b27955f/src/main/java/org/fax4j/util/IOHelper.java#L332-L342", "method_name": "readTextFile", "code": "    public static String readTextFile(File file) throws IOException    {        //create reader to file (with default encoding)        InputStream inputStream=new FileInputStream(file);        Reader reader=IOHelper.createReader(inputStream,null);        //read text        String text=IOHelper.readTextStream(reader);                return text;    }"}
{"id": "https://github.com/cdk/cdk/blob/c3d0f16502bf08df50365fee392e11d7c9856657/base/data/src/main/java/org/openscience/cdk/AtomContainerSet.java#L412-L439", "method_name": "sortAtomContainers", "code": "    @Override    public void sortAtomContainers(final Comparator<IAtomContainer> comparator) {        // need to use boxed primitives as we can't customise sorting of int primitives        Integer[] indexes = new Integer[atomContainerCount];        for (int i = 0; i < indexes.length; i++)            indexes[i] = i;        // proxy the index comparison to the atom container comparator        Arrays.sort(indexes, new Comparator<Integer>() {            @Override            public int compare(Integer o1, Integer o2) {                return comparator.compare(atomContainers[o1], atomContainers[o2]);            }        });        // copy the original arrays (we could modify in place with swaps but this is cleaner)        IAtomContainer[] containersTmp = Arrays.copyOf(atomContainers, indexes.length);        Double[] multipliersTmp = Arrays.copyOf(multipliers, indexes.length);        // order the arrays based on the order of the indices        for (int i = 0; i < indexes.length; i++) {            atomContainers[i] = containersTmp[indexes[i]];            multipliers[i] = multipliersTmp[indexes[i]];        }    }"}
{"id": "https://github.com/actframework/actframework/blob/55a8f8b45e71159a79ec6e157c02f71700f8cd54/src/main/java/act/metric/SimpleMetricStore.java#L101-L107", "method_name": "onTimerStop", "code": "    @Override    public void onTimerStop(Timer timer) {        String name = timer.name();        long ns = timer.ns();        logger(name).trace(\"Timer[%s] stopped. Time elapsed: %sns\", name, ns);        onTimerStop_(name, ns);    }"}
{"id": "https://github.com/jamesagnew/hapi-fhir/blob/150a84d52fe691b7f48fcb28247c4bddb7aec352/hapi-fhir-structures-dstu3/src/main/java/org/hl7/fhir/dstu3/formats/JsonParser.java#L5518-L5588", "method_name": "parseCompartmentDefinitionProperties", "code": "  protected void parseCompartmentDefinitionProperties(JsonObject json, CompartmentDefinition res) throws IOException, FHIRFormatError {\r    parseDomainResourceProperties(json, res);\r    if (json.has(\"url\"))\r      res.setUrlElement(parseUri(json.get(\"url\").getAsString()));\r    if (json.has(\"_url\"))\r      parseElementProperties(json.getAsJsonObject(\"_url\"), res.getUrlElement());\r    if (json.has(\"name\"))\r      res.setNameElement(parseString(json.get(\"name\").getAsString()));\r    if (json.has(\"_name\"))\r      parseElementProperties(json.getAsJsonObject(\"_name\"), res.getNameElement());\r    if (json.has(\"title\"))\r      res.setTitleElement(parseString(json.get(\"title\").getAsString()));\r    if (json.has(\"_title\"))\r      parseElementProperties(json.getAsJsonObject(\"_title\"), res.getTitleElement());\r    if (json.has(\"status\"))\r      res.setStatusElement(parseEnumeration(json.get(\"status\").getAsString(), Enumerations.PublicationStatus.NULL, new Enumerations.PublicationStatusEnumFactory()));\r    if (json.has(\"_status\"))\r      parseElementProperties(json.getAsJsonObject(\"_status\"), res.getStatusElement());\r    if (json.has(\"experimental\"))\r      res.setExperimentalElement(parseBoolean(json.get(\"experimental\").getAsBoolean()));\r    if (json.has(\"_experimental\"))\r      parseElementProperties(json.getAsJsonObject(\"_experimental\"), res.getExperimentalElement());\r    if (json.has(\"date\"))\r      res.setDateElement(parseDateTime(json.get(\"date\").getAsString()));\r    if (json.has(\"_date\"))\r      parseElementProperties(json.getAsJsonObject(\"_date\"), res.getDateElement());\r    if (json.has(\"publisher\"))\r      res.setPublisherElement(parseString(json.get(\"publisher\").getAsString()));\r    if (json.has(\"_publisher\"))\r      parseElementProperties(json.getAsJsonObject(\"_publisher\"), res.getPublisherElement());\r    if (json.has(\"contact\")) {\r      JsonArray array = json.getAsJsonArray(\"contact\");\r      for (int i = 0; i < array.size(); i++) {\r        res.getContact().add(parseContactDetail(array.get(i).getAsJsonObject()));\r      }\r    };\r    if (json.has(\"description\"))\r      res.setDescriptionElement(parseMarkdown(json.get(\"description\").getAsString()));\r    if (json.has(\"_description\"))\r      parseElementProperties(json.getAsJsonObject(\"_description\"), res.getDescriptionElement());\r    if (json.has(\"purpose\"))\r      res.setPurposeElement(parseMarkdown(json.get(\"purpose\").getAsString()));\r    if (json.has(\"_purpose\"))\r      parseElementProperties(json.getAsJsonObject(\"_purpose\"), res.getPurposeElement());\r    if (json.has(\"useContext\")) {\r      JsonArray array = json.getAsJsonArray(\"useContext\");\r      for (int i = 0; i < array.size(); i++) {\r        res.getUseContext().add(parseUsageContext(array.get(i).getAsJsonObject()));\r      }\r    };\r    if (json.has(\"jurisdiction\")) {\r      JsonArray array = json.getAsJsonArray(\"jurisdiction\");\r      for (int i = 0; i < array.size(); i++) {\r        res.getJurisdiction().add(parseCodeableConcept(array.get(i).getAsJsonObject()));\r      }\r    };\r    if (json.has(\"code\"))\r      res.setCodeElement(parseEnumeration(json.get(\"code\").getAsString(), CompartmentDefinition.CompartmentType.NULL, new CompartmentDefinition.CompartmentTypeEnumFactory()));\r    if (json.has(\"_code\"))\r      parseElementProperties(json.getAsJsonObject(\"_code\"), res.getCodeElement());\r    if (json.has(\"search\"))\r      res.setSearchElement(parseBoolean(json.get(\"search\").getAsBoolean()));\r    if (json.has(\"_search\"))\r      parseElementProperties(json.getAsJsonObject(\"_search\"), res.getSearchElement());\r    if (json.has(\"resource\")) {\r      JsonArray array = json.getAsJsonArray(\"resource\");\r      for (int i = 0; i < array.size(); i++) {\r        res.getResource().add(parseCompartmentDefinitionCompartmentDefinitionResourceComponent(array.get(i).getAsJsonObject(), res));\r      }\r    };\r  }\r"}
{"id": "https://github.com/OryxProject/oryx/blob/684bac0af002d2619ced652b5339e239da48df93/framework/oryx-lambda-serving/src/main/java/com/cloudera/oryx/lambda/serving/ErrorResource.java#L38-L84", "method_name": "errorHTML", "code": "  @GET  @Produces(MediaType.TEXT_HTML)  public Response errorHTML(@Context HttpServletRequest request) {    StringBuilder html = new StringBuilder(1000);    html.append(\"<!DOCTYPE html>\" +        \"<html><head><title>Error</title>\" +        \"<style type=\\\"text/css\\\">\" +        \"body{background-color:#01596e} body,p{font-family:monospace;color:white}\" +        \"</style></head>\" +        \"<body>\");    html.append(\"<p><strong>Error\");    Number statusCode = (Number) request.getAttribute(RequestDispatcher.ERROR_STATUS_CODE);    if (statusCode != null) {      html.append(' ').append(statusCode);    }    html.append(\"</strong>\");    Object requestURI = request.getAttribute(RequestDispatcher.ERROR_REQUEST_URI);    if (requestURI != null) {      html.append(\" : \");      html.append(JspHelper.escapeXml(requestURI));    }    html.append(\"</p>\");    Object message = request.getAttribute(RequestDispatcher.ERROR_MESSAGE);    if (message != null) {      html.append(\"<p><strong>\");      html.append(JspHelper.escapeXml(message));      html.append(\"</strong></p>\");    }    Throwable throwable = (Throwable) request.getAttribute(RequestDispatcher.ERROR_EXCEPTION);    if (throwable != null) {      StringWriter sw = new StringWriter();      throwable.printStackTrace(new PrintWriter(sw));      html.append(\"<p><pre>\");      html.append(JspHelper.escapeXml(sw.toString()));      html.append(\"</pre></p>\");    }    html.append(\"</body></html>\");    Response.Status finalStatus = statusCode == null ?        Response.Status.OK : Response.Status.fromStatusCode(statusCode.intValue());    return Response.status(finalStatus).entity(html.toString()).build();  }"}
{"id": "https://github.com/datacleaner/DataCleaner/blob/9aa01fdac3560cef51c55df3cb2ac5c690b57639/desktop/ui/src/main/java/org/datacleaner/widgets/properties/AbstractMultipleCheckboxesPropertyWidget.java#L148-L166", "method_name": "addCheckBox", "code": "    protected JCheckBox addCheckBox(final E item, final boolean checked) {        final String name = getName(item);        DCCheckBox<E> checkBox = _checkBoxes.get(name);        if (checkBox != null) {            checkBox.setSelected(checked);            return checkBox;        }        checkBox = new DCCheckBox<>(name, checked);        checkBox.setValue(item);        checkBox.setOpaque(false);        checkBox.addListener(_changeListener);        _checkBoxes.put(name, checkBox);        add(checkBox);        updateVisibility();        updateUI();        return checkBox;    }"}
{"id": "https://github.com/btaz/data-util/blob/f01de64854c456a88a31ffbe8bac6d605151b496/src/main/java/com/btaz/util/files/FileCat.java#L18-L44", "method_name": "concatenate", "code": "    public static void concatenate(List<File> files, File concatenatedFile) {        BufferedWriter writer;        try {            writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(concatenatedFile.getAbsoluteFile(),                    false), DataUtilDefaults.charSet));            FileInputStream inputStream;            for(File input : files) {                inputStream = new FileInputStream(input);                BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream, \"UTF-8\"));                String line;                while((line = reader.readLine()) != null) {                    writer.write(line + DataUtilDefaults.lineTerminator);                }                inputStream.close();            }            writer.flush();            writer.close();        } catch (UnsupportedEncodingException e) {            throw new DataUtilException(e);        } catch (FileNotFoundException e) {            throw new DataUtilException(e);        } catch (IOException e) {            throw new DataUtilException(e);        }    }"}
{"id": "https://github.com/goldmansachs/gs-collections/blob/fa8bf3e103689efa18bca2ab70203e71cde34b52/collections/src/main/java/com/gs/collections/impl/bag/immutable/ImmutableArrayBag.java#L158-L182", "method_name": "newWithout", "code": "    public ImmutableBag<T> newWithout(T element)    {        int elementIndex = ArrayIterate.detectIndexWith(this.keys, Predicates2.equal(), element);        if (elementIndex > -1)        {            int distinctItemCount = this.sizeDistinct() - (this.counts[elementIndex] == 1 ? 1 : 0);            T[] newKeys = (T[]) new Object[distinctItemCount];            int[] newCounts = new int[distinctItemCount];            if (distinctItemCount == this.sizeDistinct())            {                System.arraycopy(this.keys, 0, newKeys, 0, distinctItemCount);                System.arraycopy(this.counts, 0, newCounts, 0, distinctItemCount);                newCounts[elementIndex]--;            }            else            {                System.arraycopy(this.keys, 0, newKeys, 0, elementIndex);                System.arraycopy(this.counts, 0, newCounts, 0, elementIndex);                System.arraycopy(this.keys, elementIndex + 1, newKeys, elementIndex, newKeys.length - elementIndex);                System.arraycopy(this.counts, elementIndex + 1, newCounts, elementIndex, newCounts.length - elementIndex);            }            return new ImmutableArrayBag<T>(newKeys, newCounts);        }        return this;    }"}
{"id": "https://github.com/json-path/JsonPath/blob/5a09489c3252b74bbf81992aadb3073be59c04f9/json-path/src/main/java/com/jayway/jsonpath/internal/ParseContextImpl.java#L58-L68", "method_name": "parse", "code": "    @Override    public DocumentContext parse(File json) throws IOException {        notNull(json, \"json file can not be null\");        FileInputStream fis = null;        try {            fis = new FileInputStream(json);            return parse(fis);        } finally {            Utils.closeQuietly(fis);        }    }"}
{"id": "https://github.com/hypercube1024/firefly/blob/ed3fc75b7c54a65b1e7d8141d01b49144bb423a3/firefly-example/src/main/java/com/firefly/example/http/hello/CombiningRoutingCriteriaDemo.java#L26-L54", "method_name": "main", "code": "    public static void main(String[] args) {        Phaser phaser = new Phaser(2);        HTTP2ServerBuilder server = $.httpServer();        server.router().post(\"/task/create\")              .produces(\"application/json\").consumes(\"*/json\")              .handler(ctx -> {                  Map<String, Object> ret = new HashMap<>();                  ret.put(\"msg\", \"create task, \" + ctx.getJsonBody(Task.class) + \" success \");                  ret.put(\"code\", 0);                  ctx.put(HttpHeader.CONTENT_TYPE, MimeTypes.Type.APPLICATION_JSON_UTF_8.asString())                     .end($.json.toJson(ret));              }).listen(\"localhost\", 8080);        Task task = new Task();        task.name = \"TODO today\";        task.date = new Date();        $.httpClient().post(\"http://localhost:8080/task/create\")         .put(HttpHeader.ACCEPT, \"text/plain; q=0.9, application/json\")         .jsonBody(task).submit()         .thenAccept(res -> {             System.out.println(res.getJsonObjectBody());             phaser.arrive();         });        phaser.arriveAndAwaitAdvance();        server.stop();        $.httpClient().stop();    }"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/evaluation/classification/Evaluation.java#L616-L719", "method_name": "stats", "code": "    private String stats(boolean suppressWarnings, boolean includeConfusion, boolean logConfusionSizeWarning){        String actual, predicted;        StringBuilder builder = new StringBuilder().append(\"\\n\");        StringBuilder warnings = new StringBuilder();        ConfusionMatrix<Integer> confusion = confusion();        if(confusion == null){            confusion = new ConfusionMatrix<>();    //Empty        }        List<Integer> classes = confusion.getClasses();        List<Integer> falsePositivesWarningClasses = new ArrayList<>();        List<Integer> falseNegativesWarningClasses = new ArrayList<>();        for (Integer clazz : classes) {            //Output possible warnings regarding precision/recall calculation            if (!suppressWarnings && truePositives.getCount(clazz) == 0) {                if (falsePositives.getCount(clazz) == 0) {                    falsePositivesWarningClasses.add(clazz);                }                if (falseNegatives.getCount(clazz) == 0) {                    falseNegativesWarningClasses.add(clazz);                }            }        }        if (!falsePositivesWarningClasses.isEmpty()) {            warningHelper(warnings, falsePositivesWarningClasses, \"precision\");        }        if (!falseNegativesWarningClasses.isEmpty()) {            warningHelper(warnings, falseNegativesWarningClasses, \"recall\");        }        int nClasses = confusion.getClasses().size();        DecimalFormat df = new DecimalFormat(\"0.0000\");        double acc = accuracy();        double precisionMacro = precision(EvaluationAveraging.Macro);        double recallMacro = recall(EvaluationAveraging.Macro);        double f1Macro = f1(EvaluationAveraging.Macro);        builder.append(\"\\n========================Evaluation Metrics========================\");        builder.append(\"\\n # of classes:    \").append(nClasses);        builder.append(\"\\n Accuracy:        \").append(format(df, acc));        if (topN > 1) {            double topNAcc = topNAccuracy();            builder.append(\"\\n Top \").append(topN).append(\" Accuracy:  \").append(format(df, topNAcc));        }        builder.append(\"\\n Precision:       \").append(format(df, precisionMacro));        if (nClasses > 2 && averagePrecisionNumClassesExcluded() > 0) {            int ex = averagePrecisionNumClassesExcluded();            builder.append(\"\\t(\").append(ex).append(\" class\");            if (ex > 1)                builder.append(\"es\");            builder.append(\" excluded from average)\");        }        builder.append(\"\\n Recall:          \").append(format(df, recallMacro));        if (nClasses > 2 && averageRecallNumClassesExcluded() > 0) {            int ex = averageRecallNumClassesExcluded();            builder.append(\"\\t(\").append(ex).append(\" class\");            if (ex > 1)                builder.append(\"es\");            builder.append(\" excluded from average)\");        }        builder.append(\"\\n F1 Score:        \").append(format(df, f1Macro));        if (nClasses > 2 && averageF1NumClassesExcluded() > 0) {            int ex = averageF1NumClassesExcluded();            builder.append(\"\\t(\").append(ex).append(\" class\");            if (ex > 1)                builder.append(\"es\");            builder.append(\" excluded from average)\");        }        if (nClasses > 2 || binaryPositiveClass == null) {            builder.append(\"\\nPrecision, recall & F1: macro-averaged (equally weighted avg. of \").append(nClasses)                            .append(\" classes)\");        }        if(nClasses == 2 && binaryPositiveClass != null){            builder.append(\"\\nPrecision, recall & F1: reported for positive class (class \").append(binaryPositiveClass);            if(labelsList != null){                builder.append(\" - \\\"\").append(labelsList.get(binaryPositiveClass)).append(\"\\\"\");            }            builder.append(\") only\");        }        if (binaryDecisionThreshold != null) {            builder.append(\"\\nBinary decision threshold: \").append(binaryDecisionThreshold);        }        if (costArray != null) {            builder.append(\"\\nCost array: \").append(Arrays.toString(costArray.dup().data().asFloat()));        }        //Note that we could report micro-averaged too - but these are the same as accuracy        //\"Note that for “micro�?-averaging in a multiclass setting with all labels included will produce equal precision, recall and F,\"        //http://scikit-learn.org/stable/modules/model_evaluation.html        builder.append(\"\\n\\n\");        builder.append(warnings);        if(includeConfusion){            builder.append(\"\\n=========================Confusion Matrix=========================\\n\");            builder.append(confusionMatrix());        } else if(logConfusionSizeWarning){            builder.append(\"\\n\\nNote: Confusion matrix not generated due to space requirements for \")                    .append(nClasses).append(\" classes.\\n\")                    .append(\"Use stats(false,true) to generate anyway\");        }        builder.append(\"\\n==================================================================\");        return builder.toString();    }"}
{"id": "https://github.com/sshtools/j2ssh-maverick/blob/ce11ceaf0aa0b129b54327a6891973e1e34689f7/j2ssh-maverick/src/main/java/com/sshtools/ssh2/TransportProtocol.java#L715-L728", "method_name": "configureSocketTimeout", "code": "\tprivate int configureSocketTimeout(int timeout) {\t\tif (provider instanceof SocketTimeoutSupport) {\t\t\ttry {\t\t\t\tSocketTimeoutSupport sock = (SocketTimeoutSupport) provider;\t\t\t\tint ret = sock.getSoTimeout();\t\t\t\tsock.setSoTimeout(timeout);\t\t\t\treturn ret;\t\t\t} catch (IOException ex) {\t\t\t}\t\t}\t\treturn 0;\t}"}
{"id": "https://github.com/webfirmframework/wff/blob/e59def3a20d44f91e112b113448d951d7514af2e/wffweb/src/main/java/com/webfirmframework/wffweb/tag/html/html5/attribute/global/Hidden.java#L116-L125", "method_name": "setHidden", "code": "    @Deprecated    public void setHidden(final Boolean hidden) {        if (hidden == null) {            setAttributeValue(null);        } else {            setAttributeValue(                    hidden.booleanValue() ? \"hidden\" : String.valueOf(hidden));        }        this.hidden = hidden;    }"}
{"id": "https://github.com/ludovicianul/selenium-on-steroids/blob/f89d91c59f686114f94624bfc55712f278005bfa/src/main/java/com/insidecoding/sos/webdriver/WebDriverHelper.java#L330-L340", "method_name": "verifyChecked", "code": "\tpublic boolean verifyChecked(final By checkboxBy) {\t\tWebElement element = driver.findElement(checkboxBy);\t\tif (element.isSelected()) {\t\t\tLOG.info(\"Checkbox: \" + element + \" is checked!\");\t\t\treturn true;\t\t}\t\tLOG.info(\"Checkbox: \" + element + \" is NOT checked!\");\t\treturn false;\t}"}
{"id": "https://github.com/amsa-code/risky/blob/13649942aeddfdb9210eec072c605bc5d7a6daf3/ais/src/main/java/au/gov/amsa/ais/message/AisAidToNavigation.java#L149-L158", "method_name": "extractLongitude", "code": "    static Double extractLongitude(AisExtractor extractor) {        int val = extractor.getSignedValue(164, 192);        if (val == LONGITUDE_NOT_AVAILABLE) {            return null;        } else {            Util.checkLong(val / 600000.0);            return val / 600000.0;        }    }"}
{"id": "https://github.com/jamesagnew/hapi-fhir/blob/150a84d52fe691b7f48fcb28247c4bddb7aec352/hapi-fhir-structures-r4/src/main/java/org/hl7/fhir/r4/formats/JsonParserBase.java#L166-L169", "method_name": "loadJson", "code": "  private JsonObject loadJson(InputStream input) throws JsonSyntaxException, IOException {\r    return JsonTrackingParser.parse(TextFile.streamToString(input), null);\r    // return parser.parse(TextFile.streamToString(input)).getAsJsonObject();\r  }\r"}
{"id": "https://github.com/cloudfoundry/uaa/blob/e8df3d7060580c92d33461106399f9e4f36e3cd2/server/src/main/java/org/cloudfoundry/identity/uaa/oauth/UaaAuthorizationEndpoint.java#L646-L653", "method_name": "encode", "code": "    private String encode(String value) {        try {            //return URLEncoder.encode(value,\"UTF-8\");            return UriUtils.encodeQueryParam(value, \"UTF-8\");        } catch (UnsupportedEncodingException x) {            throw new IllegalArgumentException(x);        }    }"}
{"id": "https://github.com/datumbox/datumbox-framework/blob/909dff0476e80834f05ecdde0624dd2390e9b0ca/datumbox-framework-core/src/main/java/com/datumbox/framework/core/statistics/distributions/DiscreteDistributions.java#L76-L96", "method_name": "binomial", "code": "    public static double binomial(int k, double p, int n) {        if(k<0 ||  p<0 || n<1) {            throw new IllegalArgumentException(\"All the parameters must be positive and n larger than 1.\");        }                k = Math.min(k, n);                 /*        //Slow and can't handle large numbers        $probability=StatsUtilities::combination($n,$k)*pow($p,$k)*pow(1-$p,$n-$k);        */        //fast and can handle large numbers        //Cdf(k)-Cdf(k-1)        double probability = approxBinomialCdf(k,p,n);         if(k>0) {            probability -= approxBinomialCdf(k-1,p,n);        }                return probability;    }"}
{"id": "https://github.com/xwiki/xwiki-commons/blob/5374d8c6d966588c1eac7392c83da610dfb9f129/xwiki-commons-core/xwiki-commons-crypto/xwiki-commons-crypto-pkix/src/main/java/org/xwiki/crypto/pkix/params/x509certificate/extension/X509IpAddress.java#L126-L137", "method_name": "getName", "code": "    @Override    public String getName()    {        try {            if (this.ipAddress.length != 8 && this.ipAddress.length != 32) {                return getIpAddress().getHostAddress();            }            return getIpAddress().getHostAddress() + \"/\" + getIpMask().getHostAddress();        } catch (UnknownHostException e) {            return Arrays.toString(this.ipAddress);        }    }"}
{"id": "https://github.com/moparisthebest/beehive/blob/4246a0cc40ce3c05f1a02c2da2653ac622703d77/beehive-netui-tags/src/main/java/org/apache/beehive/netui/databinding/datagrid/runtime/config/DefaultDataGridStateCodec.java#L336-L365", "method_name": "nameAndSorts[1].split(DELIM_SORT_TERM)", "code": "    private List decodeSort(String value) {        ArrayList sorts = new ArrayList();        String[] nameAndSorts = value.split(DELIM_GRID_NAME);        if(nameAndSorts.length != 2)            return null;        String namespace = nameAndSorts[0];        String[] sortStrings = nameAndSorts[1].split(DELIM_SORT_TERM);        // find the list of sorted columns        // two columns of the bugs grid would be sorted as:        //        // netui_sort=bugs~id,-priority        for(int i = 0; i < sortStrings.length; i++) {            String sort = sortStrings[i];            SortDirection sortDirection = SortDirection.NONE;            if(sort.startsWith(\"-\"))                sortDirection = SortDirection.DESCENDING;            else                sortDirection = SortDirection.ASCENDING;            String sortExpression = (sortDirection == SortDirection.DESCENDING ? sort.substring(1) : sort);            Sort gridSort = _config.createSort();            gridSort.setSortExpression(sortExpression);            gridSort.setDirection(sortDirection);            sorts.add(gridSort);        }        return sorts;    }"}
{"id": "https://github.com/pgjdbc/pgjdbc/blob/95ba7b261e39754674c5817695ae5ebf9a341fae/pgjdbc/src/main/java/org/postgresql/core/v3/QueryExecutorImpl.java#L768-L778", "method_name": "setSocketTimeout", "code": "  private void setSocketTimeout(int millis) throws PSQLException {    try {      Socket s = pgStream.getSocket();      if (!s.isClosed()) { // Is this check required?        pgStream.getSocket().setSoTimeout(millis);      }    } catch (SocketException e) {      throw new PSQLException(GT.tr(\"An error occurred while trying to reset the socket timeout.\"),        PSQLState.CONNECTION_FAILURE, e);    }  }"}
{"id": "https://github.com/ixa-ehu/ixa-pipe-ml/blob/c817fa1e40e96ed15fc79d22c3a7c25f1a40d172/src/main/java/eus/ixa/ixa/pipe/ml/eval/DetailedEvaluationListener.java#L379-L402", "method_name": "printGeneralConfusionTable", "code": "  protected void printGeneralConfusionTable() {    printHeader(\"Confusion matrix\");    SortedSet<String> labels = getConfusionMatrixTagset();    double[][] confusionMatrix = getConfusionMatrix();    printStream.append(\"\\nTags with 100% accuracy: \");    int line = 0;    for (String label : labels) {      if (confusionMatrix[line][confusionMatrix[0].length - 1] == 1) {        printStream.append(label).append(\" (\")            .append(Integer.toString((int) confusionMatrix[line][line]))            .append(\") \");      }      line++;    }    printStream.append(\"\\n\\n\");    printStream.append(matrixToString(labels, confusionMatrix, true));    printFooter(\"Confusion matrix\");  }"}
{"id": "https://github.com/jtrfp/javamod/blob/cda4fe943a589dc49415f4413453e2eece72076a/src/main/java/de/quippy/javamod/main/gui/MainForm.java#L367-L447", "method_name": "readPropertyFile", "code": "\tprivate void readPropertyFile()\t{\t\tjava.util.Properties props = new java.util.Properties();\t    try\t    {\t        File propertyFile = new File(propertyFilePath + File.separator + PROPERTYFILENAME);\t        if (propertyFile.exists())\t        {\t        \tjava.io.FileInputStream fis = null;\t        \ttry\t        \t{\t\t\t    \tfis = new java.io.FileInputStream(propertyFile);\t\t\t        props.load(fis);\t        \t}\t        \tfinally\t        \t{\t        \t\tif (fis!=null) try { fis.close(); } catch (IOException ex) { Log.error(\"IGNORED\", ex); }\t        \t}\t        }\t        searchPath = props.getProperty(PROPERTY_SEARCHPATH, Helpers.HOMEDIR);\t\t\texportPath = props.getProperty(PROPERTY_EXPORTPATH, Helpers.HOMEDIR);\t\t\tuiClassName = props.getProperty(PROPERTY_LOOKANDFEEL, javax.swing.UIManager.getSystemLookAndFeelClassName());\t\t\tuseSystemTray = Boolean.parseBoolean(props.getProperty(PROPERTY_SYSTEMTRAY, \"FALSE\"));\t\t\tcurrentVolume = Float.parseFloat(props.getProperty(PROPERTY_VOLUME_VALUE, \"1.0\"));\t\t\tcurrentBalance = Float.parseFloat(props.getProperty(PROPERTY_BALANCE_VALUE, \"0.0\"));\t\t\tlastLoaded = new ArrayList<URL>(PROPERTY_LASTLOADED_MAXENTRIES);\t\t\tfor (int i=0; i<PROPERTY_LASTLOADED_MAXENTRIES; i++)\t\t\t{\t\t\t\tString url = props.getProperty(PROPERTY_LASTLOADED+'.'+i, null);\t\t\t\tif (url!=null) lastLoaded.add(new URL(url)); else lastLoaded.add(null);\t\t\t}\t\t\tsetDSPEnabled(Boolean.parseBoolean(props.getProperty(PROPERTY_EFFECTS_PASSTHROUGH, \"FALSE\")));\t\t\tmainDialogLocation = Helpers.getPointFromString(props.getProperty(PROPERTY_MAINDIALOG_POS, \"-1x-1\"));\t\t\tmainDialogSize = Helpers.getDimensionFromString(props.getProperty(PROPERTY_MAINDIALOG_SIZE, \"320x410\"));\t\t\tplayerSetUpDialogLocation = Helpers.getPointFromString(props.getProperty(PROPERTY_SETUPDIALOG_POS, \"-1x-1\"));\t\t\tplayerSetUpDialogSize = Helpers.getDimensionFromString(props.getProperty(PROPERTY_SETUPDIALOG_SIZE, \"720x230\"));\t\t\tplayerSetUpDialogVisable = Boolean.parseBoolean(props.getProperty(PROPERTY_SETUPDIALOG_VISABLE, \"false\"));\t\t\tmodInfoDialogLocation = Helpers.getPointFromString(props.getProperty(PROPERTY_PROPERTIESDIALOG_POS, \"-1x-1\"));\t\t\tmodInfoDialogSize = Helpers.getDimensionFromString(props.getProperty(PROPERTY_PROPERTIESDIALOG_SIZE, \"520x630\"));\t\t\tmodInfoDialogVisable = Boolean.parseBoolean(props.getProperty(PROPERTY_PROPERTIESDIALOG_VISABLE, \"false\"));\t\t\tplaylistDialogLocation = Helpers.getPointFromString(props.getProperty(PROPERTY_PLAYLISTDIALOG_POS, \"-1x-1\"));\t\t\tplaylistDialogSize = Helpers.getDimensionFromString(props.getProperty(PROPERTY_PLAYLISTDIALOG_SIZE, \"400x400\"));\t\t\tplaylistDialogVisable = Boolean.parseBoolean(props.getProperty(PROPERTY_PLAYLIST_VISABLE, \"false\"));\t\t\teffectsDialogLocation = Helpers.getPointFromString(props.getProperty(PROPERTY_EFFECTDIALOG_POS, \"-1x-1\"));\t\t\teffectsDialogSize = Helpers.getDimensionFromString(props.getProperty(PROPERTY_EFFECTDIALOG_SIZE, \"560x470\"));\t\t\teffectDialogVisable = Boolean.parseBoolean(props.getProperty(PROPERTY_EFFECT_VISABLE, \"false\"));\t\t\t\t\t\tif (currentEqualizer!=null)\t\t\t{\t\t\t\tboolean isActive = Boolean.parseBoolean(props.getProperty(PROPERTY_EQUALIZER_ISACTIVE, \"FALSE\"));\t\t\t\tcurrentEqualizer.setIsActive(isActive);\t\t\t\tfloat preAmpValueDB = Float.parseFloat(props.getProperty(PROPERTY_EQUALIZER_PREAMP, \"0.0\"));\t\t\t\tcurrentEqualizer.setPreAmp(preAmpValueDB);\t\t\t\tfor (int i=0; i<currentEqualizer.getBandCount(); i++)\t\t\t\t{\t\t\t\t\tfloat bandValueDB = Float.parseFloat(props.getProperty(PROPERTY_EQUALIZER_BAND_PREFIX + Integer.toString(i), \"0.0\"));\t\t\t\t\tcurrentEqualizer.setBand(i, bandValueDB);\t\t\t\t}\t\t\t}\t\t\tif (currentPitchShift!=null)\t\t\t{\t\t\t\tboolean isActive = Boolean.parseBoolean(props.getProperty(PROPERTY_PITCHSHIFT_ISACTIVE, \"FALSE\"));\t\t\t\tcurrentPitchShift.setIsActive(isActive);\t\t\t\tfloat pitchValue = Float.parseFloat(props.getProperty(PROPERTY_PITCHSHIFT_PITCH, \"1.0\"));\t\t\t\tcurrentPitchShift.setPitchScale(pitchValue);\t\t\t\tfloat scaleValue = Float.parseFloat(props.getProperty(PROPERTY_PITCHSHIFT_SAMPLESCALE, \"1.0\"));\t\t\t\tcurrentPitchShift.setSampleScale(scaleValue);\t\t\t\tint overSampling = Integer.parseInt(props.getProperty(PROPERTY_PITCHSHIFT_OVERSAMPLING, \"32\"));\t\t\t\tcurrentPitchShift.setFFTOversampling(overSampling);\t\t\t\tint frameSize = Integer.parseInt(props.getProperty(PROPERTY_PITCHSHIFT_FRAMESIZE, \"8192\"));\t\t\t\tcurrentPitchShift.setFFTFrameSize(frameSize);\t\t\t}\t\t\tMultimediaContainerManager.configureContainer(props);\t    }\t    catch (Throwable ex)\t    {\t\t\tLog.error(\"[MainForm]\", ex);\t    }\t}"}
{"id": "https://github.com/authorjapps/zerocode/blob/d66a3e8778d2eb5e4f0006bfcccfc0922ceb7cef/core/src/main/java/org/jsmart/zerocode/core/utils/SmartUtils.java#L123-L137", "method_name": "prettyPrintJson", "code": "    public static String prettyPrintJson(JsonNode jsonNode) {        String indented = jsonNode.toString();        final ObjectMapper objectMapper = new ObjectMapperProvider().get();        try {            return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(jsonNode);        } catch (IOException e) {            /*             *  Pretty-print logic threw an exception, not a big deal, print the original json then.             */            return indented;        }    }"}
{"id": "https://github.com/PeterisP/LVTagger/blob/b3d44bab9ec07ace0d13612c448a6b7298c1f681/src/main/java/edu/stanford/nlp/util/StringUtils.java#L993-L996", "method_name": "parseCommandLineArguments", "code": "  @SuppressWarnings(\"unchecked\")\r  public static Map<String, String> parseCommandLineArguments(String[] args) {\r    return (Map)parseCommandLineArguments(args, false);\r  }\r"}
{"id": "https://github.com/gallandarakhneorg/afc/blob/0c7d2e1ddefd4167ef788416d970a6c1ef6f8bbb/maven/maventools/src/main/java/org/arakhne/maven/AbstractArakhneMojo.java#L332-L347", "method_name": "fileCopy", "code": "\tpublic final void fileCopy(File in, File out) throws IOException {\t\tassert in != null;\t\tassert out != null;\t\tgetLog().debug(\"Copying file: \" + in.toString() + \" into \" + out.toString()); //$NON-NLS-1$ //$NON-NLS-2$\t\ttry (FileInputStream fis = new FileInputStream(in)) {\t\t\ttry (FileChannel inChannel = fis.getChannel()) {\t\t\t\ttry (FileOutputStream fos = new FileOutputStream(out)) {\t\t\t\t\ttry (FileChannel outChannel = fos.getChannel()) {\t\t\t\t\t\tinChannel.transferTo(0, inChannel.size(), outChannel);\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t} finally {\t\t\tgetBuildContext().refresh(out);\t\t}\t}"}
{"id": "https://github.com/hoverruan/weiboclient4j/blob/80556b1ce40ee4dc063b977f885792efb6307547/src/main/java/weiboclient4j/utils/StringUtils.java#L48-L54", "method_name": "encodeUrl", "code": "    public static String encodeUrl(String url) {        try {            return URLEncoder.encode(url, DEFAULT_ENCODING);        } catch (UnsupportedEncodingException ignore) {            return url;        }    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.wsoc/src/com/ibm/ws/wsoc/RemoteEndpointBasicImpl.java#L93-L133", "method_name": "sendBinary", "code": "    public void sendBinary(@Sensitive ByteBuffer data, OpcodeType type, boolean isLast) throws IOException {        OpcodeType t = type;        if (messageWriteState == MessageWriteState.PARTIAL_TEXT_IN_USE) {            if (tc.isDebugEnabled()) {                Tr.debug(tc, \"Send while Send outstanding error.  throw IllegalStateException\");            }            // another send is outstanding on this connection, as per spec behaivor, need to throw an illegalStateException            IllegalStateException up = new IllegalStateException();            throw up;        }        if (messageWriteState == MessageWriteState.PARTIAL_NOT_IN_USE) {            messageWriteState = MessageWriteState.PARTIAL_BINARY_IN_USE;            if (isLast) {                t = OpcodeType.BINARY_WHOLE;            } else {                t = OpcodeType.BINARY_PARTIAL_FIRST;            }        } else {            if (isLast) {                t = OpcodeType.BINARY_PARTIAL_LAST;            } else {                t = OpcodeType.BINARY_PARTIAL_CONTINUATION;            }        }        try {            RETURN_STATUS ret = sendBinaryCommon(data, t, false);            if (ret != RETURN_STATUS.OK) {                // another write of an IO frame is outstanding on this connection                IllegalStateException up = new IllegalStateException(\"write not allowed.  Most likely cause is that another Write or Close is in progress\");                throw up;            }        } finally {            if (isLast == true) {                messageWriteState = MessageWriteState.PARTIAL_NOT_IN_USE;            }        }    }"}
{"id": "https://github.com/project-ncl/pnc/blob/85743ca59d14cdf750d6daa8bd0a0a8be390a796/common/src/main/java/org/jboss/pnc/common/util/UrlUtils.java#L108-L132", "method_name": "stripProtocolAndPort", "code": "    public static String stripProtocolAndPort(String url) {        //workaround to properly parse url. Without schema and available port, URI.create fails to parse        if (!url.contains(\"://\")) {            url = \"http://\" + url;        }        URI uri = URI.create(url);        String host = uri.getHost();        String path = uri.getPath();        String query = uri.getQuery();        String queryAppend = \"\";        if (query != null) {            queryAppend = \"?\" + query;        }        String fragment = uri.getFragment();        String fragmentAppend = \"\";        if (fragment != null) {            fragmentAppend = \"#\" + fragment;        }        return (host == null ? \"\" : host) + (path == null ? \"\" : path) + queryAppend + fragmentAppend;    }"}
{"id": "https://github.com/cdapio/tigon/blob/5be6dffd7c79519d1211bb08f75be7dcfbbad392/tigon-flow/src/main/java/co/cask/tigon/internal/app/ResourceSpecificationCodec.java#L45-L54", "method_name": "deserialize", "code": "  @Override  public ResourceSpecification deserialize(JsonElement json, Type typeOfT,                                          JsonDeserializationContext context) throws JsonParseException {    JsonObject jsonObj = json.getAsJsonObject();    int cores = jsonObj.get(\"virtualCores\").getAsInt();    int memorySize = jsonObj.get(\"memoryMB\").getAsInt();    return new Resources(memorySize, cores);  }"}
{"id": "https://github.com/chhh/MSFTBX/blob/e53ae6be982e2de3123292be7d5297715bec70bb/MSFileToolbox/src/main/java/umich/ms/fileio/filetypes/gpmdb/GPMDBFile.java#L42-L66", "method_name": "parse", "code": "  public Bioml parse() throws FileParsingException {    //ClassLoader classLoaderOrig = Thread.currentThread().getContextClassLoader();    try {      //String filePath = \"D:\\\\projects\\\\GPMDB\\\\gpm-xml-parser\\\\GPM32310000038_indented_cropped.xml\";      //String filePath = \"D:\\\\projects\\\\GPMDB\\\\gpm-xml-parser\\\\GPM64510013519.xml\";      Path filePath = Paths.get(this.getPath());      FileInputStream fis = new FileInputStream(filePath.toFile());      BufferedInputStream bis = new BufferedInputStream(fis, 1024 * 1024 * 32); // 32 MB buffer      Class<Bioml> clazz = Bioml.class;      JAXBContext jaxbContext = JAXBContext.newInstance(clazz);      Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();      Object unmarshalled = unmarshaller.unmarshal(bis);      Bioml bioml = convertJAXBObjectToDomain(clazz, unmarshalled);      return bioml;    } catch (JAXBException | FileNotFoundException e) {      throw new FileParsingException(e);    } finally {//            Thread.currentThread().setContextClassLoader(classLoaderOrig);    }  }"}
{"id": "https://github.com/lucee/Lucee/blob/29b153fc4e126e5edb97da937f2ee2e231b87593/core/src/main/java/lucee/runtime/functions/displayFormatting/HTMLCodeFormat.java#L29-L31", "method_name": "call", "code": "    public static String call(PageContext pc, String html) {\treturn \"<pre>\" + HTMLEntities.escapeHTML(html, HTMLEntities.HTMLV40) + \"</pre>\";    }"}
{"id": "https://github.com/kiegroup/droolsjbpm-integration/blob/6c26200ab03855dbb92b56ca0c6363cdec0eaf2c/jbpm-simulation/src/main/java/org/jbpm/simulation/TimeGeneratorFactory.java#L30-L45", "method_name": "newTimeGenerator", "code": "    public static TimeGenerator newTimeGenerator(Map<String, Object> data) {        String distribution = (String) data.get(SimulationConstants.DISTRIBUTION_TYPE);         if (\"random\".equalsIgnoreCase(distribution)) {            return new RandomTimeGenerator(data);        } else if (\"uniform\".equalsIgnoreCase(distribution)) {            return new UniformTimeGenerator(data);        } else if (\"normal\".equalsIgnoreCase(distribution)) {            return new NormalTimeGenerator(data);        } else if (\"poisson\".equalsIgnoreCase(distribution)) {            return new PoissonTimeGenerator(data);        } else if (\"exact\".equalsIgnoreCase(distribution)) {            return new ExactTimeGenerator(data);        } else {            throw new RuntimeException(\"Unsupported distribution type \" + distribution);        }    }"}
{"id": "https://github.com/jdereg/java-util/blob/a2dce61aed16d6454ee575174dda1ba6bff0015c/src/main/java/com/cedarsoftware/util/UrlUtilities.java#L188-L230", "method_name": "((HttpURLConnection) c).getResponseCode()", "code": "    public static void readErrorResponse(URLConnection c)    {        if (c == null)        {            return;        }        InputStream in = null;        try        {            int error = ((HttpURLConnection) c).getResponseCode();            in = ((HttpURLConnection) c).getErrorStream();            if (in == null)            {                return;            }            LOG.warn(\"HTTP error response: \" + ((HttpURLConnection) c).getResponseMessage());            // read the response body            ByteArrayOutputStream out = new ByteArrayOutputStream(1024);            int count;            byte[] bytes = new byte[8192];            while ((count = in.read(bytes)) != -1)            {                out.write(bytes, 0, count);            }            LOG.warn(\"HTTP error Code:  \" + error);        }        catch (ConnectException e)        {            LOG.error(\"Connection exception trying to read HTTP error response\", e);        }        catch (IOException e)        {            LOG.error(\"IO Exception trying to read HTTP error response\", e);        }        catch (Exception e)        {            LOG.error(\"Exception trying to read HTTP error response\", e);        }        finally        {            IOUtilities.close(in);        }    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.security.fat.common/src/com/ibm/ws/security/fat/common/utils/CommonIOUtils.java#L42-L44", "method_name": "replaceStringsInFile", "code": "    public boolean replaceStringsInFile(String filePath, Map<String, String> replaceValues) {        return replaceStringsInFile(filePath, replaceValues, null);    }"}
{"id": "https://github.com/hamnis/json-collection/blob/fbd4a1c6ab75b70b3b4cb981b608b395e9c8c180/src/main/java/net/hamnaberg/json/Property.java#L177-L181", "method_name": "toObject", "code": "    private static Json.JObject toObject(Map<String, Value> object) {        Map<String, Json.JValue> map = new LinkedHashMap<>();        object.forEach((k, v) -> map.put(k, v.asJson()));        return Json.jObject(map);    }"}
{"id": "https://github.com/bonigarcia/webdrivermanager/blob/d1f05b58895dd646d4bd7a59b26a4f2ca58872fd/src/main/java/io/github/bonigarcia/wdm/Downloader.java#L176-L206", "method_name": "extract", "code": "    private File extract(File compressedFile)            throws IOException, InterruptedException {        String fileName = compressedFile.getName().toLowerCase();        boolean extractFile = !fileName.endsWith(\"exe\")                && !fileName.endsWith(\"jar\");        if (extractFile) {            log.info(\"Extracting binary from compressed file {}\", fileName);        }        if (fileName.endsWith(\"tar.bz2\")) {            unBZip2(compressedFile);        } else if (fileName.endsWith(\"tar.gz\")) {            unTarGz(compressedFile);        } else if (fileName.endsWith(\"gz\")) {            unGzip(compressedFile);        } else if (fileName.endsWith(\"msi\")) {            extractMsi(compressedFile);        } else if (fileName.endsWith(\"zip\")) {            unZip(compressedFile);        }        if (extractFile) {            deleteFile(compressedFile);        }        File result = WebDriverManager.getInstance(driverManagerType)                .postDownload(compressedFile).getAbsoluteFile();        log.trace(\"Resulting binary file {}\", result);        return result;    }"}
{"id": "https://github.com/sitoolkit/sit-wt-all/blob/efabde27aa731a5602d2041e137721a22f4fd27a/sit-wt-runtime/src/main/java/io/sitoolkit/wt/infra/selenium/WebDriverInstaller.java#L233-L256", "method_name": "extractOneFromZip", "code": "    private void extractOneFromZip(File srcFile, String entryName, File dstFile)\r            throws IOException {\r\r        try (ZipFile zipFile = new ZipFile(srcFile)) {\r            Enumeration<? extends ZipEntry> enu = zipFile.entries();\r\r            while (enu.hasMoreElements()) {\r                ZipEntry zipEntry = enu.nextElement();\r\r                if (zipEntry.getName().equals(entryName)) {\r\r                    File parentDir = dstFile.getParentFile();\r                    if (!parentDir.exists()) {\r                        parentDir.mkdirs();\r                    }\r\r                    try (InputStream is = zipFile.getInputStream(zipEntry)) {\r                        Files.copy(is, dstFile.toPath());\r                    }\r                }\r\r            }\r        }\r    }\r"}
{"id": "https://github.com/haifengl/smile/blob/e27e43e90fbaacce3f99d30120cf9dd6a764c33d/plot/src/main/java/smile/plot/ScatterPlot.java#L581-L595", "method_name": "plot", "code": "    public static PlotCanvas plot(String id, double[][] data, int[] y, char[] legend, Color[] palette) {        if (data[0].length != 2 && data[0].length != 3) {            throw new IllegalArgumentException(\"Invalid data dimension: \" + data[0].length);        }        double[] lowerBound = Math.colMin(data);        double[] upperBound = Math.colMax(data);        PlotCanvas canvas = new PlotCanvas(lowerBound, upperBound);        ScatterPlot plot = new ScatterPlot(data, y, legend, palette);        plot.setID(id);        canvas.add(plot);        return canvas;    }"}
{"id": "https://github.com/messagebird/java-rest-api/blob/f92cd93afff413e6dc12aa6e41e69f26cbae8941/api/src/main/java/com/messagebird/MessageBirdClient.java#L1036-L1038", "method_name": "urlEncode", "code": "    private String urlEncode(String s) throws UnsupportedEncodingException {        return URLEncoder.encode(s, String.valueOf(StandardCharsets.UTF_8));    }"}
{"id": "https://github.com/zk1931/jzab/blob/2a8893bcc1a125f3aebdaddee80ad49c9761bba1/src/main/java/com/github/zk1931/jzab/FileUtils.java#L125-L132", "method_name": "readPropertiesFromFile", "code": "  public static Properties readPropertiesFromFile(File file)      throws IOException {    try (FileInputStream fis = new FileInputStream(file)) {      Properties prop = new Properties();      prop.load(fis);      return prop;    }  }"}
{"id": "https://github.com/jeremylong/DependencyCheck/blob/6cc7690ea12e4ca1454210ceaa2e9a5523f0926c/core/src/main/java/org/owasp/dependencycheck/utils/ExtractionUtil.java#L366-L388", "method_name": "IOException", "code": "    public static void extractZip(File file) throws FileNotFoundException, IOException {        final String originalPath = file.getPath();        final File zip = new File(originalPath + \".zip\");        if (zip.isFile() && !zip.delete()) {            LOGGER.debug(\"Failed to delete initial temporary file when extracting 'zip' {}\", zip.toString());            zip.deleteOnExit();        }        if (!file.renameTo(zip)) {            throw new IOException(\"Unable to rename '\" + file.getPath() + \"'\");        }        final File newFile = new File(originalPath);        try (FileInputStream fis = new FileInputStream(zip);                ZipInputStream cin = new ZipInputStream(fis);                FileOutputStream out = new FileOutputStream(newFile)) {            cin.getNextEntry();            IOUtils.copy(cin, out);        } finally {            if (zip.isFile() && !org.apache.commons.io.FileUtils.deleteQuietly(zip)) {                LOGGER.debug(\"Failed to delete temporary file when extracting 'zip' {}\", zip.toString());                zip.deleteOnExit();            }        }    }"}
{"id": "https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/IdxWritingExample.java#L64-L94", "method_name": "main", "code": "    @SuppressWarnings(\"Duplicates\")    public static void main(String[] args) {        // init logging        PropertyConfigurator.configure(                IdxWritingExample.class.getResource(PACKAGE + \"/log4j.properties\"));        // create some CSV records        List<IdxRecord> records = new ArrayList<>();        records.add(createRecord());        records.add(createRecord());        records.add(createRecord());        records.add(createRecord());        // write CSV records into a java.io.File        try {            write(records, File.createTempFile(\"output-\", \".csv\"));        } catch (IOException ex) {            LOGGER.error(\"Can't create temporary file!\");            LOGGER.error(\"> \" + ex.getLocalizedMessage(), ex);            System.exit(1);        }        // write CSV records into a java.io.OutputStream        write(records, new NullOutputStream());        // write CSV records into a java.io.Writer        write(records, new NullWriter());        // write CSV records into a string and send it to the console        writeToConsole(records);    }"}
{"id": "https://github.com/droidparts/droidparts/blob/e4f782f136e349feeda518fa15d501fd0fec70c0/droidparts/src/org/droidparts/inner/PersistUtils.java#L277-L279", "method_name": "getColumnNames", "code": "\tpublic static ArrayList<String> getColumnNames(SQLiteDatabase db, String table) {\t\treturn readStrings(db, \"PRAGMA table_info(\" + table + \")\", 1);\t}"}
{"id": "https://github.com/ManfredTremmel/gwt-commons-lang3/blob/9e2dfbbda3668cfa5d935fe76479d1426c294504/src/main/java/org/apache/commons/lang3/StringUtils.java#L7505-L7510", "method_name": "reverse", "code": "    public static String reverse(final String str) {        if (str == null) {            return null;        }        return new StringBuilder(str).reverse().toString();    }"}
{"id": "https://github.com/opentelecoms-org/zrtp-java/blob/10a0c77866c5d1b1504df161db9a447f5069ed54/src/zorg/SRTP.java#L804-L846", "method_name": "testEncryption", "code": "\tpublic boolean testEncryption() {\t\t// Uses test data in rfc3711 to test encryption\t\tboolean ret = true;\t\trollOverCounter = 0L;\t\tbyte[] sessKey = { (byte) 0x2B, (byte) 0x7E, (byte) 0x15, (byte) 0x16,\t\t\t\t(byte) 0x28, (byte) 0xAE, (byte) 0xD2, (byte) 0xA6,\t\t\t\t(byte) 0xAB, (byte) 0xF7, (byte) 0x15, (byte) 0x88,\t\t\t\t(byte) 0x09, (byte) 0xCF, (byte) 0x4F, (byte) 0x3C };\t\tbyte[] sessSalt = { (byte) 0xF0, (byte) 0xF1, (byte) 0xF2, (byte) 0xF3,\t\t\t\t(byte) 0xF4, (byte) 0xF5, (byte) 0xF6, (byte) 0xF7,\t\t\t\t(byte) 0xF8, (byte) 0xF9, (byte) 0xFA, (byte) 0xFB,\t\t\t\t(byte) 0xFC, (byte) 0xFD };\t\tbyte[] IV = new byte[16];\t\tinitialiseIV(IV, 0L, 0, 0L, sessSalt);\t\tbyte[] outArray = null;\t\ttry {\t\t\t// AESKey key = new AESKey(sessKey);\t\t\t// AESEncryptorEngine engine = new AESEncryptorEngine(key);\t\t\tEncryptorSuite encSuite = platform.getCrypto()\t\t\t\t\t.createEncryptorSuite(sessKey, initVector);\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\t\t\tfor (int i = 0; i < 3; ++i) {\t\t\t\t//logBuffer(\"testEncryption, IV - \", IV);\t\t\t\tbyte[] encrypted = encSuite.encryptIV_for_prf(IV);\t\t\t\t//logBuffer(\"testEncryption, encrypted block - \", encrypted);\t\t\t\tbaos.write(encrypted);\t\t\t\tincrementIV(IV);\t\t\t}\t\t\toutArray = baos.toByteArray();\t\t\tbaos.close();\t\t\t//logBuffer(\"testEncryption, outArray - \", outArray);\t\t} catch (Throwable e) {\t\t\tlog(\"testEncryption, Exception thrown\");\t\t\tret = false;\t\t}\t\tString outString = platform.getUtils().byteToHexString(outArray);\t\tString expectedOutput = \"E03EAD0935C95E80E166B16DD92B4EB4D23513162B02D0F72A43A2FE4A5F97AB41E95B3BB0A2E8DD477901E4FCA894C0\";\t\tif (!outString.equalsIgnoreCase(expectedOutput)) {\t\t\tret = false;\t\t}\t\treturn ret;\t}"}
{"id": "https://github.com/json-path/JsonPath/blob/5a09489c3252b74bbf81992aadb3073be59c04f9/json-path/src/main/java/com/jayway/jsonpath/JsonPath.java#L672-L674", "method_name": "parse", "code": "    public static DocumentContext parse(File json, Configuration configuration) throws IOException {        return new ParseContextImpl(configuration).parse(json);    }"}
{"id": "https://github.com/codescape/bitvunit/blob/cef6d9af60d684e41294981c10b6d92c8f063a4e/bitvunit-core/src/main/java/de/codescape/bitvunit/model/Page.java#L222-L228", "method_name": "findHtmlElementById", "code": "    public HtmlElement findHtmlElementById(String elementId) {        try {            return htmlPage.getHtmlElementById(elementId);        } catch (ElementNotFoundException e) {            return null;        }    }"}
{"id": "https://github.com/tntim96/JSCover/blob/87808b3aa38726b369496331d28ec4111dc5143e/src/main/java/jscover/stdout/ConfigurationForStdOut.java#L379-L389", "method_name": "parse", "code": "    public void parse(String arg) {        if (super.parseArg(arg))            return;        if (arg.startsWith(Main.STDOUT_PREFIX)) {            //Ignore this        } else if (srcFile == null) {            srcFile = new File(arg);        } else {            setInvalid(format(\"JSCover: Extra command line argument found '%s'\", arg));        }    }"}
{"id": "https://github.com/knowm/XChange/blob/e45f437ac8e0b89cd66cdcb3258bdb1bf3d88186/xchange-okcoin/src/main/java/org/knowm/xchange/okcoin/OkCoinUtils.java#L9-L21", "method_name": "toEpoch", "code": "  public static Long toEpoch(Date dateTime, String timeZone) {    // Epoch of midnight in local time zone    Calendar timeOffset = Calendar.getInstance(TimeZone.getTimeZone(timeZone));    timeOffset.set(Calendar.MILLISECOND, 0);    timeOffset.set(Calendar.SECOND, 0);    timeOffset.set(Calendar.MINUTE, 0);    timeOffset.set(Calendar.HOUR_OF_DAY, 0);    long midnightOffSet = timeOffset.getTime().getTime();    long localTimestamp = dateTime.getTime();    return timeOffset == null ? null : midnightOffSet + localTimestamp;  }"}
{"id": "https://github.com/DataSketches/sketches-core/blob/900c8c9668a1e2f1d54d453e956caad54702e540/src/main/java/com/yahoo/sketches/sampling/VarOptItemsSketch.java#L1136-L1144", "method_name": "pickRandomSlotInR", "code": "  private int pickRandomSlotInR() {    assert r_ > 0;    final int offset = h_ + m_;    if (r_ == 1) {      return offset;    } else {      return offset + SamplingUtil.rand.nextInt(r_);    }  }"}
{"id": "https://github.com/jbee/silk/blob/36237487d250c7b66bcefcf08c45d0069b55ec92/src/core/se/jbee/inject/Utils.java#L52-L61", "method_name": "[]", "code": "\tpublic static <A> A[] arrayFilter(A[] arr, Predicate<A> accept) {\t\tif (arr == null || arr.length == 0)\t\t\treturn arr;\t\tA[] accepted = newArray(arr, arr.length);\t\tint j = 0;\t\tfor (int i = 0; i < arr.length; i++)\t\t\tif (accept.test(arr[i]))\t\t\t\taccepted[j++] = arr[i];\t\treturn j == arr.length ? arr : copyOf(accepted, j);\t}"}
{"id": "https://github.com/timewalker74/ffmq/blob/638773ee29a4a5f9c6119ed74ad14ac9c46382b3/core/src/main/java/net/timewalker/ffmq4/transport/tcp/SocketUtils.java#L31-L46", "method_name": "setupSocket", "code": "\tpublic static Socket setupSocket( Socket socket , int socketSendBufferSize , int socketRecvBufferSize ) throws PacketTransportException    {    \ttry    \t{\t    \tsocket.setTcpNoDelay(true);    \t\t    \tsocket.setSendBufferSize(socketSendBufferSize);\t    \tsocket.setReceiveBufferSize(socketRecvBufferSize);\t    \tsocket.setKeepAlive(false);\t    \t\t    \treturn socket;    \t}    \tcatch (SocketException e)    \t{    \t\tthrow new PacketTransportException(\"Could not set socket options\",e);    \t}    }"}
{"id": "https://github.com/datasift/datasift-java/blob/09de124f2a1a507ff6181e59875c6f325290850e/src/main/java/com/datasift/client/push/PullReader.java#L220-L232", "method_name": "line", "code": "    protected void readLineByLine() {        String line;        try {            while ((line = data.readLine()) != null) {                //System.out.println(line);                ObjectNode interaction = (ObjectNode) DataSiftClient.MAPPER.readTree(line);                send(new Interaction(interaction));            }            buffer.discardReadBytes();        } catch (IOException e) {            log.info(\"Failed to decode interaction \", e);        }    }"}
{"id": "https://github.com/Red5/red5-server-common/blob/39ae73710c25bda86d70b13ef37ae707962217b9/src/main/java/org/red5/server/util/FileUtil.java#L51-L86", "method_name": "fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length())", "code": "    public static void copyFile(File source, File dest) throws IOException {\r        log.debug(\"Copy from {} to {}\", source.getAbsoluteFile(), dest.getAbsoluteFile());\r        FileInputStream fi = new FileInputStream(source);\r        FileChannel fic = fi.getChannel();\r        MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length());\r        fic.close();\r        fi.close();\r        fi = null;\r\r        // ensure the destination directory exists\r        if (!dest.exists()) {\r            String destPath = dest.getPath();\r            log.debug(\"Destination path: {}\", destPath);\r            String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar));\r            log.debug(\"Destination dir: {}\", destDir);\r            File dir = new File(destDir);\r            if (!dir.exists()) {\r                if (dir.mkdirs()) {\r                    log.debug(\"Directory created\");\r                } else {\r                    log.warn(\"Directory not created\");\r                }\r            }\r            dir = null;\r        }\r\r        FileOutputStream fo = new FileOutputStream(dest);\r        FileChannel foc = fo.getChannel();\r        foc.write(mbuf);\r        foc.close();\r        fo.close();\r        fo = null;\r\r        mbuf.clear();\r        mbuf = null;\r    }\r"}
{"id": "https://github.com/apache/groovy/blob/71cf20addb611bb8d097a59e395fd20bc7f31772/subprojects/groovy-nio/src/main/java/org/codehaus/groovy/runtime/NioGroovyMethods.java#L1399-L1401", "method_name": "newReader", "code": "    public static BufferedReader newReader(Path self) throws IOException {        return Files.newBufferedReader(self, Charset.defaultCharset());    }"}
{"id": "https://github.com/sonatype/jarjar-maven-plugin/blob/3fe3f8db91da18f7ded73e09d19525bc1d83631b/src/main/java/com/tonicsystems/jarjar/util/ClassPathIterator.java#L111-L141", "method_name": "advance", "code": "    private void advance() throws IOException {        if (!entries.hasNext()) {            if (!files.hasNext()) {                next = null;                return;            }            File file = files.next();            if (hasExtension(file.getName(), \".jar\")) {                ZipFile zip = new JarFile(file);                zips.add(zip);                entries = new ZipIterator(zip);            } else if (hasExtension(file.getName(), \".zip\")) {                ZipFile zip = new ZipFile(file);                zips.add(zip);                entries = new ZipIterator(zip);            } else if (file.isDirectory()) {                entries = new FileIterator(file);            } else {                throw new IllegalArgumentException(\"Do not know how to handle \" + file);            }        }        boolean foundClass = false;        while (!foundClass && entries.hasNext()) {          next = entries.next();          foundClass = isClass(next.getName());        }        if (!foundClass) {          advance();        }    }"}
{"id": "https://github.com/Appendium/flatpack/blob/5e09875d97db7038e3ba6af9468f5313d99b0082/flatpack-excel/src/main/java/net/sf/flatpack/excel/ExcelTransformer.java#L74-L147", "method_name": "getNumericColumns() != null ? Arrays.asList(getNumericColumns()) : new ArrayList<>()", "code": "    public void writeExcelFile() throws IOException, WriteException {\r        WritableWorkbook excelWrkBook = null;\r        int curDsPointer = 0;\r\r        try {\r            final String[] columnNames = ds.getColumns();\r            final List<String> exportOnlyColumnsList = getExportOnlyColumns() != null ? Arrays.asList(exportOnlyColumns) : null;\r            final List<String> excludeFromExportColumnsList = getExcludeFromExportColumns() != null ? Arrays.asList(excludeFromExportColumns) : null;\r            final List<String> numericColumnList = getNumericColumns() != null ? Arrays.asList(getNumericColumns()) : new ArrayList<>();\r            // get the current position of the DataSet. We have to go to the top\r            // to do this write,\r            // and we will put the pionter back where it was after we are done\r            curDsPointer = ds.getIndex();\r            ds.goTop();\r\r            excelWrkBook = Workbook.createWorkbook(xlsFile);\r            final WritableSheet wrkSheet = excelWrkBook.createSheet(\"results\", 0);\r\r            final WritableFont times10ptBold = new WritableFont(WritableFont.TIMES, 10, WritableFont.BOLD);\r            final WritableFont times10pt = new WritableFont(WritableFont.TIMES, 10, WritableFont.NO_BOLD);\r            // write the column headings in the spreadsheet\r            WritableCellFormat cellFormat = new WritableCellFormat(times10ptBold);\r            int colOffset = 0;\r            for (int i = 0; i < columnNames.length; i++) {\r                if (exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i])\r                        || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i])) {\r                    colOffset++;\r                    continue;\r                }\r\r                final Label xlsTextLbl = new Label(i - colOffset, 0, columnNames[i], cellFormat);\r                wrkSheet.addCell(xlsTextLbl);\r            }\r\r            cellFormat = new WritableCellFormat(times10pt);\r            int row = 1;\r            while (ds.next()) {\r                if (!ds.isRecordID(FPConstants.DETAIL_ID)) {\r                    continue;\r                }\r\r                colOffset = 0;\r                for (int i = 0; i < columnNames.length; i++) {\r                    if (exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i])\r                            || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i])) {\r                        colOffset++;\r                        continue;\r                    }\r\r                    WritableCell wc = null;\r                    if (numericColumnList.contains(columnNames[i])) {\r                        wc = new Number(i - colOffset, row, ds.getDouble(columnNames[i]), cellFormat);\r                    } else {\r                        wc = new Label(i - colOffset, row, ds.getString(columnNames[i]), cellFormat);\r                    }\r\r                    wrkSheet.addCell(wc);\r                }\r\r                row++;\r            }\r\r            excelWrkBook.write();\r\r        } finally {\r            if (curDsPointer > -1) {\r                ds.absolute(curDsPointer);\r            }\r            if (excelWrkBook != null) {\r                excelWrkBook.close();\r            }\r        }\r\r    }\r"}
{"id": "https://github.com/javadev/underscore-java/blob/4d49fe282626f5904aaa7d5b34fd78524b4932e9/src/main/java/com/github/underscore/lodash/U.java#L2029-L2031", "method_name": "jsonToXml", "code": "    public static String jsonToXml(String json) {        return jsonToXml(json, Xml.XmlStringBuilder.Step.TWO_SPACES);    }"}
{"id": "https://github.com/EdwardRaff/JSAT/blob/0ff53b7b39684b2379cc1da522f5b3a954b15cfb/JSAT/src/jsat/linear/Matrix.java#L311-L316", "method_name": "multiply", "code": "    public Matrix multiply(Matrix B, ExecutorService threadPool)    {        Matrix C = new DenseMatrix(this.rows(), B.cols());        multiply(B, C, threadPool);        return C;    }"}
{"id": "https://github.com/mkobayas/minimum-marshaller/blob/3a8d86decd7c02ef756522336f4483e6f53574d1/src/main/java/org/mk300/marshal/minimum/handler/PriorityQueueHandler.java#L46-L59", "method_name": "readObject", "code": "\t@SuppressWarnings(\"unchecked\")\r\t@Override\r\tpublic PriorityQueue readObject(OInput in, Class<PriorityQueue> clazz) throws IOException {\r\t\tint size = NaturalNumberIoHelper.readNaturalNumber(in);\r\t\t\r\t\tComparator comparator = (Comparator)in.readObject();\r\t\tPriorityQueue queue = new PriorityQueue(size, comparator);\r\t\t\r\t\tfor(int i=0 ; i<size ; i++) {\r\t\t\tqueue.add(in.readObject());\r\t\t}\r\t\t\r\t\treturn queue;\r\t}\r"}
{"id": "https://github.com/jamesagnew/hapi-fhir/blob/150a84d52fe691b7f48fcb28247c4bddb7aec352/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/FhirSystemDaoDstu2.java#L665-L667", "method_name": "toStatusString", "code": "\tprivate static String toStatusString(int theStatusCode) {\t\treturn Integer.toString(theStatusCode) + \" \" + defaultString(Constants.HTTP_STATUS_NAMES.get(theStatusCode));\t}"}
{"id": "https://github.com/gocd/gocd/blob/59a8480e23d6c06de39127635108dff57603cb71/config/config-api/src/main/java/com/thoughtworks/go/security/AESEncrypter.java#L64-L78", "method_name": "encrypt", "code": "    @Override    public String encrypt(String plainText) throws CryptoException {        try {            byte[] initializationVector = getIvProviderInstance().createIV();            Cipher encryptCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");            encryptCipher.init(Cipher.ENCRYPT_MODE, createSecretKeySpec(), new IvParameterSpec(initializationVector));            byte[] bytesToEncrypt = plainText.getBytes(StandardCharsets.UTF_8);            byte[] encryptedBytes = encryptCipher.doFinal(bytesToEncrypt);            return String.join(\":\", \"AES\", ENCODER.encodeToString(initializationVector), ENCODER.encodeToString(encryptedBytes));        } catch (Exception e) {            throw new CryptoException(e);        }    }"}
{"id": "https://github.com/amaembo/streamex/blob/936bbd1b7dfbcf64a3b990682bfc848213441d14/src/main/java/one/util/streamex/IntStreamEx.java#L2278-L2280", "method_name": "of", "code": "    public static IntStreamEx of(Random random, int randomNumberOrigin, int randomNumberBound) {        return seq(random.ints(randomNumberOrigin, randomNumberBound));    }"}
{"id": "https://github.com/elki-project/elki/blob/b54673327e76198ecd4c8a2a901021f1a9174498/elki-core-math/src/main/java/de/lmu/ifi/dbs/elki/math/statistics/distribution/LogNormalDistribution.java#L216-L218", "method_name": "quantile", "code": "  public static double quantile(double x, double mu, double sigma) {    return FastMath.exp(mu + sigma * NormalDistribution.standardNormalQuantile(x));  }"}
{"id": "https://github.com/alkacon/opencms-core/blob/bc104acc75d2277df5864da939a1f2de5fdee504/src/org/opencms/ui/apps/dbmanager/sqlconsole/CmsSqlConsoleResults.java#L93-L113", "method_name": "getCsv", "code": "    public String getCsv() {        StringWriter writer = new StringWriter();        try (CSVWriter csv = new CSVWriter(writer)) {            List<String> headers = new ArrayList<>();            for (String col : m_columns) {                headers.add(col);            }            csv.writeNext(headers.toArray(new String[] {}));            for (List<Object> row : m_data) {                List<String> colCsv = new ArrayList<>();                for (Object col : row) {                    colCsv.add(String.valueOf(col));                }                csv.writeNext(colCsv.toArray(new String[] {}));            }            return writer.toString();        } catch (IOException e) {            return null;        }    }"}
{"id": "https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/core/SnakerEngineImpl.java#L250-L259", "method_name": "startInstanceByExecution", "code": "\tpublic Order startInstanceByExecution(Execution execution) {\t\tProcess process = execution.getProcess();\t\tStartModel start = process.getModel().getStart();\t\tAssertHelper.notNull(start, \"流程定义[id=\" + process.getId() + \"]没有开始节点\");\t\t\t\tExecution current = execute(process, execution.getOperator(), execution.getArgs(), \t\t\t\texecution.getParentOrder().getId(), execution.getParentNodeName());\t\tstart.execute(current);\t\treturn current.getOrder();\t}"}
{"id": "https://github.com/landawn/AbacusUtil/blob/544b7720175d15e9329f83dd22a8cc5fa4515e12/src/com/landawn/abacus/util/StringUtil.java#L178-L192", "method_name": "reverse", "code": "    public static String reverse(final String str) {\r        if (N.isNullOrEmpty(str)) {\r            return str;\r        }\r\r        final StringBuilder sb = Objectory.createStringBuilder();\r\r        try {\r            sb.append(str);\r\r            return sb.reverse().toString();\r        } finally {\r            Objectory.recycle(sb);\r        }\r    }\r"}
{"id": "https://github.com/webmetrics/browsermob-proxy/blob/a9252e62246ac33d55d51b993ba1159404e7d389/src/main/java/org/browsermob/proxy/jetty/util/ThreadedServer.java#L418-L464", "method_name": "acceptSocket", "code": "    protected Socket acceptSocket(int timeout)    {        try        {            Socket s = null;            if (_listen != null)            {                if (_soTimeOut != timeout)                {                    _soTimeOut = timeout;                    _listen.setSoTimeout(_soTimeOut);                }                s = _listen.accept();                try                {                    if (getMaxIdleTimeMs() >= 0) s.setSoTimeout(getMaxIdleTimeMs());                    if (_lingerTimeSecs >= 0)                        s.setSoLinger(true, _lingerTimeSecs);                    else                        s.setSoLinger(false, 0);                }                catch (Exception e)                {                    LogSupport.ignore(log, e);                }            }            return s;        }        catch (java.net.SocketException e)        {            // TODO - this is caught and ignored due strange            // exception from linux java1.2.v1a            LogSupport.ignore(log, e);        }        catch (InterruptedIOException e)        {            LogSupport.ignore(log, e);        }        catch (IOException e)        {            log.warn(LogSupport.EXCEPTION, e);        }        return null;    }"}
{"id": "https://github.com/apache/incubator-druid/blob/f776b9408962b9006cfcfe4d6c1794751972cc8e/core/src/main/java/org/apache/druid/utils/CompressionUtils.java#L575-L612", "method_name": "decompress", "code": "  public static InputStream decompress(final InputStream in, final String fileName) throws IOException  {    if (fileName.endsWith(GZ_SUFFIX)) {      return gzipInputStream(in);    } else if (fileName.endsWith(BZ2_SUFFIX)) {      return new BZip2CompressorInputStream(in, true);    } else if (fileName.endsWith(XZ_SUFFIX)) {      return new XZCompressorInputStream(in, true);    } else if (fileName.endsWith(SNAPPY_SUFFIX)) {      return new FramedSnappyCompressorInputStream(in);    } else if (fileName.endsWith(ZSTD_SUFFIX)) {      return new ZstdCompressorInputStream(in);    } else if (fileName.endsWith(ZIP_SUFFIX)) {      // This reads the first file in the archive.      final ZipInputStream zipIn = new ZipInputStream(in, StandardCharsets.UTF_8);      try {        final ZipEntry nextEntry = zipIn.getNextEntry();        if (nextEntry == null) {          zipIn.close();          // No files in the archive - return an empty stream.          return new ByteArrayInputStream(new byte[0]);        }        return zipIn;      }      catch (IOException e) {        try {          zipIn.close();        }        catch (IOException e2) {          e.addSuppressed(e2);        }        throw e;      }    } else {      return in;    }  }"}
{"id": "https://github.com/gsi-upm/Shanks/blob/35d87a81c22731f4f83bbd0571c9c6d466bd16be/shanks-core/src/main/java/es/upm/dit/gsi/shanks/model/scenario/portrayal/ScenarioPortrayal.java#L261-L271", "method_name": "addScatterPlot", "code": "    public void addScatterPlot(String scatterID, String xAxisLabel, String yAxisLabel) throws ShanksException {\r        if (!this.timeCharts.containsKey(scatterID)) {\r            ScatterPlotGenerator scatter = new ScatterPlotGenerator();\r            scatter.setTitle(scatterID);\r            scatter.setXAxisLabel(xAxisLabel);\r            scatter.setYAxisLabel(yAxisLabel);\r            this.scatterPlots.put(scatterID, scatter);\r        } else {\r            throw new DuplicatedChartIDException(scatterID);\r        }\r    }\r"}
{"id": "https://github.com/joelittlejohn/jsonschema2pojo/blob/0552b80db93214eb186e4ae45b40866cc1e7eb84/jsonschema2pojo-cli/src/main/java/org/jsonschema2pojo/cli/Jsonschema2PojoCLI.java#L44-L53", "method_name": "main", "code": "    public static void main(String[] args) throws IOException {        Arguments arguments = new Arguments().parse(args);        if (arguments.isUseCommonsLang3()) {            System.err.println(\"--commons-lang3 is deprecated. Please remove the argument from your command-line arguments.\");        }        Jsonschema2Pojo.generate(arguments);    }"}
{"id": "https://github.com/dhanji/sitebricks/blob/8682029a78bd48fb8566173d970800499e9e5d97/sitebricks/src/main/java/com/google/sitebricks/rendering/control/EmbeddedRespond.java#L42-L71", "method_name": "extract", "code": "  private void extract(String htmlDoc) {    //now extract the contents of <body>...    int bodyStart = htmlDoc.indexOf(BODY_BEGIN) + BODY_BEGIN.length();    //scan for end of the <body> start tag (beginning of body content)    char quote = NOT_IN_QUOTE;    for (int body = bodyStart; body < htmlDoc.length(); body++) {      final char c = htmlDoc.charAt(body);      if (isQuoteChar(c)) {        if (quote == NOT_IN_QUOTE)          quote = c;        else if (quote == c)          quote = NOT_IN_QUOTE;      }      if ('>' == c && NOT_IN_QUOTE == quote) {        bodyStart = body + 1;        break;      }    }    int bodyEnd = htmlDoc.indexOf(BODY_END, bodyStart);    //if there was no body tag, just embed whatever was rendered directly    if (-1 == bodyEnd) {      EmbeddedRespond.this.body = htmlDoc;    } else      EmbeddedRespond.this.body = htmlDoc.substring(bodyStart, bodyEnd);  }"}
{"id": "https://github.com/lastaflute/lasta-di/blob/c4e123610c53a04cc836c5e456660e32d613447b/src/main/java/org/lastaflute/di/util/tiger/LdiCollectionsUtil.java#L628-L630", "method_name": "newPriorityQueue", "code": "    public static <E> PriorityQueue<E> newPriorityQueue(final PriorityQueue<? extends E> c) {        return new PriorityQueue<E>(c);    }"}
{"id": "https://github.com/gosu-lang/gosu-lang/blob/d6e9261b137ce66fef3726cabe7826d4a1f946b7/gosu-core-api/src/main/java/gw/util/perf/InvocationCounter.java#L66-L74", "method_name": "saveListTo", "code": "  public void saveListTo(final String fileName) {    try {      PrintStream stream = new PrintStream(new File(fileName));      printList(stream);      stream.close();    } catch (FileNotFoundException e) {      e.printStackTrace();    }  }"}
{"id": "https://github.com/mjdbc/mjdbc/blob/9db720a5b3218df38a1e5e59459045234bb6386b/src/main/java/com/github/mjdbc/DbConnection.java#L40-L50", "method_name": "ensureConnection", "code": "    @NotNull    private Connection ensureConnection() {        if (sqlConnection == null) {            try {                sqlConnection = db.dataSource.getConnection();            } catch (SQLException e) {                throw new RuntimeException(\"Failed to get connection from DataSource!\", e);            }        }        return sqlConnection;    }"}
{"id": "https://github.com/groupon/odo/blob/3bae43d5eca8ace036775e5b2d3ed9af1a9ff9b1/common/src/main/java/com/groupon/odo/common/Common.java#L158-L166", "method_name": "http_200_empty_response", "code": "    @ResponseOverride(            description = \"Return empty response\",            blockRequest = true)    public static void http_200_empty_response(PluginArguments args) throws Exception {        HttpServletResponse response = args.getResponse();        response.setStatus(Constants.statusOK);        response.setContentType(Constants.contentType);        PluginHelper.writeResponseContent(response, createErrorMessage(Constants.statusOK, \"\\\"\\\"\"));    }"}
{"id": "https://github.com/couchbase/couchbase-lite-java/blob/cb72c44186456e6191a9ad0a7feb310011d0b081/src/main/java/com/couchbase/lite/internal/fleece/MArray.java#L49-L53", "method_name": "initAsCopyOf", "code": "    public void initAsCopyOf(MArray array, boolean isMutable) {        super.initAsCopyOf(array, isMutable);        baseArray = array != null ? array.getBaseArray() : null;        values = array != null ? new ArrayList<>(array.values) : new ArrayList<>();    }"}
{"id": "https://github.com/bladecoder/blade-ink/blob/930922099f7073f50f956479adaa3cbd47c70225/src/main/java/com/bladecoder/ink/runtime/Stopwatch.java#L89-L97", "method_name": "getElapsedMinutes", "code": "\tpublic long getElapsedMinutes() {\t\tlong elapsed;\t\tif (running) {\t\t\telapsed = (System.nanoTime() - startTime);\t\t} else {\t\t\telapsed = (stopTime - startTime);\t\t}\t\treturn elapsed / nsPerMm;\t}"}
{"id": "https://github.com/facebookarchive/hadoop-20/blob/2a29bc6ecf30edb1ad8dbde32aa49a317b4d44f4/src/hdfs/org/apache/hadoop/hdfs/server/namenode/UnderReplicatedBlocks.java#L81-L86", "method_name": "size", "code": "  synchronized int size( int priority) {    if (priority < 0 || priority >= LEVEL) {      throw new IllegalArgumentException(\"Unsupported priority: \" + priority);    }    return priorityQueues.get(priority).size();  }"}
{"id": "https://github.com/Waikato/moa/blob/395982e5100bfe75a3a4d26115462ce2cc74cbb0/moa/src/main/java/moa/clusterers/clustream/WithKmeans.java#L233-L262", "method_name": "0", "code": "\tpublic static Clustering kMeans_gta(int k, Clustering clustering, Clustering gtClustering) {\t\t\t\tArrayList<CFCluster> microclusters = new ArrayList<CFCluster>();        for (int i = 0; i < clustering.size(); i++) {            if (clustering.get(i) instanceof CFCluster) {                microclusters.add((CFCluster)clustering.get(i));            } else {                System.out.println(\"Unsupported Cluster Type:\" + clustering.get(i).getClass() + \". Cluster needs to extend moa.cluster.CFCluster\");            }        }                int n = microclusters.size();\t\tassert (k <= n);\t\t\t\t/* k-means */\t\tRandom random = new Random(0);\t\tCluster[] centers = new Cluster[k];\t\tint K = gtClustering.size();\t\t\t\tfor (int i = 0; i < k; i++) {\t\t\tif (i < K) {\t// GT-aided\t\t\t\tcenters[i] = new SphereCluster(gtClustering.get(i).getCenter(), 0);\t\t\t} else {\t\t// Randomized\t\t\t\tint rid = random.nextInt(n);\t\t\t\tcenters[i] = new SphereCluster(microclusters.get(rid).getCenter(), 0);\t\t\t}\t\t}\t\t\t\treturn cleanUpKMeans(kMeans(k, centers, microclusters), microclusters);\t}"}
{"id": "https://github.com/paypal/SeLion/blob/694d12d0df76db48d0360b16192770c6a4fbdfd2/server/src/main/java/com/paypal/selion/utils/process/AbstractProcessHandler.java#L130-L146", "method_name": "pid", "code": "    protected int getCurrentProcessID() throws ProcessHandlerException {        int pid;        // Not ideal but using JNA failed on RHEL5.        RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();        Field jvm = null;        try {            jvm = runtime.getClass().getDeclaredField(\"jvm\");            jvm.setAccessible(true);            VMManagement mgmt = (VMManagement) jvm.get(runtime);            Method pid_method = mgmt.getClass().getDeclaredMethod(\"getProcessId\");            pid_method.setAccessible(true);            pid = (Integer) pid_method.invoke(mgmt);        } catch (NoSuchFieldException | NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {            throw new ProcessHandlerException(e);        }        return pid;    }"}
{"id": "https://github.com/kiegroup/jbpm/blob/c3473c728aa382ebbea01e380c5e754a96647b82/jbpm-bpmn2-emfextmodel/src/main/java/bpsim/impl/DocumentRootImpl.java#L267-L269", "method_name": "setBinomialDistribution", "code": "\tpublic void setBinomialDistribution(BinomialDistributionType newBinomialDistribution) {\t\t((FeatureMap.Internal)getMixed()).set(BpsimPackage.Literals.DOCUMENT_ROOT__BINOMIAL_DISTRIBUTION, newBinomialDistribution);\t}"}
{"id": "https://github.com/WorldwideAntimalarialResistanceNetwork/WWARN-Maps-Surveyor/blob/224280bcd6e8045bda6b673584caf0aea5e4c841/MapCore/src/main/java/org/wwarn/mapcore/client/components/customwidgets/facet/FacetSearchableCheckBoxWidget.java#L223-L235", "method_name": "check", "code": "    private void check(CheckBox checkBox) {        if (checkBox.getValue()) {            selectedListItems.add(checkBox.getText());            checkBox.addStyleName(STYLE_CHECKBOXLIST_ITEM_CHECKED);            clearSelectionControl.setVisible(true);        } else {            removeItem(checkBox.getText());            checkBox.removeStyleName(STYLE_CHECKBOXLIST_ITEM_CHECKED);            if (selectedListItems.size() == 0) {                clearSelectionControl.setVisible(false);            }        }    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.messaging.jms.2.0/src/com/ibm/ws/sib/api/jms/impl/JmsQueueSenderImpl.java#L63-L67", "method_name": "send", "code": "  public void send(Queue queue, Message message, int deliveryMode, int priority, long timeToLive) throws JMSException {    if (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) SibTr.entry(this, tc, \"send\", new Object[]{queue, message, deliveryMode, priority, timeToLive});    super.send(queue, message, deliveryMode, priority, timeToLive);    if (TraceComponent.isAnyTracingEnabled() && tc.isEntryEnabled()) SibTr.exit(this, tc, \"send\");  }"}
{"id": "https://github.com/droidparts/droidparts/blob/e4f782f136e349feeda518fa15d501fd0fec70c0/droidparts/src/org/droidparts/util/Strings.java#L63-L69", "method_name": "urlEncode", "code": "\tpublic static String urlEncode(String str) {\t\ttry {\t\t\treturn URLEncoder.encode(str, UTF8);\t\t} catch (UnsupportedEncodingException e) {\t\t\tthrow new IllegalArgumentException(\"failed to encode\", e);\t\t}\t}"}
{"id": "https://github.com/mpetazzoni/ttorrent/blob/ecd0e6caf853b63393c4ab63cfd8f20114f73f70/ttorrent-client/src/main/java/com/turn/ttorrent/client/announce/UDPTrackerClient.java#L356-L372", "method_name": "recv", "code": "  private ByteBuffer recv(int attempt)          throws IOException, SocketException, SocketTimeoutException {    int timeout = UDP_BASE_TIMEOUT_SECONDS * (int) Math.pow(2, attempt);    logger.trace(\"Setting receive timeout to {}s for attempt {}...\",            timeout, attempt);    this.socket.setSoTimeout(timeout * 1000);    try {      DatagramPacket p = new DatagramPacket(              new byte[UDP_PACKET_LENGTH],              UDP_PACKET_LENGTH);      this.socket.receive(p);      return ByteBuffer.wrap(p.getData(), 0, p.getLength());    } catch (SocketTimeoutException ste) {      throw ste;    }  }"}
{"id": "https://github.com/qatools/properties/blob/ae50b460a6bb4fcb21afe888b2e86a7613cd2115/src/main/java/ru/qatools/properties/utils/PropertiesUtils.java#L15-L21", "method_name": "readProperties", "code": "    public static Properties readProperties(File file) {        try {            return readProperties(new FileInputStream(file));        } catch (FileNotFoundException e) {            return new Properties();        }    }"}
{"id": "https://github.com/PureSolTechnologies/genesis/blob/1031027c5edcfeaad670896802058f78a2f7b159/transformation/postgresql/src/main/java/com/puresoltechnologies/genesis/transformation/postgresql/PostgreSQLTransformationSequence.java#L30-L37", "method_name": "open", "code": "    @Override    public void open(Properties configuration) throws TransformationException {\ttry {\t    connection = PostgreSQLUtils.connect(configuration);\t} catch (SQLException e) {\t    throw new TransformationException(\"Could not open connection to PostgreSQL.\", e);\t}    }"}
{"id": "https://github.com/prometheus/client_java/blob/4e0e7527b048f1ffd0382dcb74c0b9dab23b4d9f/simpleclient_httpserver/src/main/java/io/prometheus/client/exporter/HTTPServer.java#L101-L113", "method_name": "parseQuery", "code": "    protected static Set<String> parseQuery(String query) throws IOException {        Set<String> names = new HashSet<String>();        if (query != null) {            String[] pairs = query.split(\"&\");            for (String pair : pairs) {                int idx = pair.indexOf(\"=\");                if (idx != -1 && URLDecoder.decode(pair.substring(0, idx), \"UTF-8\").equals(\"name[]\")) {                    names.add(URLDecoder.decode(pair.substring(idx + 1), \"UTF-8\"));                }            }        }        return names;    }"}
{"id": "https://github.com/dadoonet/fscrawler/blob/cca00a14e21ef9986aa30e19b160463aed6bf921/tika/src/main/java/fr/pilato/elasticsearch/crawler/fs/tika/XmlDocParser.java#L55-L67", "method_name": "generate", "code": "    public static String generate(InputStream inputStream) throws IOException {        logger.trace(\"Converting XML document [{}]\");        // Extracting XML content        // See #185: https://github.com/dadoonet/fscrawler/issues/185        Map<String, Object> map = generateMap(inputStream);        // Serialize to JSON        String json = mapper.writeValueAsString(map);        logger.trace(\"Generated JSON: {}\", json);        return json;    }"}
{"id": "https://github.com/sailthru/sailthru-java-client/blob/62b491f6a39b41b836bfc021779200d29b6d2069/src/main/com/sailthru/client/AbstractSailthruClient.java#L291-L293", "method_name": "apiPost", "code": "    public JsonResponse apiPost(ApiParams data, ApiFileParams fileParams) throws IOException {        return httpRequestJson(HttpRequestMethod.POST, data, fileParams);    }"}
{"id": "https://github.com/project-ncl/pnc/blob/85743ca59d14cdf750d6daa8bd0a0a8be390a796/auth/src/main/java/org/jboss/pnc/auth/keycloakutil/util/HttpUtil.java#L285-L291", "method_name": "urlencode", "code": "    public static String urlencode(String value) {        try {            return URLEncoder.encode(value, UTF_8);        } catch (UnsupportedEncodingException e) {            throw new RuntimeException(\"Failed to urlencode\", e);        }    }"}
{"id": "https://github.com/NoraUi/NoraUi/blob/5f491a3339c7d3c20d7207760bdaf2acdb8f260c/src/main/java/com/github/noraui/application/steps/Step.java#L739-L754", "method_name": "selectCheckbox", "code": "    protected void selectCheckbox(PageElement element, String valueKeyOrKey, Map<String, Boolean> values) throws TechnicalException, FailureException {\r        final String valueKey = Context.getValue(valueKeyOrKey) != null ? Context.getValue(valueKeyOrKey) : valueKeyOrKey;\r        try {\r            final WebElement webElement = Context.waitUntil(ExpectedConditions.elementToBeClickable(Utilities.getLocator(element)));\r            Boolean checkboxValue = values.get(valueKey);\r            if (checkboxValue == null) {\r                checkboxValue = values.get(\"Default\");\r            }\r            if (webElement.isSelected() != checkboxValue.booleanValue()) {\r                webElement.click();\r            }\r        } catch (final Exception e) {\r            new Result.Failure<>(e.getMessage(), Messages.format(Messages.getMessage(Messages.FAIL_MESSAGE_UNABLE_TO_CHECK_ELEMENT), element, element.getPage().getApplication()), true,\r                    element.getPage().getCallBack());\r        }\r    }\r"}
{"id": "https://github.com/Pi4J/pi4j/blob/03cacc62223cc59b3118bfcefadabab979fd84c7/pi4j-core/src/main/java/com/pi4j/jni/Serial.java#L725-L737", "method_name": "write", "code": "    public synchronized static void write(int fd, ByteBuffer ... data) throws IOException{        // write each byte buffer to the serial port        for(ByteBuffer single : data) {            // read the byte buffer from the current position up to the limit            byte[] payload = new byte[single.remaining()];            single.get(payload);            // write the data contents to the serial port via JNI native method            write(fd, payload, payload.length);        }    }"}
{"id": "https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/httpservices/src/main/java/ucar/httpservices/HTTPUtil.java#L568-L579", "method_name": "readtextfile", "code": "    static public String    readtextfile(Reader rdr)            throws IOException    {        StringBuilder buf = new StringBuilder();        for(; ; ) {            int c = rdr.read();            if(c < 0) break;            buf.append((char) c);        }        return buf.toString();    }"}
{"id": "https://github.com/Azure/azure-sdk-for-java/blob/aab183ddc6686c82ec10386d5a683d2691039626/common/azure-common/src/main/java/com/azure/common/http/policy/HttpLoggingPolicy.java#L166-L177", "method_name": "prettyPrintIfNeeded", "code": "    private String prettyPrintIfNeeded(Logger logger, String contentType, String body) {        String result = body;        if (prettyPrintJSON && contentType != null && (contentType.startsWith(\"application/json\") || contentType.startsWith(\"text/json\"))) {            try {                final Object deserialized = PRETTY_PRINTER.readTree(body);                result = PRETTY_PRINTER.writeValueAsString(deserialized);            } catch (Exception e) {                log(logger, \"Failed to pretty print JSON: \" + e.getMessage());            }        }        return result;    }"}
{"id": "https://github.com/datacleaner/DataCleaner/blob/9aa01fdac3560cef51c55df3cb2ac5c690b57639/desktop/ui/src/main/java/org/datacleaner/widgets/properties/AbstractMultipleCheckboxesPropertyWidget.java#L148-L166", "method_name": "addCheckBox", "code": "    protected JCheckBox addCheckBox(final E item, final boolean checked) {        final String name = getName(item);        DCCheckBox<E> checkBox = _checkBoxes.get(name);        if (checkBox != null) {            checkBox.setSelected(checked);            return checkBox;        }        checkBox = new DCCheckBox<>(name, checked);        checkBox.setValue(item);        checkBox.setOpaque(false);        checkBox.addListener(_changeListener);        _checkBoxes.put(name, checkBox);        add(checkBox);        updateVisibility();        updateUI();        return checkBox;    }"}
{"id": "https://github.com/TheHortonMachine/hortonmachine/blob/d2b436bbdf951dc1fda56096a42dbc0eae4d35a5/gui/src/main/java/org/hortonmachine/gui/utils/GuiUtilities.java#L237-L241", "method_name": "copyToClipboard", "code": "    public static void copyToClipboard( String text ) {        StringSelection selection = new StringSelection(text);        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();        clipboard.setContents(selection, selection);    }"}
{"id": "https://github.com/lucee/Lucee/blob/29b153fc4e126e5edb97da937f2ee2e231b87593/core/src/main/java/lucee/runtime/tag/Zip.java#L362-L394", "method_name": "ExceptionUtil.similarKeyMessage(names(zip), entryPaths[0], \"entry\", \"zip file\", \"in the zip file [\" + file + \"]\", true)", "code": "    private void actionRead(boolean binary) throws ZipException, IOException, PageException {\trequired(\"file\", file, true);\trequired(\"variable\", variable);\trequired(\"entrypath\", entryPaths);\tZipFile zip = getZip(file);\tif (entryPaths.length > 1) throw new ApplicationException(\"you can only read one entry!\");\ttry {\t    ZipEntry ze = getZipEntry(zip, entryPaths[0]);\t    if (ze == null) {\t\tString msg = ExceptionUtil.similarKeyMessage(names(zip), entryPaths[0], \"entry\", \"zip file\", \"in the zip file [\" + file + \"]\", true);\t\tthrow new ApplicationException(msg);\t\t// throw new ApplicationException(\"zip file [\"+file+\"] has no entry with name [\"+entryPath+\"]\");\t    }\t    ByteArrayOutputStream baos = new ByteArrayOutputStream();\t    InputStream is = zip.getInputStream(ze);\t    IOUtil.copy(is, baos, true, false);\t    zip.close();\t    if (binary) pageContext.setVariable(variable, baos.toByteArray());\t    else {\t\tif (charset == null) charset = ((PageContextImpl) pageContext).getResourceCharset().name();\t\tpageContext.setVariable(variable, new String(baos.toByteArray(), charset));\t    }\t}\tfinally {\t    IOUtil.closeEL(zip);\t}    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.product.utility/src/com/ibm/ws/product/utility/extension/IFixCompareCommandTask.java#L553-L568", "method_name": "convertCsvToSet", "code": "    private Set<String> convertCsvToSet(String csv) {        // A null line in the file indicates an empty file so return an empty        // set as it means no APARs were found        if (csv == null) {            return Collections.emptySet();        }        // If we got this far then we must of found the CSV file so process it        // to find the APAR IDs        Set<String> fixPackAparIds = new HashSet<String>();        String[] aparIds = csv.split(\",\");        for (String id : aparIds) {            fixPackAparIds.add(id);        }        return fixPackAparIds;    }"}
{"id": "https://github.com/flow/math/blob/12c1a809720aced976ed22de34fb1457d8eda78f/target/generated-sources/template/com/flowpowered/math/matrix/Matrix2f.java#L125-L129", "method_name": "mul", "code": "    public Matrix2f mul(Matrix2f m) {        return new Matrix2f(                m00 * m.m00 + m01 * m.m10, m00 * m.m01 + m01 * m.m11,                m10 * m.m00 + m11 * m.m10, m10 * m.m01 + m11 * m.m11);    }"}
{"id": "https://github.com/centic9/commons-dost/blob/f6fa4e3e0b943ff103f918824319d8abf33d0e0f/src/main/java/org/dstadler/commons/zip/ZipUtils.java#L338-L377", "method_name": "new File(toDir, entry.getName())", "code": "\tpublic static void extractZip(File zip, File toDir) throws IOException{\t\tif(!toDir.exists()) {\t\t\tthrow new IOException(\"Directory '\" + toDir + \"' does not exist.\");\t\t}\t\ttry (ZipFile zipFile = new ZipFile(zip)) {\t\t\tEnumeration<? extends ZipEntry> entries = zipFile.entries();\t\t\twhile (entries.hasMoreElements()) {\t\t\t\tZipEntry entry = entries.nextElement();\t\t\t\tFile target = new File(toDir, entry.getName());\t\t\t\tif (entry.isDirectory()) {\t\t\t\t\t// Assume directories are stored parents first then children.\t\t\t\t\t//logger.info(\"Extracting directory: \" + entry.getName());\t\t\t\t\t// This is not robust, just for demonstration purposes.\t\t\t\t\tif(!target.mkdirs()) {\t\t\t\t\t\tlogger.warning(\"Could not create directory \" + target);\t\t\t\t\t}\t\t\t\t\tcontinue;\t\t\t\t}\t\t\t\t// zips can contain nested files in sub-dirs without separate entries for the directories\t\t\t\tif(!target.getParentFile().exists() && !target.getParentFile().mkdirs()) {\t\t\t\t\tlogger.warning(\"Could not create directory \" + target.getParentFile());\t\t\t\t}\t\t\t\t//logger.info(\"Extracting file: \" + entry.getName());\t\t\t\ttry (InputStream inputStream = zipFile.getInputStream(entry)) {\t\t\t\t\ttry (BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(target))) {\t\t\t\t\t\tIOUtils.copy(inputStream, outputStream);\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t} catch (FileNotFoundException | NoSuchFileException e) {\t\t\tthrow e;\t\t} catch (IOException e) {\t\t\tthrow new IOException(\"While extracting file \" + zip + \" to \" + toDir, e);\t\t}\t}"}
{"id": "https://github.com/jayantk/jklol/blob/d27532ca83e212d51066cf28f52621acc3fd44cc/src/com/jayantkrish/jklol/training/DefaultLogFunction.java#L132-L143", "method_name": "printTimeStatistics", "code": "  public void printTimeStatistics() {    print(\"Elapsed time statistics:\");    List<String> timers = Lists.newArrayList(getAllTimers());    Collections.sort(timers);    for (String timer : timers) {      double total = (double) getTimerElapsedTime(timer);      long invocations = getTimerInvocations(timer);      double average = total / invocations;      print(String.format(\"%s: %.3f sec (%.3f ms * %d)\", timer, (total / 1000), average, invocations));    }  }"}
{"id": "https://github.com/TheHortonMachine/hortonmachine/blob/d2b436bbdf951dc1fda56096a42dbc0eae4d35a5/gears/src/main/java/org/hortonmachine/gears/utils/math/matrixes/Matrix.java#L300-L312", "method_name": "multiply", "code": "    public Matrix multiply(double k)    {        double pv[][] = new double[nRows][nCols]; // product values        // Compute values of the product.        for (int r = 0; r < nRows; ++r) {            for (int c = 0; c < nCols; ++c) {                pv[r][c] = k*values[r][c];            }        }        return new Matrix(pv);    }"}
{"id": "https://github.com/bladecoder/blade-ink/blob/930922099f7073f50f956479adaa3cbd47c70225/src/main/java/com/bladecoder/ink/runtime/Stopwatch.java#L47-L55", "method_name": "getElapsedTicks", "code": "\tpublic long getElapsedTicks() {\t\tlong elapsed;\t\tif (running) {\t\t\telapsed = (System.nanoTime() - startTime);\t\t} else {\t\t\telapsed = (stopTime - startTime);\t\t}\t\treturn elapsed / nsPerTick;\t}"}
{"id": "https://github.com/ButterFaces/ButterFaces/blob/e8c2bb340c89dcdbac409fcfc7a2a0e07f2462fc/showcase/src/main/java/org/butterfaces/component/showcase/PrettyPrintShowcase.java#L99-L114", "method_name": "getHtmlExample", "code": "    private String getHtmlExample() {        final StringBuilder html = new StringBuilder();        html.append(\"<!DOCTYPE html>\\n\");        html.append(\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\"\\n\");        html.append(\"      xmlns:h=\\\"http://xmlns.jcp.org/jsf/html\\\"\\n\");        html.append(\"      xmlns:b=\\\"http://butterfaces.org/components\\\">\\n\");        html.append(\"<h:head />\\n\");        html.append(\"<body>\\n\");        html.append(\"   <form>\\n\");        html.append(\"      Hello World!\\n\");        html.append(\"   </form>\\n\");        html.append(\"</body>\\n\");        html.append(\"</html>\");        return html.toString();    }"}
{"id": "https://github.com/Stratio/bdt/blob/55324d19e7497764ad3dd7139923e13eb9841d75/src/main/java/com/stratio/qa/specs/CommonG.java#L2120-L2167", "method_name": "connectToPostgreSQLDatabase", "code": "    public void connectToPostgreSQLDatabase(String database, String host, String port, String user, String password, Boolean secure, String ca, String crt, String key) throws SQLException {        if (port.startsWith(\"[\")) {            port = port.substring(1, port.length() - 1);        }        if (!secure) {            if (password == null) {                password = \"stratio\";            }            try {                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, user, password);            } catch (SQLException se) {                // log the exception                this.getLogger().error(se.getMessage());                // re-throw the exception                throw se;            }        } else {            Properties props = new Properties();            if (user != null) {                props.setProperty(\"user\", user);            }            if (ca != null) {                props.setProperty(\"sslrootcert\", ca);            }            if (crt != null) {                props.setProperty(\"sslcert\", crt);            }            if (key != null) {                props.setProperty(\"sslkey\", key);            }            props.setProperty(\"password\", \"null\");            props.setProperty(\"ssl\", \"true\");            props.setProperty(\"sslmode\", \"verify-full\");            try {                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, props);            } catch (SQLException se) {                // log the exception                this.getLogger().error(se.getMessage());                // re-throw the exception                throw se;            }        }    }"}
{"id": "https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/web/src/main/java/org/springframework/security/web/savedrequest/FastHttpDateFormat.java#L125-L138", "method_name": "getCurrentDate", "code": "\tpublic static String getCurrentDate() {\t\tlong now = System.currentTimeMillis();\t\tif ((now - currentDateGenerated) > 1000) {\t\t\tsynchronized (format) {\t\t\t\tif ((now - currentDateGenerated) > 1000) {\t\t\t\t\tcurrentDateGenerated = now;\t\t\t\t\tcurrentDate = format.format(new Date(now));\t\t\t\t}\t\t\t}\t\t}\t\treturn currentDate;\t}"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/arbiter/arbiter-core/src/main/java/org/deeplearning4j/arbiter/optimize/distribution/DistributionUtils.java#L106-L148", "method_name": "distributionEquals", "code": "    public static boolean distributionEquals(IntegerDistribution a, IntegerDistribution b) {        if (a.getClass() != b.getClass())            return false;        Class<?> c = a.getClass();        if (c == BinomialDistribution.class) {            BinomialDistribution ba = (BinomialDistribution) a;            BinomialDistribution bb = (BinomialDistribution) b;            return ba.getNumberOfTrials() == bb.getNumberOfTrials()                            && ba.getProbabilityOfSuccess() == bb.getProbabilityOfSuccess();        } else if (c == GeometricDistribution.class) {            GeometricDistribution ga = (GeometricDistribution) a;            GeometricDistribution gb = (GeometricDistribution) b;            return ga.getProbabilityOfSuccess() == gb.getProbabilityOfSuccess();        } else if (c == HypergeometricDistribution.class) {            HypergeometricDistribution ha = (HypergeometricDistribution) a;            HypergeometricDistribution hb = (HypergeometricDistribution) b;            return ha.getPopulationSize() == hb.getPopulationSize()                            && ha.getNumberOfSuccesses() == hb.getNumberOfSuccesses()                            && ha.getSampleSize() == hb.getSampleSize();        } else if (c == PascalDistribution.class) {            PascalDistribution pa = (PascalDistribution) a;            PascalDistribution pb = (PascalDistribution) b;            return pa.getNumberOfSuccesses() == pb.getNumberOfSuccesses()                            && pa.getProbabilityOfSuccess() == pb.getProbabilityOfSuccess();        } else if (c == PoissonDistribution.class) {            PoissonDistribution pa = (PoissonDistribution) a;            PoissonDistribution pb = (PoissonDistribution) b;            return pa.getMean() == pb.getMean();        } else if (c == UniformIntegerDistribution.class) {            UniformIntegerDistribution ua = (UniformIntegerDistribution) a;            UniformIntegerDistribution ub = (UniformIntegerDistribution) b;            return ua.getSupportUpperBound() == ub.getSupportUpperBound()                            && ua.getSupportUpperBound() == ub.getSupportUpperBound();        } else if (c == ZipfDistribution.class) {            ZipfDistribution za = (ZipfDistribution) a;            ZipfDistribution zb = (ZipfDistribution) b;            return za.getNumberOfElements() == zb.getNumberOfElements() && za.getExponent() == zb.getNumberOfElements();        } else {            throw new UnsupportedOperationException(\"Unknown or not supported IntegerDistribution: \" + c);        }    }"}
{"id": "https://github.com/lucee/Lucee/blob/29b153fc4e126e5edb97da937f2ee2e231b87593/core/src/main/java/lucee/runtime/config/XMLConfigAdmin.java#L2176-L2183", "method_name": "encode", "code": "    private static String encode(String str) {\ttry {\t    return URLEncodedFormat.invoke(str, \"UTF-8\", false);\t}\tcatch (PageException e) {\t    return URLEncoder.encode(str);\t}    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.jsf.2.2/src/org/apache/myfaces/convert/ConverterUtils.java#L35-L56", "method_name": "convertToInt", "code": "    public static int convertToInt(Object value)    {        if (value instanceof Number)        {            return ((Number) value).intValue();        }        else if (value instanceof String)        {            try            {                return Integer.parseInt((String) value);            }            catch (NumberFormatException e)            {                throw new IllegalArgumentException(\"Cannot convert \" + value.toString() + \" to int\");            }        }        else        {            throw new IllegalArgumentException(\"Cannot convert \" + value.toString() + \" to int\");        }    }"}
{"id": "https://github.com/ozimov/cirneco/blob/78ad782da0a2256634cfbebb2f97ed78c993b999/hamcrest/hamcrest-matchers/src/main/java/it/ozimov/cirneco/hamcrest/collect/IsIterableWithDistinctElements.java#L45-L58", "method_name": "new ArrayList<>()", "code": "    @Override    public void describeMismatchSafely(final Iterable<? extends E> actual, final Description mismatchDescription) {        final Set<E> elements = new HashSet<>();        final Collection<E> nonDistinctElements = new ArrayList<>(); // keep actual's order for reporting mismatch        for (final E element : actual) {            if (!elements.add(element)) {                nonDistinctElements.add(element);            }        }        mismatchDescription.appendText(\" non distinct elements are \").appendValueList(\"[\", \", \", \"]\",                nonDistinctElements);    }"}
{"id": "https://github.com/enasequence/sequencetools/blob/4127f5e1a17540239f5810136153fbd6737fa262/src/main/java/uk/ac/ebi/embl/api/validation/helper/Utils.java#L989-L1035", "method_name": "escapeASCIIHtmlEntities", "code": "\tpublic static StringBuilder escapeASCIIHtmlEntities(final CharSequence input) {\t\tif(input == null)\t\t\treturn null;\t\tStringBuilder replaced = new StringBuilder();\t\tStringBuilder toBeReplaced = new StringBuilder();\t\tboolean isEntity = false;\t\tfor(int i =0; i<input.length();i++){\t\t\tchar c = input.charAt(i);\t\t\tif (isEntity) {\t\t\t\tif (c == '&') {\t\t\t\t\treplaced.append(toBeReplaced);\t\t\t\t\ttoBeReplaced = new StringBuilder();\t\t\t\t\ttoBeReplaced.append(c);\t\t\t\t} else {\t\t\t\t\ttoBeReplaced.append(c);\t\t\t\t\tif (c == ';') {\t\t\t\t\t\tif (entityNameToChar.containsKey(toBeReplaced.toString())) {\t\t\t\t\t\t\treplaced.append(entityNameToChar.get(toBeReplaced.toString()));\t\t\t\t\t\t} else {\t\t\t\t\t\t\tMatcher m = entityNumberPattern.matcher(toBeReplaced);\t\t\t\t\t\t\tif (m.matches()) {\t\t\t\t\t\t\t\tint ascii = Integer.parseInt(m.group(1));\t\t\t\t\t\t\t\treplaced.append(ascii >= 32 && ascii <= 126 ? Character.toString((char) ascii) : toBeReplaced);\t\t\t\t\t\t\t} else {\t\t\t\t\t\t\t\treplaced.append(toBeReplaced);\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t\tisEntity = false;\t\t\t\t\t\ttoBeReplaced = new StringBuilder();\t\t\t\t\t}\t\t\t\t}\t\t\t} else if (c == '&') {\t\t\t\tisEntity = true;\t\t\t\ttoBeReplaced.append(c);\t\t\t} else {\t\t\t\treplaced.append(c);\t\t\t}\t\t}\t\tif (isEntity) {\t\t\treplaced.append(toBeReplaced);\t\t}\t\treturn replaced;\t}"}
{"id": "https://github.com/apache/groovy/blob/71cf20addb611bb8d097a59e395fd20bc7f31772/src/main/groovy/groovy/lang/Closure.java#L710-L714", "method_name": "memoizeAtMost", "code": "    public Closure<V> memoizeAtMost(final int maxCacheSize) {        if (maxCacheSize < 0) throw new IllegalArgumentException(\"A non-negative number is required as the maxCacheSize parameter for memoizeAtMost.\");        return Memoize.buildMemoizeFunction(new LRUCache(maxCacheSize), this);    }"}
{"id": "https://github.com/CleverTap/clevertap-android-sdk/blob/be134c06a4f07494c398335ad9ff4976633743e1/clevertap-android-sdk/src/main/java/com/clevertap/android/sdk/CTInboxButtonClickListener.java#L65-L72", "method_name": "copyToClipboard", "code": "    private void copyToClipboard(Context context){        ClipboardManager clipboardManager = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);        ClipData clipData = ClipData.newPlainText(buttonText,inboxMessage.getInboxMessageContents().get(0).getLinkCopyText(buttonObject));        if (clipboardManager != null) {            clipboardManager.setPrimaryClip(clipData);            Toast.makeText(context,\"Text Copied to Clipboard\",Toast.LENGTH_SHORT).show();        }    }"}
{"id": "https://github.com/fabric8io/fabric8-forge/blob/a59871bae4d5c5d3ece10f1e8758e73663087f19/addons/devops/src/main/java/io/fabric8/forge/devops/springboot/UnzipHelper.java#L37-L57", "method_name": "zipIn.getNextEntry()", "code": "    public static void unzip(File file, File destDir) throws IOException {        if (!destDir.exists()) {            destDir.mkdir();        }        ZipInputStream zipIn = new ZipInputStream(new FileInputStream(file));        ZipEntry entry = zipIn.getNextEntry();        // iterates over entries in the zip file        while (entry != null) {            File entryFile = new File(destDir, entry.getName());            if (!entry.isDirectory()) {                // if the entry is a file, extracts it                extractFile(zipIn, entryFile);            } else {                // if the entry is a directory, make the directory                entryFile.mkdir();            }            zipIn.closeEntry();            entry = zipIn.getNextEntry();        }        zipIn.close();    }"}
{"id": "https://github.com/bonigarcia/webdrivermanager/blob/d1f05b58895dd646d4bd7a59b26a4f2ca58872fd/src/main/java/io/github/bonigarcia/wdm/Downloader.java#L208-L244", "method_name": "unZip", "code": "    private void unZip(File compressedFile) throws IOException {        File file = null;        try (ZipFile zipFolder = new ZipFile(compressedFile)) {            Enumeration<?> enu = zipFolder.entries();            while (enu.hasMoreElements()) {                ZipEntry zipEntry = (ZipEntry) enu.nextElement();                String name = zipEntry.getName();                long size = zipEntry.getSize();                long compressedSize = zipEntry.getCompressedSize();                log.trace(\"Unzipping {} (size: {} KB, compressed size: {} KB)\",                        name, size, compressedSize);                file = new File(compressedFile.getParentFile(), name);                if (!file.exists() || config.isOverride()) {                    if (name.endsWith(\"/\")) {                        file.mkdirs();                        continue;                    }                    File parent = file.getParentFile();                    if (parent != null) {                        parent.mkdirs();                    }                    try (InputStream is = zipFolder.getInputStream(zipEntry)) {                        copyInputStreamToFile(is, file);                    }                    setFileExecutable(file);                } else {                    log.debug(\"{} already exists\", file);                }            }        }    }"}
{"id": "https://github.com/bladecoder/blade-ink/blob/930922099f7073f50f956479adaa3cbd47c70225/src/main/java/com/bladecoder/ink/runtime/Stopwatch.java#L75-L83", "method_name": "getElapsedSeconds", "code": "\tpublic long getElapsedSeconds() {\t\tlong elapsed;\t\tif (running) {\t\t\telapsed = (System.nanoTime() - startTime);\t\t} else {\t\t\telapsed = (stopTime - startTime);\t\t}\t\treturn elapsed / nsPerSs;\t}"}
{"id": "https://github.com/googleads/googleads-java-lib/blob/967957cc4f6076514e3a7926fe653e4f1f7cc9c9/modules/ads_lib/src/main/java/com/google/api/ads/common/lib/utils/CsvFiles.java#L202-L217", "method_name": "writeCsv", "code": "  public static void writeCsv(List<String[]> csvData, String fileName) throws IOException {    Preconditions.checkNotNull(csvData, \"Null CSV data\");    Preconditions.checkNotNull(fileName, \"Null file name\");    CSVWriter writer = null;    try {      writer = new CSVWriter(Files.newWriter(new File(fileName), StandardCharsets.UTF_8));      for (String[] line : csvData) {        writer.writeNext(line);      }    } finally {      if (writer != null) {        writer.close();      }    }  }"}
{"id": "https://github.com/sitoolkit/sit-wt-all/blob/efabde27aa731a5602d2041e137721a22f4fd27a/sit-wt-runtime/src/main/java/io/sitoolkit/wt/infra/csv/CsvFileReader.java#L54-L75", "method_name": "readFile", "code": "    private List<String[]> readFile(String absolutePath, boolean headerRowOnly) {\r\r        try (InputStream in = new BOMInputStream(new FileInputStream(absolutePath));\r                Reader reader = new InputStreamReader(in, pm.getCsvCharset())) {\r\r            RFC4180Parser rfc4180Parser = new RFC4180ParserBuilder().build();\r            CSVReaderBuilder csvReaderBuilder = new CSVReaderBuilder(reader)\r                    .withCSVParser(rfc4180Parser);\r\r            try (CSVReader csvReader = csvReaderBuilder.build()) {\r\r                if (headerRowOnly) {\r                    return Collections.singletonList(csvReader.readNext());\r                } else {\r                    return csvReader.readAll();\r                }\r\r            }\r        } catch (IOException e) {\r            throw new IllegalStateException(e);\r        }\r    }\r"}
{"id": "https://github.com/nguillaumin/slick2d-maven/blob/8251f88a0ed6a70e726d2468842455cd1f80893f/slick2d-peditor/src/main/java/org/newdawn/slick/tools/peditor/WhiskasPanel.java#L141-L152", "method_name": "linkToEmitter", "code": "\tprivate void linkToEmitter(String name, LinearInterpolator interpol) {\r\t\t// put to value map\r\t\tvalueMap.put(name, interpol);\r\r\t\t// now update the checkbox to represent the state of the given\r\t\t// interpolator\r\t\tboolean checked = interpol.isActive();\r\t\tJCheckBox enableControl = (JCheckBox) valueNameToControl.get(name);\r\t\tenableControl.setSelected(false);\r\t\tif (checked)\r\t\t\tenableControl.setSelected(checked);\r\t}\r"}
{"id": "https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringUtil.java#L673-L695", "method_name": "(src.length() / delimiter.length()) + 2", "code": "\tpublic static String[] split(final String src, final String delimiter) {\t\tint maxparts = (src.length() / delimiter.length()) + 2;\t\t// one more for the last\t\tint[] positions = new int[maxparts];\t\tint dellen = delimiter.length();\t\tint i, j = 0;\t\tint count = 0;\t\tpositions[0] = - dellen;\t\twhile ((i = src.indexOf(delimiter, j)) != -1) {\t\t\tcount++;\t\t\tpositions[count] = i;\t\t\tj = i + dellen;\t\t}\t\tcount++;\t\tpositions[count] = src.length();\t\tString[] result = new String[count];\t\tfor (i = 0; i < count; i++) {\t\t\tresult[i] = src.substring(positions[i] + dellen, positions[i + 1]);\t\t}\t\treturn result;\t}"}
{"id": "https://github.com/google/error-prone-javac/blob/a53d069bbdb2c60232ed3811c19b65e41c3e60e0/src/jdk.compiler/share/classes/com/sun/tools/javac/util/StringUtils.java#L65-L68", "method_name": "indexOfIgnoreCase", "code": "    public static int indexOfIgnoreCase(String text, String str, int startIndex) {        Matcher m = Pattern.compile(Pattern.quote(str), Pattern.CASE_INSENSITIVE).matcher(text);        return m.find(startIndex) ? m.start() : -1;    }"}
{"id": "https://github.com/echocat/jomon/blob/b3b81dc3f8ca2b17f87492090b86f3b8dea5fe32/runtime/src/main/java/org/echocat/jomon/runtime/StringUtils.java#L145-L173", "method_name": "k", "code": "    @SuppressWarnings({\"MethodWithMultipleReturnPoints\", \"LabeledStatement\", \"ValueOfIncrementOrDecrementUsed\", \"ContinueStatement\", \"ContinueStatementWithLabel\"})    public static int indexOf(char[] src, char[] find, int startAt) {        int startPos = startAt;        final int max = src.length - find.length;        if (startPos > max) {            return -1;        }        final char find0 = find[0];        final int len = find.length;        int j;        int k;        // Find the first character        startOver:        while (startPos <= max) {            if (src[startPos++] == find0) {                // First character found - look for the rest                j = startPos;                k = 1;                while (k < len) {                    if (src[j++] != find[k++]) {                        continue startOver;                    }                }                return startPos - 1;            }        }        return -1;    }"}
{"id": "https://github.com/QSFT/Doradus/blob/ad64d3c37922eefda68ec8869ef089c1ca604b70/doradus-server/src/main/java/com/dell/doradus/core/ServerConfig.java#L359-L388", "method_name": "parseCommandLineArgs", "code": "    private static void parseCommandLineArgs(String[] args) throws ConfigurationException {\r\r        if (args[0].equalsIgnoreCase(\"-?\") || args[0].equalsIgnoreCase(\"-h\")\r                || args[0].equalsIgnoreCase(\"/?\") || args[0].equalsIgnoreCase(\"-help\")) {\r            System.out.println(\"See documentation and doradus.yaml and options\");\r            System.exit(0);\r        }\r\r        List<String> unknownArgs = new ArrayList<String>();\r\r        for (int inx = 0; inx < args.length; inx++) {\r            String name = args[inx].substring(1);\r            if (inx + 1 >= args.length) {\r                throw new ConfigurationException(\"A value is expected after: \" + args[inx]);\r            }\r            String value = args[++inx];\r            if (!setParamFromString(name, value)) {\r                unknownArgs.add(name);\r            }\r        }\r\r        if (!unknownArgs.isEmpty()) {\r            StringBuilder b = new StringBuilder();\r            for (String arg : unknownArgs) {\r                b.append(\"\\\"\" + arg + \"\\\" \");\r            }\r\r            throw new ConfigurationException(\"Couldn't parse argument(s): \" + b.toString());\r        }\r    }\r"}
{"id": "https://github.com/elki-project/elki/blob/b54673327e76198ecd4c8a2a901021f1a9174498/elki-core-math/src/main/java/de/lmu/ifi/dbs/elki/math/statistics/distribution/LogNormalDistribution.java#L200-L205", "method_name": "cdf", "code": "  public static double cdf(double x, double mu, double sigma) {    if(x <= 0.) {      return 0.;    }    return .5 * (1 + NormalDistribution.erf((FastMath.log(x) - mu) / (MathUtil.SQRT2 * sigma)));  }"}
{"id": "https://github.com/luhuiguo/chinese-utils/blob/70466411b537f3848dd80bfa44c0fa6d5e390c68/src/main/java/com/luhuiguo/chinese/ChineseUtils.java#L109-L119", "method_name": "readInputTextLine", "code": "\tpublic static String readInputTextLine() {\t\tBufferedReader lineOfText = new BufferedReader(new InputStreamReader(\t\t\t\tSystem.in));\t\tString textLine = null;\t\ttry {\t\t\ttextLine = lineOfText.readLine();\t\t} catch (IOException e) {\t\t\te.printStackTrace();\t\t}\t\treturn textLine;\t}"}
{"id": "https://github.com/aoindustries/aoweb-framework/blob/8e58af4f5dd898cd2fdb855ffa810a1ca6973ae0/src/main/java/com/aoindustries/website/framework/WebPage.java#L815-L817", "method_name": "getWebPage", "code": "\tpublic WebPage getWebPage(Class<? extends WebPage> clazz, WebSiteRequest req) throws IOException {\t\treturn getWebPage(getServletContext(), clazz, req);\t}"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/nd4j/nd4j-common/src/main/java/org/nd4j/linalg/primitives/Counter.java#L293-L300", "method_name": "asPriorityQueue", "code": "    public PriorityQueue<Pair<T, Double>> asPriorityQueue() {        PriorityQueue<Pair<T, Double>> pq = new PriorityQueue<>(Math.max(1,map.size()), new PairComparator());        for (Map.Entry<T, AtomicDouble> entry : map.entrySet()) {            pq.add(Pair.create(entry.getKey(), entry.getValue().get()));        }        return pq;    }"}
{"id": "https://github.com/Ordinastie/MalisisCore/blob/4f8e1fa462d5c372fc23414482ba9f429881cc54/src/main/java/net/malisis/core/renderer/animation/Animation.java#L150-L163", "method_name": "animate", "code": "\tpublic S animate(Timer timer)\t{\t\tlong elapsed = timer.elapsedTime() - Timer.tickToTime(delay);\t\tstarted = elapsed > transform.getDelay();\t\tfinished = elapsed > transform.totalDuration() && transform.getLoops() != -1;\t\tif (!started && !renderBefore)\t\t\treturn null;\t\tif (finished && !renderAfter)\t\t\treturn null;\t\ttransform.transform(transformable, elapsed);\t\treturn transformable;\t}"}
{"id": "https://github.com/alkacon/opencms-core/blob/bc104acc75d2277df5864da939a1f2de5fdee504/src-gwt/org/opencms/ade/sitemap/client/CmsSitemapTreeItem.java#L772-L778", "method_name": "addMarker", "code": "    protected Widget addMarker(String text) {        Label label = new Label(text);        label.addStyleName(CSS.marker());        getListItemWidget().addButton(label);        return label;    }"}
{"id": "https://github.com/Netflix/spectator/blob/259318252770de3bad581b85adff187d8f2c6537/spectator-web-spring/src/main/java/com/netflix/spectator/controllers/filter/TagMeasurementFilter.java#L35-L40", "method_name": "regexToPatternOrNull", "code": "  private static Pattern regexToPatternOrNull(String regex) {    if (regex != null && !regex.isEmpty() && !regex.equals(\".*\")) {      return Pattern.compile(regex);    }    return null;  }"}
{"id": "https://github.com/google/j2objc/blob/471504a735b48d5d4ace51afa1542cc4790a921a/translator/src/main/java/com/google/devtools/j2objc/util/PackageInfoLookup.java#L156-L194", "method_name": "fileUtil.readFile(file)", "code": "  private PackageData parseDataFromSourceFile(InputFile file) throws IOException {    PackageDataBuilder builder = new PackageDataBuilder();    String pkgInfo = fileUtil.readFile(file);    // @ObjectiveCName    int i = pkgInfo.indexOf(\"@ObjectiveCName\");    if (i == -1) {      i = pkgInfo.indexOf(\"@com.google.j2objc.annotations.ObjectiveCName\");    }    if (i > -1) {      // Extract annotation's value string.      i = pkgInfo.indexOf('\"', i + 1);      if (i > -1) {        int j = pkgInfo.indexOf('\"', i + 1);        if (j > -1) {          builder.setObjectiveCName(pkgInfo.substring(i + 1, j));        }      }    }    // @ParametersAreNonnullByDefault    if (pkgInfo.contains(\"@ParametersAreNonnullByDefault\")        || pkgInfo.contains(\"@javax.annotation.ParametersAreNonnullByDefault\")) {      builder.setParametersAreNonnullByDefault();    }    // @ReflectionSupportLevel    if (hasAnnotation(pkgInfo, \"com.google.j2objc.annotations.ReflectionSupport\")) {      Pattern p = Pattern.compile(REFLECTION_SUPPORT_REGEX);      Matcher m = p.matcher(pkgInfo);      if (m.find()) {        String level = m.group(1);        builder.setReflectionSupportLevel(ReflectionSupport.Level.valueOf(level));      } else {        ErrorUtil.warning(\"Invalid ReflectionSupport Level in \" + file.getUnitName());      }    }    return builder.build();  }"}
{"id": "https://github.com/Devskiller/jfairy/blob/126d1c8b1545f725afd10f969b9d27005ac520b7/src/main/java/com/devskiller/jfairy/producer/BaseProducer.java#L81-L84", "method_name": "extractRandomList", "code": "\tprivate <T> List<T> extractRandomList(List<T> elements, int count) {\t\trandom.shuffle(elements);\t\treturn elements.subList(0, count);\t}"}
{"id": "https://github.com/defei/codelogger-utils/blob/d906f5d217b783c7ae3e53442cd6fb87b20ecc0a/src/main/java/org/codelogger/utils/DateUtils.java#L537-L546", "method_name": "formatToStartOfDay", "code": "  public static Date formatToStartOfDay(final Date date) {    try {      SimpleDateFormat dateFormat = buildDateFormat(DEFAULT_DATE_SIMPLE_PATTERN);      String formattedDate = dateFormat.format(date);      return dateFormat.parse(formattedDate);    } catch (ParseException pe) {      throw new DateException(\"Unparseable date specified.\", pe);    }  }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.wsoc/src/com/ibm/ws/wsoc/RemoteEndpointBasicImpl.java#L74-L91", "method_name": "sendBinary", "code": "    public void sendBinary(@Sensitive ByteBuffer data, OpcodeType type) throws IOException {        if (messageWriteState != MessageWriteState.PARTIAL_NOT_IN_USE) {            if (tc.isDebugEnabled()) {                Tr.debug(tc, \"Send while Send outstanding error.  throw IllegalStateException\");            }            // another send is outstanding on this connection, as per spec behaivor, need to throw an illegalStateException            IllegalStateException up = new IllegalStateException();            throw up;        }        RETURN_STATUS ret = sendBinaryCommon(data, type, false);        if (ret != RETURN_STATUS.OK) {            // another write of an IO frame is outstanding on this connection            IllegalStateException up = new IllegalStateException(\"write not allowed.  Most likely cause is that another Write or Close is in progress\");            throw up;        }    }"}
{"id": "https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/FileHelper.java#L521-L525", "method_name": "copyFile", "code": "    public static void copyFile(String originFilePath, String targetFilePath) {        File originFile = new File(originFilePath);        File targetFile = new File(targetFilePath);        copyFile(originFile, targetFile);    }"}
{"id": "https://github.com/brunocvcunha/inutils4j/blob/223c4443c2cee662576ce644e552588fa114aa94/src/main/java/org/brunocvcunha/inutils4j/MyStringUtils.java#L638-L664", "method_name": "saveToFile", "code": "  public static boolean saveToFile(int type, Collection<?> list, File file) {    BufferedWriter out = null;    try {      if (type == APPEND) {        out = new BufferedWriter(new FileWriter(file, true));      } else {        out = new BufferedWriter(new FileWriter(file));      }      for (Object str : list) {        out.write(str + CARRIAGE_RETURN);      }      out.close();      return true;    } catch (Exception e) {      e.printStackTrace();      return false;    } finally {      try {        if (out != null) {          out.close();        }      } catch (IOException e) {        e.printStackTrace();      }    }  }"}
{"id": "https://github.com/wisdom-framework/wisdom/blob/a35b6431200fec56b178c0ff60837ed73fd7874d/core/wisdom-vertx-engine/src/main/java/org/wisdom/framework/vertx/Server.java#L344-L350", "method_name": "pickAPort", "code": "    private int pickAPort(int port) {        if (port == 0) {            port = 9000 + random.nextInt(10000);            logger.debug(\"Random port lookup - Trying with {}\", port);        }        return port;    }"}
{"id": "https://github.com/qiujiayu/autoload-cache-spring-boot-starter/blob/467234e29b3d8905519610947a2e5e3e76ecfdd6/src/main/java/com/jarvis/cache/admin/AutoloadCacheController.java#L125-L131", "method_name": "formatDate", "code": "    private String formatDate(long time) {        if (time < 100000) {            return \"\";        }        Date date = new Date(time);        return FORMATER.get().format(date);    }"}
{"id": "https://github.com/teatrove/teatrove/blob/7039bdd4da6817ff8c737f7e4e07bac7e3ad8bea/trove/src/main/java/org/teatrove/trove/net/SSLSocketFactory.java#L62-L78", "method_name": "createSocket", "code": "    public CheckedSocket createSocket(long timeout)        throws ConnectException, SocketException    {        Socket socket = SocketConnector.connect            (mAddr, mPort, mLocalAddr, mLocalPort, timeout);        if (socket == null) {            throw new ConnectException(\"Connect timeout expired: \" + timeout);        }        try {            socket = mSSLFactory.createSocket                (socket, mAddr.getHostAddress(), mPort, true);        }        catch (IOException e)  {            throw new SocketException(e.toString());        }        return CheckedSocket.check(socket);    }    "}
{"id": "https://github.com/jdereg/java-util/blob/a2dce61aed16d6454ee575174dda1ba6bff0015c/src/main/java/com/cedarsoftware/util/StringUtilities.java#L245-L291", "method_name": "levenshteinDistance", "code": "    public static int levenshteinDistance(CharSequence s, CharSequence t)    {        // degenerate cases          s        if (s == null || \"\".equals(s))        {            return t == null || \"\".equals(t) ? 0 : t.length();        }        else if (t == null || \"\".equals(t))        {            return s.length();        }        // create two work vectors of integer distances        int[] v0 = new int[t.length() + 1];        int[] v1 = new int[t.length() + 1];        // initialize v0 (the previous row of distances)        // this row is A[0][i]: edit distance for an empty s        // the distance is just the number of characters to delete from t        for (int i = 0; i < v0.length; i++)        {            v0[i] = i;        }        int sLen = s.length();        int tLen = t.length();        for (int i = 0; i < sLen; i++)        {            // calculate v1 (current row distances) from the previous row v0            // first element of v1 is A[i+1][0]            //   edit distance is delete (i+1) chars from s to match empty t            v1[0] = i + 1;            // use formula to fill in the rest of the row            for (int j = 0; j < tLen; j++)            {                int cost = (s.charAt(i) == t.charAt(j)) ? 0 : 1;                v1[j + 1] = (int) MathUtilities.minimum(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);            }            // copy v1 (current row) to v0 (previous row) for next iteration            System.arraycopy(v1, 0, v0, 0, v0.length);        }        return v1[t.length()];    }"}
{"id": "https://github.com/codescape/bitvunit/blob/cef6d9af60d684e41294981c10b6d92c8f063a4e/bitvunit-core/src/main/java/de/codescape/bitvunit/util/html/HtmlPageUtil.java#L32-L39", "method_name": "toHtmlPage", "code": "    public static HtmlPage toHtmlPage(String string) {        try {            URL url = new URL(\"http://bitvunit.codescape.de/some_page.html\");            return HTMLParser.parseHtml(new StringWebResponse(string, url), new WebClient().getCurrentWindow());        } catch (IOException e) {            throw new RuntimeException(\"Error creating HtmlPage from String.\", e);        }    }"}
{"id": "https://github.com/baratine/baratine/blob/db34b45c03c5a5e930d8142acc72319125569fcf/web/src/main/java/com/caucho/v5/io/SocketSystem.java#L171-L192", "method_name": "getHardwareAddress", "code": "  public byte[] getHardwareAddress()  {    if (CurrentTime.isTest() || System.getProperty(\"test.mac\") != null) {      return new byte[] { 10, 0, 0, 0, 0, 10 };    }        for (NetworkInterfaceBase nic : getNetworkInterfaces()) {      if (! nic.isLoopback()) {        return nic.getHardwareAddress();      }    }        try {      InetAddress localHost = InetAddress.getLocalHost();            return localHost.getAddress();    } catch (Exception e) {      log.log(Level.FINER, e.toString(), e);    }        return new byte[0];  }"}
{"id": "https://github.com/prestodb/presto/blob/89de5e379d8f85e139d292b0add8c537a2a01a88/presto-spi/src/main/java/com/facebook/presto/spi/type/UnscaledDecimal128Arithmetic.java#L183-L190", "method_name": "unscaledDecimalToBigInteger", "code": "    public static BigInteger unscaledDecimalToBigInteger(Slice decimal)    {        byte[] bytes = decimal.getBytes(0, UNSCALED_DECIMAL_128_SLICE_LENGTH);        // convert to big-endian order        reverse(bytes);        bytes[0] &= ~SIGN_BYTE_MASK;        return new BigInteger(isNegative(decimal) ? -1 : 1, bytes);    }"}
{"id": "https://github.com/linkedin/linkedin-utils/blob/ca097410b537fb09847c42037593c0f474c0571f/org.linkedin.util-core/src/main/java/org/linkedin/util/lang/LangUtils.java#L244-L255", "method_name": "convertToBoolean", "code": "  public static boolean convertToBoolean(Object o)  {    if(o == null)      return false;    if(o instanceof Boolean)    {      return (Boolean) o;    }    return convertToBoolean(o.toString());  }"}
{"id": "https://github.com/apache/incubator-gobblin/blob/f029b4c0fea0fe4aa62f36dda2512344ff708bae/gobblin-core/src/main/java/org/apache/gobblin/source/extractor/watermark/TimestampWatermark.java#L135-L144", "method_name": "toEpoch", "code": "  synchronized private static long toEpoch(String dateTime) {    Date date = null;    final SimpleDateFormat inputFormat = new SimpleDateFormat(INPUTFORMAT);    try {      date = inputFormat.parse(dateTime);    } catch (ParseException e) {      throw new RuntimeException(e.getMessage(), e);    }    return date.getTime();  }"}
{"id": "https://github.com/sjamesr/jfreesane/blob/15ad0f73df0a8d0efec5167a2141cbd53afd862d/src/main/java/au/com/southsky/jfreesane/SanePasswordEncoder.java#L38-L48", "method_name": "encodeAsHex", "code": "  private static String encodeAsHex(byte[] input) {    StringBuilder hexString = new StringBuilder();    for (int i = 0; i < input.length; i++) {      String hex = Integer.toHexString(0xff & input[i]);      if (hex.length() == 1) {        hexString.append('0');      }      hexString.append(hex);    }    return hexString.toString();  }"}
{"id": "https://github.com/Activiti/Activiti/blob/82e2b2cd2083b2f734ca0efc7815389c0f2517d9/activiti-bpmn-model/src/main/java/org/activiti/bpmn/model/BpmnModel.java#L115-L122", "method_name": "getProcessById", "code": "  public Process getProcessById(String id) {    for (Process process : processes) {      if (process.getId().equals(id)) {        return process;      }    }    return null;  }"}
{"id": "https://github.com/CenturyLinkCloud/mdw/blob/91167fe65a25a5d7022cdcf8b0fae8506f5b87ce/mdw-workflow/assets/com/centurylink/mdw/node/WebpackCache.java#L112-L119", "method_name": "unzipNodeModules", "code": "    private void unzipNodeModules(File pkgDir) throws IOException {        File modulesZip = new File(pkgDir + \"/node_modules.zip\");        long before = System.currentTimeMillis();        logger.info(\"Unzipping \" + pkgDir + \"/node_modules...\");        ZipHelper.unzip(modulesZip, pkgDir, null, null, Exist.Ignore);        if (logger.isDebugEnabled())            logger.debug(\"  - node_modules unzipped in \" + (System.currentTimeMillis() - before) + \" ms\");    }"}
{"id": "https://github.com/elki-project/elki/blob/b54673327e76198ecd4c8a2a901021f1a9174498/elki-core-util/src/main/java/de/lmu/ifi/dbs/elki/utilities/datastructures/QuickSelect.java#L623-L625", "method_name": "T", "code": "  public static <T> T median(List<? extends T> data, Comparator<? super T> comparator) {    return median(data, comparator, 0, data.size());  }"}
{"id": "https://github.com/haifengl/smile/blob/e27e43e90fbaacce3f99d30120cf9dd6a764c33d/math/src/main/java/smile/sort/QuickSort.java#L579-L586", "method_name": "sort", "code": "    public static int[] sort(double[] arr) {        int[] order = new int[arr.length];        for (int i = 0; i < order.length; i++) {            order[i] = i;        }        sort(arr, order);        return order;    }"}
{"id": "https://github.com/Ardesco/selenium-standalone-server-plugin/blob/e0ecfad426c1a28115cab60def84731d7a4d7e6f/src/main/java/com/lazerycode/selenium/extract/CompressedFile.java#L54-L64", "method_name": "getInputStream", "code": "    InputStream getInputStream() throws IOException {        switch (filetype) {            case GZ:                LOG.debug(\"Decompressing .gz file\");                return new GzipCompressorInputStream(new FileInputStream(compressedFile));            case BZ2:                LOG.debug(\"Decompressing .bz2 file\");                return new BZip2CompressorInputStream(new FileInputStream(compressedFile));        }        return null;    }"}
{"id": "https://github.com/fracpete/deps4j/blob/54679bbbccbc20a3641143baa7138736c9e4a74b/src/main/java/com/github/fracpete/deps4j/MinDeps.java#L286-L309", "method_name": "readFile", "code": "  protected String readFile(File file, List<String> lines) {    int\t\ti;    try {      lines.addAll(Files.readAllLines(file.toPath()));      i = 0;      while (i < lines.size()) {        if (lines.get(i).trim().isEmpty()) {          lines.remove(i);          continue;\t}\tif (lines.get(i).startsWith(\"#\")) {          lines.remove(i);          continue;\t}\ti++;      }    }    catch (Exception e) {      return \"Failed to read file: \" + file + \"\\n\" + e;    }    return null;  }"}
{"id": "https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/Is24CsvWritingExample.java#L71-L101", "method_name": "main", "code": "    @SuppressWarnings(\"Duplicates\")    public static void main(String[] args) {        // init logging        PropertyConfigurator.configure(                Is24CsvWritingExample.class.getResource(PACKAGE + \"/log4j.properties\"));        // create some CSV records        List<Is24CsvRecord> records = new ArrayList<>();        records.add(createHausKaufRecord());        records.add(createHausKaufRecord());        records.add(createWohnungMieteRecord());        records.add(createWohnungMieteRecord());        // write CSV records into a java.io.File        try {            write(records, File.createTempFile(\"output-\", \".csv\"));        } catch (IOException ex) {            LOGGER.error(\"Can't create temporary file!\");            LOGGER.error(\"> \" + ex.getLocalizedMessage(), ex);            System.exit(1);        }        // write CSV records into a java.io.OutputStream        write(records, new NullOutputStream());        // write CSV records into a java.io.Writer        write(records, new NullWriter());        // write CSV records into a string and send it to the console        writeToConsole(records);    }"}
{"id": "https://github.com/maochen/NLP/blob/38ae7b384d5295334d9efa9dc4cd901b19d9c27e/CoreNLP-NLP/src/main/java/org/maochen/nlp/ml/classifier/hmm/WordUtils.java#L27-L29", "method_name": "normalizeWord", "code": "    public static String normalizeWord(String word) {        return WORD_LIST.containsKey(word) ? WORD_LIST.get(word) : word;    }"}
{"id": "https://github.com/codeprimate-software/cp-elements/blob/f2163c149fbbef05015e688132064ebcac7c49ab/src/main/java/org/cp/elements/util/ArrayUtils.java#L348-L357", "method_name": "[]", "code": "  @SuppressWarnings(\"unchecked\")  public static <T> T[] filter(T[] array, Filter<T> filter) {    Assert.notNull(array, \"Array is required\");    Assert.notNull(filter, \"Filter is required\");    List<T> arrayList = stream(array).filter(filter::accept).collect(Collectors.toList());    return arrayList.toArray((T[]) Array.newInstance(array.getClass().getComponentType(), arrayList.size()));  }"}
{"id": "https://github.com/CenturyLinkCloud/mdw/blob/91167fe65a25a5d7022cdcf8b0fae8506f5b87ce/mdw-common/src/com/centurylink/mdw/util/CallURL.java#L45-L68", "method_name": "value", "code": "    private Map<String,String> parseUrlParameters(String urlstring)        throws MalformedURLException, UnsupportedEncodingException {        URL url = new URL(\"http://site/\"+urlstring);        String query = url.getQuery();        Hashtable<String,String> params = new Hashtable<String,String>();        if (query!=null) {            String[] queries = query.split(\"&\");            for (String q : queries) {                int k = q.indexOf('=');                String name, value;                if (k>0) {                    name = q.substring(0,k);                    value = q.substring(k+1);                } else {                    name = q;                    value = \"\";                }                value = java.net.URLDecoder.decode(value, \"UTF-8\");    //          System.out.println(\"   decoded: \" + name + \"='\" + value +\"'\");                params.put(name, value);            }        }        return params;    }"}
{"id": "https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringUtil.java#L2547-L2553", "method_name": "reverse", "code": "\tpublic static String reverse(final String s) {\t\tStringBuilder result = new StringBuilder(s.length());\t\tfor (int i = s.length() -1; i >= 0; i--) {\t\t\tresult.append(s.charAt(i));\t\t}\t\treturn result.toString();\t}"}
{"id": "https://github.com/FudanNLP/fnlp/blob/ce258f3e4a5add2ba0b5e4cbac7cab2190af6659/fnlp-train/src/main/java/org/fnlp/nlp/cn/rl/RLSeg.java#L158-L166", "method_name": "getOccur", "code": "\tpublic static int getOccur(String src,String find){\t\tint o = 0;\t\tint index=-1;\t\twhile((index=src.indexOf(find,index))>-1){\t\t\t++index;\t\t\t++o;\t\t}\t\treturn o;\t}"}
{"id": "https://github.com/play2-maven-plugin/play2-maven-plugin/blob/34e174b02c4245cfad64abd230f3cbeda9d9b2f4/play2-providers/play2-provider-play23/src/main/java/com/google/code/play2/provider/play23/Play23LessCompiler.java#L80-L93", "method_name": "multiLineString", "code": "    private String multiLineString( String[] lines )    {        StringBuilder sb = new StringBuilder();        if ( lines != null && lines.length > 0 )        {            sb.append( lines[0] );            for ( int i = 1; i < lines.length; i++ )            {                sb.append( \"\\n\" );                sb.append( lines[i] );            }        }        return sb.toString();    }"}
{"id": "https://github.com/landawn/AbacusUtil/blob/544b7720175d15e9329f83dd22a8cc5fa4515e12/src/com/landawn/abacus/util/N.java#L3487-L3500", "method_name": "asPriorityQueue", "code": "    @SafeVarargs\r    public static <T> PriorityQueue<T> asPriorityQueue(final T... a) {\r        if (N.isNullOrEmpty(a)) {\r            return new PriorityQueue<>();\r        }\r\r        final PriorityQueue<T> queue = new PriorityQueue<>(a.length);\r\r        for (T e : a) {\r            queue.add(e);\r        }\r\r        return queue;\r    }\r"}
{"id": "https://github.com/lawloretienne/Trestle/blob/f5d16252000a8a08807679ac8de1b6883aeb06df/sample/src/main/java/com/etiennelawlor/trestle/fragments/MainFragment.java#L221-L234", "method_name": "setUpTextView11", "code": "    private void setUpTextView11(View view) {        // Setup single span        TextView tv11 = (TextView) view.findViewById(R.id.tv11);        CharSequence formattedText11 = Trestle.getFormattedText(                new Span.Builder(\"Regex - ForegroundColorSpan, BackgroundColorSpan, and CustomTypefaceSpan (case insensitive)\")                        .regex(new Regex(\"(\", Regex.CASE_INSENSITIVE))                        .foregroundColor(getContext(), R.color.green_500)                        .backgroundColor(getContext(), R.color.red_200)                        .typeface(boldItalicFont)                        .build());        tv11.setText(formattedText11);    }"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/autodiff/functions/DifferentialFunctionFactory.java#L222-L224", "method_name": "randomBinomial", "code": "    public SDVariable randomBinomial(int nTrials, double p, long... shape) {        return new BinomialDistribution(sameDiff(), nTrials, p, shape).outputVariable();    }"}
{"id": "https://github.com/Devskiller/jfairy/blob/126d1c8b1545f725afd10f969b9d27005ac520b7/src/main/java/com/devskiller/jfairy/producer/BaseProducer.java#L68-L79", "method_name": "randomElements", "code": "\tpublic <T> List<T> randomElements(List<T> elements, int count) {\t\tif (elements.size() >= count) {\t\t\treturn extractRandomList(elements, count);\t\t} else {\t\t\tList<T> randomElements = new ArrayList<T>();\t\t\trandomElements.addAll(extractRandomList(elements, count % elements.size()));\t\t\tdo {\t\t\t\trandomElements.addAll(extractRandomList(elements, elements.size()));\t\t\t} while (randomElements.size() < count);\t\t\treturn randomElements;\t\t}\t}"}
{"id": "https://github.com/blackdoor/blackdoor/blob/060c7a71dfafb85e10e8717736e6d3160262e96b/src/main/java/black/door/crypto/Crypto.java#L174-L184", "method_name": "doAESEncryption", "code": "\tpublic void doAESEncryption() throws Exception{\t\tif(!initAESDone)\t\t\tinitAES();\t\tcipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\t\t//System.out.println(secretKey.getEncoded());\t\tcipher.init(Cipher.ENCRYPT_MODE, secretKey);\t\tAlgorithmParameters params = cipher.getParameters();\t\tiv = params.getParameterSpec(IvParameterSpec.class).getIV();\t\tsecretCipher = cipher.doFinal(secretPlain);\t\tclearPlain();\t}"}
{"id": "https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/sso/src/main/java/com/streamsets/lib/security/http/AuthenticationResourceHandler.java#L45-L61", "method_name": "principal.getTokenStr()", "code": "  NewCookie createLoginCookie(HttpServletRequest req, SSOPrincipal principal) {    String token = principal.getTokenStr();    // if expires is negative, it means the cookie must be transient    int expires = (principal.getExpires() <= -1)        ? NewCookie.DEFAULT_MAX_AGE        : (int) ((principal.getExpires() - getTimeNow()) / 1000);    NewCookie authCookie = new NewCookie(        HttpUtils.getLoginCookieName(),        token,        \"/\",        null,        null,        expires,        (req.isSecure() || secureLoadBalancer)    );    return authCookie;  }"}
{"id": "https://github.com/datumbox/datumbox-framework/blob/909dff0476e80834f05ecdde0624dd2390e9b0ca/datumbox-framework-core/src/main/java/com/datumbox/framework/core/common/text/parsers/HTMLParser.java#L439-L454", "method_name": "extractHTMLheaders", "code": "    public static Map<String, List<String>> extractHTMLheaders(String html) {        Map<String, List<String>> hxtagsMap = new HashMap<>();        for(int i=1;i<=6;++i) {            hxtagsMap.put(\"H\"+i, new ArrayList<>());        }                        Matcher m = HX_PATTERN.matcher(html);        while (m.find()) {            if(m.groupCount()==2) {                String tagType = m.group(1).toUpperCase(Locale.ENGLISH);                String content = m.group(2);                hxtagsMap.get(tagType).add(clear(content));            }        }        return hxtagsMap;    }"}
{"id": "https://github.com/NitorCreations/willow/blob/914911697426b5b95756a099de373438ffa12026/willow-download/src/main/java/com/nitorcreations/willow/download/Extractor.java#L151-L160", "method_name": "extractZip", "code": "  private int extractZip(ZipFile zipFile, File destFolder, Map<String, String> replaceTokens, Set<PathMatcher> extractMatchers, Set<PathMatcher> skipMatchers, Set<PathMatcher> filterMatchers, boolean overwrite, boolean writeMd5Sums) throws IOException {    Enumeration<ZipArchiveEntry> en = zipFile.getEntries();    int entries = 0;    while (en.hasMoreElements()) {      ZipArchiveEntry nextEntry = en.nextElement();      extractEntry(zipFile.getInputStream(nextEntry), nextEntry, destFolder, replaceTokens, extractMatchers, skipMatchers, filterMatchers, overwrite, writeMd5Sums);      entries++;    }    return entries;  }"}
{"id": "https://github.com/drinkjava2/jDialects/blob/1c165f09c6042a599b681c279024abcc1b848b88/core/src/main/java/com/github/drinkjava2/jdialects/model/TableModel.java#L385-L391", "method_name": "unique", "code": "\tpublic UniqueModel unique() {\t\tcheckReadOnly();\t\tUniqueModel unique = new UniqueModel();\t\tunique.setTableModel(this);\t\tgetUniqueConsts().add(unique);\t\treturn unique;\t}"}
{"id": "https://github.com/Waikato/moa/blob/395982e5100bfe75a3a4d26115462ce2cc74cbb0/moa/src/main/java/moa/clusterers/clustream/WithKmeans.java#L365-L405", "method_name": "new CFCluster[k]", "code": "\tprotected static Clustering cleanUpKMeans(Clustering kMeansResult, ArrayList<CFCluster> microclusters) {\t\t/* Convert k-means result to CFClusters */\t\tint k = kMeansResult.size();\t\tCFCluster[] converted = new CFCluster[k];\t\tfor (CFCluster mc : microclusters) {\t\t    // Find closest kMeans cluster\t\t    double minDistance = Double.MAX_VALUE;\t\t    int closestCluster = 0;\t\t    for (int i = 0; i < k; i++) {\t\t    \tdouble distance = distance(kMeansResult.get(i).getCenter(), mc.getCenter());\t\t\t\tif (distance < minDistance) {\t\t\t\t    closestCluster = i;\t\t\t\t    minDistance = distance;\t\t\t\t}\t\t    }\t\t    // Add to cluster\t\t    if ( converted[closestCluster] == null ) {\t\t    \tconverted[closestCluster] = (CFCluster)mc.copy();\t\t    } else {\t\t    \tconverted[closestCluster].add(mc);\t\t    }\t\t}\t\t// Clean up\t\tint count = 0;\t\tfor (int i = 0; i < converted.length; i++) {\t\t    if (converted[i] != null)\t\t\tcount++;\t\t}\t\tCFCluster[] cleaned = new CFCluster[count];\t\tcount = 0;\t\tfor (int i = 0; i < converted.length; i++) {\t\t    if (converted[i] != null)\t\t\tcleaned[count++] = converted[i];\t\t}\t\treturn new Clustering(cleaned);\t}"}
{"id": "https://github.com/nutzam/nutz/blob/a38694d5cbda2692e7931ab093c168487a6a4bfe/src/org/nutz/repo/org/objectweb/asm/Frame.java#L851-L864", "method_name": "init", "code": "    private void init(final int var) {        // creates and/or resizes the initializations array if necessary        if (initializations == null) {            initializations = new int[2];        }        int n = initializations.length;        if (initializationCount >= n) {            int[] t = new int[Math.max(initializationCount + 1, 2 * n)];            System.arraycopy(initializations, 0, t, 0, n);            initializations = t;        }        // stores the type to be initialized        initializations[initializationCount++] = var;    }"}
{"id": "https://github.com/galenframework/galen/blob/6c7dc1f11d097e6aa49c45d6a77ee688741657a4/galen-core/src/main/java/com/galenframework/utils/GalenUtils.java#L419-L422", "method_name": "convertObjectNameRegex", "code": "    public static Pattern convertObjectNameRegex(String regex) {        String jRegex = regex.replace(\"#\", \"[0-9]+\").replace(\"*\", \".*\");        return Pattern.compile(jRegex);    }"}
{"id": "https://github.com/habernal/confusion-matrix/blob/d0310f0aeda0fa74a9d42bcb190db7250bf49ecc/src/main/java/com/github/habernal/confusionmatrix/ConfusionMatrix.java#L646-L659", "method_name": "createCumulativeMatrix", "code": "    public static ConfusionMatrix createCumulativeMatrix(ConfusionMatrix... matrices)    {        ConfusionMatrix result = new ConfusionMatrix();        for (ConfusionMatrix matrix : matrices) {            for (Map.Entry<String, Map<String, Integer>> gold : matrix.map.entrySet()) {                for (Map.Entry<String, Integer> actual : gold.getValue().entrySet()) {                    result.increaseValue(gold.getKey(), actual.getKey(), actual.getValue());                }            }        }        return result;    }"}
{"id": "https://github.com/TheHortonMachine/hortonmachine/blob/d2b436bbdf951dc1fda56096a42dbc0eae4d35a5/gears/src/main/java/org/hortonmachine/gears/utils/math/matrixes/Matrix.java#L320-L342", "method_name": "multiply", "code": "    public Matrix multiply(Matrix m) throws MatrixException    {        // Validate m's dimensions.        if (nCols != m.nRows) {            throw new MatrixException(                                MatrixException.INVALID_DIMENSIONS);        }        double pv[][] = new double[nRows][m.nCols];  // product values        // Compute values of the product.        for (int r = 0; r < nRows; ++r) {            for (int c = 0; c < m.nCols; ++c) {                double dot = 0;                for (int k = 0; k < nCols; ++k) {                    dot += values[r][k] * m.values[k][c];                }                pv[r][c] = dot;            }        }        return new Matrix(pv);    }"}
{"id": "https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/CatalogManager.java#L245-L282", "method_name": "CatalogManager.class.getResourceAsStream(\"/\"+propertyFile)", "code": "  private synchronized void readProperties() {    try {      propertyFileURI = CatalogManager.class.getResource(\"/\"+propertyFile);      InputStream in =\tCatalogManager.class.getResourceAsStream(\"/\"+propertyFile);      if (in==null) {\tif (!ignoreMissingProperties) {\t  System.err.println(\"Cannot find \"+propertyFile);\t  // there's no reason to give this warning more than once\t  ignoreMissingProperties = true;\t}\treturn;      }      resources = new PropertyResourceBundle(in);    } catch (MissingResourceException mre) {      if (!ignoreMissingProperties) {\tSystem.err.println(\"Cannot read \"+propertyFile);      }    } catch (java.io.IOException e) {      if (!ignoreMissingProperties) {\tSystem.err.println(\"Failure trying to read \"+propertyFile);      }    }    // This is a bit of a hack. After we've successfully read the properties,    // use them to set the default debug level, if the user hasn't already set    // the default debug level.    if (verbosity == null) {      try {\tString verbStr = resources.getString(\"verbosity\");\tint verb = Integer.parseInt(verbStr.trim());\tdebug.setDebug(verb);\tverbosity = new Integer(verb);      } catch (Exception e) {\t// nop      }    }  }"}
{"id": "https://github.com/raydac/netbeans-mmd-plugin/blob/997493d23556a25354372b6419a64a0fbd0ac6ba/mind-map/mind-map-swing-panel/src/main/java/com/igormaznitsa/mindmap/plugins/importers/XMind2MindMapImporter.java#L163-L183", "method_name": "extractNote", "code": "  @Nonnull  private static String extractNote(@Nonnull final Element topic) {    final StringBuilder result = new StringBuilder();    for (final Element note : Utils.findDirectChildrenForName(topic, \"notes\")) {      final String plain = extractTextContentFrom(note, \"plain\");      final String html = extractTextContentFrom(note, \"html\");      if (result.length() > 0) {        result.append('\\n');      }      if (!plain.isEmpty()) {        result.append(plain);      } else if (!html.isEmpty()) {        result.append(html);      }    }    return result.toString();  }"}
{"id": "https://github.com/SimplicityApks/ReminderDatePicker/blob/7596fbac77a5d26f687fec11758935a2b7db156f/lib/src/main/java/com/simplicityapks/reminderdatepicker/lib/DateSpinner.java#L294-L299", "method_name": "formatDate", "code": "    private String formatDate(@NonNull Calendar date) {        if(customDateFormat == null)            return DateUtils.formatDateTime(getContext(), date.getTimeInMillis(), DateUtils.FORMAT_SHOW_DATE);        else            return customDateFormat.format(date.getTime());    }"}
{"id": "https://github.com/hibegin/simplewebserver/blob/262df49e1cd75df8d8c6469ac55204208ff8eeec/src/main/java/com/hibegin/http/server/impl/SimpleHttpRequest.java#L104-L131", "method_name": "dealWithCookie", "code": "    private void dealWithCookie(boolean create) {        if (!requestConfig.isDisableCookie()) {            String cookieHeader = header.get(\"Cookie\");            if (cookieHeader != null) {                cookies = Cookie.saxToCookie(cookieHeader);                String jsessionid = Cookie.getJSessionId(cookieHeader);                if (jsessionid != null) {                    session = SessionUtil.getSessionById(jsessionid);                }            }            if (create && session == null) {                if (cookies == null) {                    cookies = new Cookie[1];                } else {                    cookies = new Cookie[cookies.length + 1];                }                Cookie cookie = new Cookie(true);                String jsessionid = UUID.randomUUID().toString();                cookie.setName(Cookie.JSESSIONID);                cookie.setPath(\"/\");                cookie.setValue(jsessionid);                cookies[cookies.length - 1] = cookie;                session = new HttpSession(jsessionid);                SessionUtil.sessionMap.put(jsessionid, session);                LOGGER.info(\"create a cookie \" + cookie.toString());            }        }    }"}
{"id": "https://github.com/sdl/Testy/blob/b3ae061554016f926f04694a39ff00dab7576609/src/main/java/com/sdl/selenium/WebLocatorSuggestions.java#L43-L58", "method_name": "getMatchedElementsHtml", "code": "    private static String getMatchedElementsHtml(WebLocator webLocator) {        String result = \"\";        for (WebElement element : webLocator.findElements()) {            String outerHtml = element.getAttribute(\"outerHTML\");            String innerHtml = element.getAttribute(\"innerHTML\");            if (innerHtml.length() < 50) {                result = result.concat(outerHtml).concat(\"\\n\");            } else {                result = result.concat(outerHtml.replace(innerHtml, \"...\")).concat(\"\\n\");            }        }        return result.trim();    }"}
{"id": "https://github.com/ivanceras/orm/blob/e63213cb8abefd11df0e2d34b1c95477788e600e/src/main/java/com/ivanceras/db/server/core/DB_PostgreSQL.java#L88-L133", "method_name": "new StringBuffer()", "code": "\tprotected String getRealTableName(String schema, String tableName) throws DatabaseException{\t\tStringBuffer sql = new StringBuffer();//\t\tSQL sql1 = SELECT(\"c.relname\")//\t\t\t\t.FROM(\"pg_catalog.pg_class\").AS(\"c\")//\t\t\t\t.FIELD(\"pg_class.relname\")//\t\t\t\t.LEFT_JOIN(\"pg_catalog.pg_namespace\").AS(\"n\")//\t\t\t\t.ON(\"n.oid\",\"c.relnamespace\")//\t\t\t\t.WHERE(LOWER(\"c.relname\")).EQUAL_TO(LOWER(tableName));\t\tsql.append(\"SELECT \"+\t\t\t\t\" c.relname as \\\"Table\\\"\"+\t\t\t\t\" FROM\"+\t\t\t\t\" pg_catalog.pg_class c\" +\t\t\t\t\" LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\"+\t\t\t\t\" WHERE lower(c.relname) = lower(?)\");\t\tif(schema != null){\t\t\tsql.append(\" AND n.nspname = lower(?)\");\t\t}\t\tsql.append(\" ORDER BY c.relname\");\t\tObject[] parameters = null;\t\tif(schema != null){\t\t\tparameters = new Object[2];\t\t\tparameters[0] = tableName;\t\t\tparameters[1] = schema;\t\t}else{\t\t\tparameters = new Object[1];\t\t\tparameters[0] = tableName;\t\t}\t\ttry {\t\t\tResultSet rs = executeSelectSQL(sql.toString(), parameters);\t\t\tif(rs != null){\t\t\t\tif(rs.next()){\t\t\t\t\tString realTableName = rs.getString(1);\t\t\t\t\treturn realTableName;\t\t\t\t}\t\t\t}\t\t} catch (SQLException e) {\t\t\t//System.err.println(sql+\"[\"+(parameters!=null?Arrays.asList(parameters):\"\")+\"]\");\t\t\te.printStackTrace();\t\t\tthrow new DatabaseException();\t\t}\t\treturn null;\t}"}
{"id": "https://github.com/xiancloud/xian/blob/1948e088545553d2745b2c86d8b5a64988bb850e/xian-core/src/main/java/info/xiancloud/core/util/StringUtil.java#L116-L119", "method_name": "reverseString", "code": "    public static String reverseString(String str) {        StringBuilder stringBuffer = new StringBuilder(str);        return stringBuffer.reverse().toString();    }"}
{"id": "https://github.com/Waikato/moa/blob/395982e5100bfe75a3a4d26115462ce2cc74cbb0/moa/src/main/java/moa/clusterers/kmeanspm/CoresetKMeans.java#L107-L183", "method_name": "input.iterator()", "code": "\tpublic static double kMeans(List<double[]> centroids, List<double[]> input) {\t\tint k = centroids.size();\t\tassert (k > 0);\t\tint d = centroids.get(0).length;\t\tint size = input.size();\t\tdouble[][] center = new double[k][];\t\tIterator<double[]> iIter = centroids.iterator();\t\tfor (int i = 0; i < k; i++) {\t\t\tcenter[i] = iIter.next();\t\t}\t\tdouble[][] newCenter = new double[k][d];\t\tdouble[] newCenterWeight = new double[k];\t\tint[] nearestCluster = new int[size];\t\tboolean converged;\t\tdo {\t\t\tfor (int i = 0; i < k; i++) {\t\t\t\tfor (int j = 0; j < d; j++) {\t\t\t\t\tnewCenter[i][j] = 0.0;\t\t\t\t}\t\t\t\tnewCenterWeight[i] = 0.0;\t\t\t}\t\t\tIterator<double[]> lIter = input.iterator();\t\t\tfor (int l = 0; l < size; l++) {\t\t\t\t// Calculates the distance from all points to all centroids\t\t\t\tdouble[] point = lIter.next();\t\t\t\tassert (d == point.length - 1);\t\t\t\tdouble minDistance = Double.POSITIVE_INFINITY;\t\t\t\tint closestCluster = -1;\t\t\t\tfor (int i = 0; i < k; i++) {\t\t\t\t\tdouble distance = Metric.distance(center[i], point, 1);\t\t\t\t\tif (distance < minDistance) {\t\t\t\t\t\tclosestCluster = i;\t\t\t\t\t\tminDistance = distance;\t\t\t\t\t}\t\t\t\t}\t\t\t\t// Sums up all points for the new centroids\t\t\t\tassert (closestCluster >= 0 && closestCluster < k);\t\t\t\tfor (int j = 0; j < d; j++) {\t\t\t\t\tnewCenter[closestCluster][j] += point[0] * point[j + 1];\t\t\t\t}\t\t\t\tnewCenterWeight[closestCluster] += point[0];\t\t\t\tnearestCluster[l] = closestCluster;\t\t\t}\t\t\t// Calculates the new centroids\t\t\tconverged = true;\t\t\tfor (int i = 0; i < k; i++) {\t\t\t\tfor (int j = 0; j < d; j++) {\t\t\t\t\tif (newCenterWeight[i] != 0.0) {\t\t\t\t\t\tdouble newValue = newCenter[i][j] / newCenterWeight[i];\t\t\t\t\t\tif (newValue != center[i][j]) {\t\t\t\t\t\t\tconverged = false;\t\t\t\t\t\t}\t\t\t\t\t\tcenter[i][j] = newValue;\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t} while (!converged);\t\t// Replaces the old centroids with the new ones\t\tfor (int i = 0; i < k; i++) {\t\t\tcentroids.set(i, center[i]);\t\t}\t\t// Calculates the costs of the solution\t\tdouble costs = 0.0;\t\tIterator<double[]> lIter = input.iterator();\t\tfor (int l = 0; l < size; l++) {\t\t\tdouble[] point = lIter.next();\t\t\tcosts += point[0]\t\t\t\t\t* Metric.distanceSquared(center[nearestCluster[l]], point,\t\t\t\t\t\t\t1);\t\t}\t\treturn costs;\t}"}
{"id": "https://github.com/andriusvelykis/reflow-maven-skin/blob/01170ae1426a1adfe7cc9c199e77aaa2ecb37ef2/reflow-velocity-tools/src/main/java/lt/velykis/maven/skins/reflow/HtmlTool.java#L501-L522", "method_name": "extractElements(content, selector, amount)", "code": "\tpublic ExtractResult extract(String content, String selector, int amount) {\t\tList<Element> extracted = extractElements(content, selector, amount);\t\tif (extracted.size() > 1) {\t\t\t// first element is the remaining body, the rest are extracted\t\t\tElement body = extracted.get(0);\t\t\tList<Element> elements = extracted.subList(1, extracted.size());\t\t\t// convert to HTML\t\t\tList<String> elementStr = new ArrayList<String>();\t\t\tfor (Element el : elements) {\t\t\t\telementStr.add(el.outerHtml());\t\t\t}\t\t\treturn new DefaultExtractResult(elementStr, body.html());\t\t} else {\t\t\t// nothing to extract\t\t\treturn new DefaultExtractResult(Collections.<String> emptyList(), content);\t\t}\t}"}
{"id": "https://github.com/sitoolkit/sit-util-td/blob/63afd9909c9d404e93884b449f8bf48e867c80de/src/main/java/io/sitoolkit/util/tabledata/csv/CsvReader.java#L23-L57", "method_name": "new ArrayList<String>()", "code": "    public TableData readCsv(String file) {        List<String> allLines = new ArrayList<String>();        try {            // csvファイルの読み込み            String text = IOUtils.toString(FileIOUtils.getInputStream(file),                    FileIOUtils.getFileEncoding());            // 改行コードでsplitしリストに格納            for (String line : FileIOUtils.splitToLines(text)) {                allLines.add(line);            }        } catch (IOException e) {            throw new IllegalStateException(e);        }        TableData tableData = new TableData();        // データヘッダをリストから除外し、schemaに設定        Map<String, Integer> schema = retriveSchema(allLines.remove(0));        LOG.debug(MessageManager.getMessage(\"header\"), schema);        for (int i = 0; i < allLines.size(); i++) {            RowData row = readRow(schema, allLines.get(i));            tableData.add(row);            LOG.debug(MessageManager.getMessage(\"row.loaded\"), i + 1,                    FileIOUtils.escapeReturn(row));        }        LOG.info(MessageManager.getMessage(\"csv.loaded\"), tableData.getRowCount());        return tableData;    }"}
{"id": "https://github.com/BorderTech/wcomponents/blob/d1a2b2243270067db030feb36ca74255aaa94436/wcomponents-core/src/main/java/com/github/bordertech/wcomponents/WPartialDateField.java#L345-L384", "method_name": "getRequestValue", "code": "\t@Override\tpublic String getRequestValue(final Request request) {\t\tif (isPresent(request)) {\t\t\t// User entered a valid date\t\t\tString dateParam = request.getParameter(getId() + \"-date\");\t\t\tif (dateParam == null) {\t\t\t\treturn null;\t\t\t}\t\t\t// Validate Transfer Date Format - YYYY-MM-DD\t\t\tif (dateParam.length() != INTERNAL_DATE_TOTAL_CHARS || dateParam.charAt(\t\t\t\t\tINTERNAL_DASH1_POS) != '-'\t\t\t\t\t|| dateParam.charAt(INTERNAL_DASH2_POS) != '-') {\t\t\t\tLOG.warn(\"Date parameter is not in the format yyyy-MM-dd (\" + dateParam\t\t\t\t\t\t+ \") and will be treated as null.\");\t\t\t\treturn null;\t\t\t}\t\t\t// Transform YYYY-MM-DD to YYYYMMDD\t\t\tStringBuffer buf = new StringBuffer(DATE_TOTAL_CHARS);\t\t\tbuf.append(dateParam.substring(INTERNAL_YEAR_START, INTERNAL_YEAR_END));\t\t\tbuf.append(dateParam.substring(INTERNAL_MONTH_START, INTERNAL_MONTH_END));\t\t\tbuf.append(dateParam.substring(INTERNAL_DAY_START, INTERNAL_DAY_END));\t\t\tString dateFormat = buf.toString();\t\t\t// Validate the date\t\t\tif (!isValidPartialDateStringFormat(dateFormat, THEME_PADDING_CHAR)) {\t\t\t\tLOG.warn(\"Date parameter (\"\t\t\t\t\t\t+ dateParam\t\t\t\t\t\t+ \") could not be transformed from YYYY-MM-DD to the format YYYYMMDD and will be treated as null.\");\t\t\t\treturn null;\t\t\t}\t\t\t// Convert from Theme padding character to the correct padding character\t\t\treturn dateFormat.replace(THEME_PADDING_CHAR, getPaddingChar());\t\t} else {\t\t\treturn getValue();\t\t}\t}"}
{"id": "https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/bufr/src/main/java/ucar/nc2/iosp/bufr/tables/WmoXmlReader.java#L175-L245", "method_name": "null", "code": "  static void readWmoXmlTableB(InputStream ios, TableB b) throws IOException {\r    org.jdom2.Document doc;\r    try {\r      SAXBuilder builder = new SAXBuilder();\r      doc = builder.build(ios);\r    } catch (JDOMException e) {\r      throw new IOException(e.getMessage());\r    }\r\r    Element root = doc.getRootElement();\r\r    String[] elems = null;\r    for (Version v : Version.values()) {\r      elems = v.getElemNamesB();\r      List<Element> featList = root.getChildren(elems[0]);\r      if (featList != null && featList.size() > 0) {\r        break;\r      }\r    }\r\r    // if not found using element name, assume its BUFR_WMO\r    if (elems == null) {\r      elems = Version.BUFR_WMO.getElemNamesB();\r    }\r\r    List<Element> featList = root.getChildren();\r    for (Element elem : featList) {\r      Element ce = elem.getChild(elems[1]);\r      if (ce == null) continue;\r\r      String name = Util.cleanName(elem.getChildTextNormalize(elems[1]));\r      String units = cleanUnit(elem.getChildTextNormalize(\"BUFR_Unit\"));\r      int x = 0, y = 0, scale = 0, reference = 0, width = 0;\r\r      String fxy = null;\r      String s = null;\r      try {\r        fxy = elem.getChildTextNormalize(\"FXY\");\r        int xy = Integer.parseInt(cleanNumber(fxy));\r        x = xy / 1000;\r        y = xy % 1000;\r\r      } catch (NumberFormatException e) {\r        System.out.printf(\" key %s name '%s' fails parsing %n\", fxy, name);\r      }\r\r      try {\r        s = elem.getChildTextNormalize(\"BUFR_Scale\");\r        scale = Integer.parseInt(cleanNumber(s));\r      } catch (NumberFormatException e) {\r        System.out.printf(\" key %s name '%s' has bad scale='%s'%n\", fxy, name, s);\r      }\r\r      try {\r        s = elem.getChildTextNormalize(\"BUFR_ReferenceValue\");\r        reference = Integer.parseInt(cleanNumber(s));\r      } catch (NumberFormatException e) {\r        System.out.printf(\" key %s name '%s' has bad reference='%s' %n\", fxy, name, s);\r      }\r\r      try {\r        s = elem.getChildTextNormalize(\"BUFR_DataWidth_Bits\");\r        width = Integer.parseInt(cleanNumber(s));\r      } catch (NumberFormatException e) {\r        System.out.printf(\" key %s name '%s' has bad width='%s' %n\", fxy, name, s);\r      }\r\r      b.addDescriptor((short) x, (short) y, scale, reference, width, name, units, null);\r    }\r    ios.close();\r  }\r"}
{"id": "https://github.com/Squarespace/cldr/blob/54b752d4ec2457df56e98461618f9c0eec41e1e1/runtime/src/main/java/com/squarespace/cldr/PartitionTable.java#L156-L158", "method_name": "sortedList", "code": "  private static List<String> sortedList(Set<String> set) {    return set.stream().sorted().collect(Collectors.toList());  }"}
{"id": "https://github.com/jpmml/jpmml-evaluator/blob/ac8a48775877b6fa9dbc5f259871f3278489cc61/pmml-evaluator/src/main/java/org/jpmml/evaluator/DistributionUtil.java#L37-L49", "method_name": "probability", "code": "\tstatic\tpublic double probability(ContinuousDistribution distribution, Number x){\t\tif(distribution instanceof GaussianDistribution){\t\t\treturn probability((GaussianDistribution)distribution, x);\t\t} else\t\tif(distribution instanceof PoissonDistribution){\t\t\treturn probability((PoissonDistribution)distribution, x);\t\t}\t\tthrow new UnsupportedElementException(distribution);\t}"}
{"id": "https://github.com/h2oai/h2o-2/blob/be350f3f2c2fb6f135cc07c41f83fd0e4f521ac1/src/main/java/water/api/Models.java#L148-L162", "method_name": "generateModelSummaries", "code": "  public static Map<String, ModelSummary> generateModelSummaries(Set<String>keys, Map<String, Model> models, boolean find_compatible_frames, Map<String, Frame> all_frames, Map<String, Set<String>> all_frames_cols) {      Map<String, ModelSummary> modelSummaries = new TreeMap<String, ModelSummary>();      if (null == keys) {        keys = models.keySet();      }      for (String key : keys) {        ModelSummary summary = new ModelSummary();        Models.summarizeAndEnhanceModel(summary, models.get(key), find_compatible_frames, all_frames, all_frames_cols);        modelSummaries.put(key, summary);      }      return modelSummaries;  }"}
{"id": "https://github.com/opendatatrentino/s-match/blob/ba5982ef406b7010c2f92592e43887a485935aa1/src/main/java/it/unitn/disi/smatch/oracles/wordnet/WordNet.java#L597-L611", "method_name": "line", "code": "    private static String getTextFromStream(InputStream inputStream) throws IOException {\r        BufferedReader fileCheck;\r        fileCheck = new BufferedReader(new InputStreamReader(inputStream));\r        StringBuilder fileText = new StringBuilder();\r        String line;\r        while (null != (line = fileCheck.readLine())) {\r            fileText.append(line).append(\"\\n\");\r        }\r        try {\r            fileCheck.close();\r        } catch (IOException e) {\r            // doesn't matter.\r        }\r        return fileText.toString();\r    }\r"}
{"id": "https://github.com/shekhargulati/strman-java/blob/d0c2a10a6273fd6082f084e95156653ca55ce1be/src/main/java/strman/Strman.java#L955-L959", "method_name": "htmlDecode", "code": "    public static String htmlDecode(final String encodedHtml) {        validate(encodedHtml, NULL_STRING_PREDICATE, NULL_STRING_MSG_SUPPLIER);        String[] entities = encodedHtml.split(\"&\\\\W+;\");        return Arrays.stream(entities).map(e -> HtmlEntities.decodedEntities.get(e)).collect(joining());    }"}
{"id": "https://github.com/fommil/matrix-toolkits-java/blob/6157618bc86bcda3749af2a60bf869d8f3292960/src/main/java/no/uib/cipr/matrix/KR.java#L72-L84", "method_name": "multiply", "code": "    public Matrix multiply(Matrix C) {        checkKhatriRao(C);        for (int i = 0; i < A.numColumns(); ++i)            for (int j = 0; j < A.numRows(); ++j)                for (int k = 0; k < B.numRows(); ++k) {                    double value = A.get(j, i) * B.get(k, i);                    int destLine = B.numRows() * j + k;                    C.add(destLine, i, value);                }        return C;    }"}
{"id": "https://github.com/oglimmer/utils/blob/bc46c57a24e60c9dbda4c73a810c163b0ce407ea/src/main/java/de/oglimmer/utils/AbstractProperties.java#L185-L196", "method_name": "prettyPrint", "code": "\tprivate String prettyPrint(final JsonObject json) {\t\tfinal Map<String, Object> properties = new HashMap<>(1);\t\tproperties.put(JsonGenerator.PRETTY_PRINTING, true);\t\tfinal JsonWriterFactory writerFactory = Json.createWriterFactory(properties);\t\tfinal StringWriter sw = new StringWriter();\t\ttry (final JsonWriter jsonWriter = writerFactory.createWriter(sw)) {\t\t\tjsonWriter.writeObject(json);\t\t}\t\treturn sw.toString();\t}"}
{"id": "https://github.com/yunify/qingstor-sdk-java/blob/b44a228a99e60e4d6e5a450b7c05972552ab9962/src/main/java/com/qingstor/sdk/utils/QSJSONUtil.java#L31-L38", "method_name": "jsonToMap", "code": "    public static Map<String, Object> jsonToMap(JSONObject json) throws JSONException {        Map<String, Object> retMap = new HashMap<String, Object>();        if (json != JSONObject.NULL) {            retMap = toMap(json);        }        return retMap;    }"}
{"id": "https://github.com/jeremiehuchet/acrachilisync/blob/4eadb0218623e77e0d92b5a08515eea2db51e988/acrachilisync-core/src/main/java/fr/dudie/acrachilisync/model/AcraReport.java#L95-L109", "method_name": "toDate", "code": "    private Date toDate(final String pStringDate) {        // weird manipulation to parse the date... remove ':' from the timezone        // before: 2011-07-12T22:42:40.000+02:00        // after: 2011-07-12T22:42:40.000+0200        final StringBuilder _date = new StringBuilder();        _date.append(pStringDate.substring(0, pStringDate.length() - 3));        _date.append(pStringDate.substring(pStringDate.length() - 2));        try {            return new SimpleDateFormat(RFC_339_DATE_FORMAT).parse(_date.toString());        } catch (final ParseException e) {            throw new IllegalArgumentException(                    \"The given spreadsheet ListEntry usercrashdate field value is malformed\", e);        }    }"}
{"id": "https://github.com/jpaoletti/java-presentation-manager/blob/d5aab55638383695db244744b4bfe27c5200e04f/modules/jpm-core/src/main/java/jpaoletti/jpm/core/PaginatedList.java#L93-L98", "method_name": "getSort", "code": "    public ListSort getSort() {\r        if (sort == null) {\r            sort = new ListSort(null, ListSort.SortDirection.ASC);\r        }\r        return sort;\r    }\r"}
{"id": "https://github.com/derari/cthul/blob/74a31e3cb6a94f5f25cc5253d1dbd42e19a17ebc/strings/src/main/java/org/cthul/strings/format/PatternData.java#L33-L38", "method_name": "initArrays", "code": "    private void initArrays(final int len) {\r        offsets = new int[len];\r        mementos = new Object[len];\r        argIds = new Object[len];\r        patterns = new ConversionPattern[len];\r    }\r"}
{"id": "https://github.com/abola/CrawlerPack/blob/a7b7703b7fad519994dc04a9c51d90adc11d618f/src/main/java/com/github/abola/crawler/CrawlerPack.java#L235-L245", "method_name": "\"\"", "code": "    public String jsonToXml(String json){        String xml = \"\";        // 處理直接以陣列開頭的JSON，並指定給予 row 的 tag        if ( \"[\".equals( json.substring(0,1) ) ){            xml = XML.toString(new JSONArray(json), \"row\");        }else{            xml = XML.toString(new JSONObject(json));        }        return xml;    }"}
{"id": "https://github.com/opengeospatial/teamengine/blob/b6b890214b6784bbe19460bf753bdf28a9514bee/teamengine-core/src/main/java/com/occamlab/te/util/Stopwatch.java#L31-L39", "method_name": "elapsedTime", "code": "    public static String elapsedTime(String watchName) {\r        long elapsed = 0;\r        Date start = watchesMap.get(watchName);\r        if (start != null) {\r            Date end = new Date();\r            elapsed = end.getTime() - start.getTime();\r        }\r        return Long.toString(elapsed);\r    }\r"}
{"id": "https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/ldap/src/main/java/org/springframework/security/ldap/server/ApacheDSContainer.java#L165-L183", "method_name": "setWorkingDirectory", "code": "\tpublic void setWorkingDirectory(File workingDir) {\t\tAssert.notNull(workingDir, \"workingDir cannot be null\");\t\tlogger.info(\"Setting working directory for LDAP_PROVIDER: \"\t\t\t\t+ workingDir.getAbsolutePath());\t\tif (workingDir.exists()) {\t\t\tthrow new IllegalArgumentException(\t\t\t\t\t\"The specified working directory '\"\t\t\t\t\t\t\t+ workingDir.getAbsolutePath()\t\t\t\t\t\t\t+ \"' already exists. Another directory service instance may be using it or it may be from a \"\t\t\t\t\t\t\t+ \" previous unclean shutdown. Please confirm and delete it or configure a different \"\t\t\t\t\t\t\t+ \"working directory\");\t\t}\t\tthis.workingDir = workingDir;\t\tservice.setWorkingDirectory(workingDir);\t}"}
{"id": "https://github.com/jtablesaw/tablesaw/blob/68a75b4098ac677e9486df5572cf13ec39f9f701/core/src/main/java/tech/tablesaw/io/DataFrameWriter.java#L77-L80", "method_name": "csv", "code": "    public void csv(String file) throws IOException {        CsvWriteOptions options = CsvWriteOptions.builder(file).build();        new CsvWriter().write(table, options);    }"}
{"id": "https://github.com/gosu-lang/gosu-lang/blob/d6e9261b137ce66fef3726cabe7826d4a1f946b7/gosu-lab/src/main/java/editor/search/SearchTree.java#L103-L121", "method_name": "getTextLine", "code": "  private String getTextLine( SearchLocation loc )  {    try( BufferedReader reader = PathUtil.createReader( getNode().getFile().getFileOrDir() ) )    {      for( int line = 0; line < loc._iLine; line++ )      {        String textLine = reader.readLine();        if( line == loc._iLine-1 )        {          return textLine;        }      }    }    catch( Exception e )    {      throw new RuntimeException( e );    }    return \"\";  }"}
{"id": "https://github.com/jpmml/jpmml-evaluator/blob/ac8a48775877b6fa9dbc5f259871f3278489cc61/pmml-evaluator/src/main/java/org/jpmml/evaluator/DistributionUtil.java#L51-L56", "method_name": "probability", "code": "\tstatic\tpublic double probability(GaussianDistribution gaussianDistribution, Number x){\t\tNormalDistribution distribution = new NormalDistribution(gaussianDistribution.getMean(), Math.sqrt(gaussianDistribution.getVariance()));\t\treturn distribution.density(x.doubleValue());\t}"}
{"id": "https://github.com/pdef/pdef-java/blob/7776c44d1aab0f3dbf7267b0c32b8f9282fe6167/pdef/src/main/java/io/pdef/rpc/RpcProtocol.java#L237-L243", "method_name": "urlencode", "code": "\tstatic String urlencode(final String s) {\t\ttry {\t\t\treturn URLEncoder.encode(s, CHARSET_NAME);\t\t} catch (UnsupportedEncodingException e) {\t\t\tthrow new RuntimeException(e);\t\t}\t}"}
{"id": "https://github.com/enasequence/sequencetools/blob/4127f5e1a17540239f5810136153fbd6737fa262/src/main/java/uk/ac/ebi/embl/gff3/reader/GFF3AbstractLineReader.java#L52-L60", "method_name": "lineReader.getCurrentLine()", "code": "    protected void readLines(){    \tlineNumber = lineReader.getCurrentLineNumber();\t\tString line = lineReader.getCurrentLine();\t\tif (line != null && line.length() > 0) {\t\t\t// Remove double spaces.\t\t\tline = FlatFileUtils.shrink(line);\t\t\treadLine(line);\t\t}    }"}
{"id": "https://github.com/Addicticks/httpsupload/blob/261a8e63ec923482a74ffe1352024c1900c55a55/src/main/java/com/addicticks/net/httpsupload/Utils.java#L427-L434", "method_name": "getHttpStatusCodeText", "code": "    public static String getHttpStatusCodeText(int sc) {        HttpStatusCode sCode = HttpStatusCode.fromNumStatusCode(sc);        if (sCode == null) {            return sc + \" <unknown status code>\";        } else {            return sCode.toString();        }    }"}
{"id": "https://github.com/haifengl/smile/blob/e27e43e90fbaacce3f99d30120cf9dd6a764c33d/demo/src/main/java/smile/demo/classification/ClassificationDemo.java#L123-L129", "method_name": "paintOnCanvas", "code": "    protected PlotCanvas paintOnCanvas(double[][] data, int[] label) {        PlotCanvas canvas = ScatterPlot.plot(data, pointLegend);        for (int i = 0; i < data.length; i++) {            canvas.point(pointLegend, Palette.COLORS[label[i]], data[i]);        }        return canvas;    }"}
{"id": "https://github.com/jamesagnew/hapi-fhir/blob/150a84d52fe691b7f48fcb28247c4bddb7aec352/hapi-fhir-structures-dstu3/src/main/java/org/hl7/fhir/dstu3/formats/JsonParser.java#L2623-L2627", "method_name": "parseBinary", "code": "  protected Binary parseBinary(JsonObject json) throws IOException, FHIRFormatError {\r    Binary res = new Binary();\r    parseBinaryProperties(json, res);\r    return res;\r  }\r"}
{"id": "https://github.com/facebookarchive/hadoop-20/blob/2a29bc6ecf30edb1ad8dbde32aa49a317b4d44f4/src/contrib/benchmark/src/java/org/apache/hadoop/mapred/DatanodeBenThread.java#L275-L312", "method_name": "System.currentTimeMillis() + rtc.max_time", "code": "    public void read() throws Exception {      long endTime = System.currentTimeMillis() + rtc.max_time;      while (System.currentTimeMillis() < endTime) {        // Randomly pick a datanode from victims        int idx = rb.nextInt(rtc.victims.length);        // Randomly pick a file to read        ArrayList<Path> fileList = nsPickLists.get(rtc.victims[idx].getHostName());         int fid = rb.nextInt(fileList.size());        Path readFile = fileList.get(fid);         FSDataInputStream in = null;        try {          in = fs.open(readFile);          if (in.isUnderConstruction()) {            LOG.info(\"file \" + readFile + \" is still open\");          }          FileStatus fileStatus = fs.getFileStatus(readFile);          long offset = rb.nextInt((int)Math.max(              fileStatus.getLen() - rtc.buffer_size, 0) + 1);          int size = 0;          in.seek(offset);          size = in.read(buffer, 0, rtc.buffer_size);          if (size < 0) {            continue;          }          processed_size += size;          read_size += size;          LOG.info(\"Read file \" + readFile + \" from \" +               offset + \" to \" + (offset + size));        } catch (Exception e) {           LOG.error(\"Error in read file: \" + readFile, e);          this.errors.add(e);        } finally {          IOUtils.closeStream(in);        }        files_processed++;        Thread.sleep(5);      }    }"}
{"id": "https://github.com/OpenNMS/newts/blob/e1b53169d8a7fbc5e9fb826da08d602f628063ea/examples/gsod/src/main/java/org/opennms/newts/gsod/ImportRunner.java#L581-L593", "method_name": "successful", "code": "    private static Func1<ObservableHttpResponse, Boolean> successful() {        return new Func1<ObservableHttpResponse, Boolean>() {            @Override            public Boolean call(ObservableHttpResponse response) {                if (response.getResponse().getStatusLine().getStatusCode() >= 400) {                    throw new RuntimeException(\"Failed to post samples: \" + response.getResponse().getStatusLine());                }                return true;            }                    };    }"}
{"id": "https://github.com/kiegroup/optaplanner/blob/b8f1459b4e6b0f7aafe941fd165bff640c11d7d5/optaplanner-examples/src/main/java/org/optaplanner/examples/common/persistence/generator/ProbabilisticDataGenerator.java#L30-L36", "method_name": "extractRandomSubList", "code": "    public static <E> List<E> extractRandomSubList(Random random, List<E> list, double... thresholds) {        int size = generateRandomIntFromThresholds(random, thresholds);        if (size > list.size()) {            size = list.size();        }        return extractRandomSubListOfSize(random, list, size);    }"}
{"id": "https://github.com/cogroo/cogroo4/blob/b6228900c20c6b37eac10a03708a9669dd562f52/cogroo-nlp/src/main/java/org/cogroo/tools/postag/PortuguesePOSSequenceValidator.java#L106-L114", "method_name": "filterMWE", "code": "  private List<String> filterMWE(String[] arr) {    if(arr == null) return null;    List<String> out = new ArrayList<String>(arr.length);    for (String t : arr) {      if (!(t.startsWith(\"B-\") || t.startsWith(\"I-\")))        out.add(t);    }    return out;  }"}
{"id": "https://github.com/yasserg/crawler4j/blob/4fcddc86414d1831973aff94050af55c7aeff3bc/crawler4j/src/main/java/edu/uci/ics/crawler4j/parser/Parser.java#L64-L134", "method_name": "parse", "code": "    public void parse(Page page, String contextURL) throws NotAllowedContentException, ParseException {        if (Util.hasBinaryContent(page.getContentType())) { // BINARY            BinaryParseData parseData = new BinaryParseData();            if (config.isIncludeBinaryContentInCrawling()) {                if (config.isProcessBinaryContentInCrawling()) {                    try {                        parseData.setBinaryContent(page.getContentData());                    } catch (Exception e) {                        if (config.isHaltOnError()) {                            throw new ParseException(e);                        } else {                            logger.error(\"Error parsing file\", e);                        }                    }                } else {                    parseData.setHtml(\"<html></html>\");                }                page.setParseData(parseData);                if (parseData.getHtml() == null) {                    throw new ParseException();                }                parseData.setOutgoingUrls(net.extractUrls(parseData.getHtml()));            } else {                throw new NotAllowedContentException();            }        } else if (Util.hasCssTextContent(page.getContentType())) { // text/css            try {                CssParseData parseData = new CssParseData();                if (page.getContentCharset() == null) {                    parseData.setTextContent(new String(page.getContentData()));                } else {                    parseData.setTextContent(                        new String(page.getContentData(), page.getContentCharset()));                }                parseData.setOutgoingUrls(page.getWebURL());                page.setParseData(parseData);            } catch (Exception e) {                logger.error(\"{}, while parsing css: {}\", e.getMessage(), page.getWebURL().getURL());                throw new ParseException();            }        } else if (Util.hasPlainTextContent(page.getContentType())) { // plain Text            try {                TextParseData parseData = new TextParseData();                if (page.getContentCharset() == null) {                    parseData.setTextContent(new String(page.getContentData()));                } else {                    parseData.setTextContent(                        new String(page.getContentData(), page.getContentCharset()));                }                parseData.setOutgoingUrls(net.extractUrls(parseData.getTextContent()));                page.setParseData(parseData);            } catch (Exception e) {                logger.error(\"{}, while parsing: {}\", e.getMessage(), page.getWebURL().getURL());                throw new ParseException(e);            }        } else { // isHTML            HtmlParseData parsedData = this.htmlContentParser.parse(page, contextURL);            if (page.getContentCharset() == null) {                page.setContentCharset(parsedData.getContentCharset());            }            // Please note that identifying language takes less than 10 milliseconds            LanguageIdentifier languageIdentifier = new LanguageIdentifier(parsedData.getText());            page.setLanguage(languageIdentifier.getLanguage());            page.setParseData(parsedData);        }    }"}
{"id": "https://github.com/ical4j/ical4j/blob/7ac4bd1ce2bb2e0a2906fb69a56fbd2d9d974156/src/main/java/net/fortuna/ical4j/filter/Filter.java#L156-L167", "method_name": "filter", "code": "    @SuppressWarnings(\"unchecked\")    public final T[] filter(final T[] objects) {        final Collection<T> filtered = filter(Arrays.asList(objects));        try {            return filtered.toArray((T[]) Array.newInstance(objects                    .getClass(), filtered.size()));        } catch (ArrayStoreException ase) {            Logger log = LoggerFactory.getLogger(Filter.class);            log.warn(\"Error converting to array - using default approach\", ase);        }        return (T[]) filtered.toArray();    }"}
{"id": "https://github.com/javydreamercsw/validation-manager/blob/ae7d74f514c8fd5a841c5d459cd1cc5445b51630/VM-Core/src/main/java/com/validation/manager/core/tool/step/importer/StepImporter.java#L265-L297", "method_name": "InvalidFormatException", "code": "    public static File exportTemplate() throws FileNotFoundException,\r            IOException, InvalidFormatException {\r        File template = new File(\"Template.xls\");\r        template.createNewFile();\r        org.apache.poi.ss.usermodel.Workbook wb = new HSSFWorkbook();\r        org.apache.poi.ss.usermodel.Sheet sheet = wb.createSheet();\r        wb.setSheetName(0, \"Steps\");\r        int column = 0;\r        CellStyle cs = wb.createCellStyle();\r        cs.setDataFormat(getBuiltinFormat(\"text\"));\r        Font f = wb.createFont();\r        f.setFontHeightInPoints((short) 12);\r        f.setBold(true);\r        f.setColor((short) Font.COLOR_NORMAL);\r        cs.setFont(f);\r        Row newRow = sheet.createRow(0);\r        for (String label : COLUMNS) {\r            Cell newCell = newRow.createCell(column);\r            newCell.setCellStyle(cs);\r            newCell.setCellValue(label);\r            column++;\r        }\r\r        try (FileOutputStream out = new FileOutputStream(template)) {\r            wb.write(out);\r            out.close();\r        } catch (FileNotFoundException e) {\r            LOG.log(Level.SEVERE, null, e);\r        } catch (IOException e) {\r            LOG.log(Level.SEVERE, null, e);\r        }\r        return template;\r    }\r"}
{"id": "https://github.com/taimos/dvalin/blob/ff8f1bf594e43d7e8ca8de0b4da9f923b66a1a47/daemon/src/main/java/de/taimos/daemon/properties/CloudConductorPropertyProvider.java#L98-L123", "method_name": "readPropertyFile", "code": "\tprivate void readPropertyFile(String propFile) {\t\tFile file = null;\t\tif(propFile != null && !propFile.isEmpty()) {\t\t\tfile = new File(propFile);\t\t}\t\tif(file == null || !file.exists()) {\t\t\tfile = new File(CloudConductorPropertyProvider.CLOUDCONDUCTOR_PROP_FILE_DEFAULT_PATH);\t\t}\t\tif(file.exists()) {\t\t\ttry(InputStream reader = new FileInputStream(file)) {\t\t\t\tProperties prop = new Properties();\t\t\t\tprop.load(reader);\t\t\t\tif(this.server == null && prop.containsKey(CloudConductorPropertyProvider.CLOUDCONDUCTOR_URL)) {\t\t\t\t\tthis.server = prop.getProperty(CloudConductorPropertyProvider.CLOUDCONDUCTOR_URL);\t\t\t\t}\t\t\t\tif(this.template == null && prop.containsKey(CloudConductorPropertyProvider.TEMPLATE_NAME)) {\t\t\t\t\tthis.template = prop.getProperty(CloudConductorPropertyProvider.TEMPLATE_NAME);\t\t\t\t}\t\t\t\tif(this.jwt == null && prop.containsKey(CloudConductorPropertyProvider.CLOUDCONDUCTOR_PROP_FILE_TOKEN)) {\t\t\t\t\tthis.jwt = this.getAuthToken(prop.getProperty(CloudConductorPropertyProvider.CLOUDCONDUCTOR_PROP_FILE_TOKEN));\t\t\t\t}\t\t\t} catch(IOException ex) {\t\t\t\tthis.logger.warn(\"Failed to find cloudconductor properties file: '{}'\", file);\t\t\t}\t\t}\t}"}
{"id": "https://github.com/casmi/casmi-io/blob/fa2d2240702a031ee184813a74f84bfddef863e6/src/main/java/casmi/io/parser/CSV.java#L226-L231", "method_name": "openWriter", "code": "    private void openWriter() throws IOException {        if (csvWriter == null) {            csvWriter = new CSVWriter(new java.io.FileWriter(file), separator);        }    }"}
{"id": "https://github.com/AltBeacon/android-beacon-library/blob/f7f3a323ea7415d53e7bd695ff6a01f1501d5dc3/lib/src/main/java/org/altbeacon/beacon/service/Stats.java#L109-L117", "method_name": "formattedDate", "code": "    private String formattedDate(Date d) {        String formattedDate = \"\";        if (d != null) {            synchronized (SIMPLE_DATE_FORMAT) {                formattedDate = SIMPLE_DATE_FORMAT.format(d);            }        }        return formattedDate;    }"}
{"id": "https://github.com/brunocvcunha/inutils4j/blob/223c4443c2cee662576ce644e552588fa114aa94/src/main/java/org/brunocvcunha/inutils4j/MyStringUtils.java#L2096-L2107", "method_name": "replaceHtmlEntities", "code": "  public static String replaceHtmlEntities(String content, Map<String, Character> map) {        for (Entry<String, Character> entry : escapeStrings.entrySet()) {            if (content.indexOf(entry.getKey()) != -1) {        content = content.replace(entry.getKey(), String.valueOf(entry.getValue()));      }          }        return content;  }"}
{"id": "https://github.com/centic9/commons-dost/blob/f6fa4e3e0b943ff103f918824319d8abf33d0e0f/src/main/java/org/dstadler/commons/zip/ZipUtils.java#L390-L426", "method_name": "extractZip", "code": "\tpublic static void extractZip(InputStream zip, final File toDir) throws IOException{\t\tif(!toDir.exists()) {\t\t\tthrow new IOException(\"Directory '\" + toDir + \"' does not exist.\");\t\t}\t\t// Use the ZipFileVisitor to walk all the entries in the Zip-Stream and create\t\t// directories and files accordingly\t\tnew ZipFileVisitor() {\t\t\t@Override\t\t\tpublic void visit(ZipEntry entry, InputStream data) throws IOException {\t\t\t\tFile target = new File(toDir, entry.getName());\t\t\t\tif (entry.isDirectory()) {\t\t\t\t\t// Assume directories are stored parents first then children.\t\t\t\t\t//logger.info(\"Extracting directory: \" + entry.getName() + \" to \" + target);\t\t\t\t\t// This is not robust, just for demonstration purposes.\t\t\t\t\tif(!target.mkdirs()) {\t\t\t\t\t\tlogger.warning(\"Could not create directory \" + target);\t\t\t\t\t}\t\t\t\t\treturn;\t\t\t\t}\t\t\t\t// zips can contain nested files in sub-dirs without separate entries for the directories\t\t\t\tif(!target.getParentFile().exists() && !target.getParentFile().mkdirs()) {\t\t\t\t\tlogger.warning(\"Could not create directory \" + target.getParentFile());\t\t\t\t}\t\t\t\t// it seems we cannot use IOUtils/FileUtils to copy as they close the stream\t\t\t\tint size;\t\t\t\tbyte[] buffer = new byte[2048];\t\t\t\ttry (OutputStream fout = new BufferedOutputStream(new FileOutputStream(target), buffer.length)) {\t                while ((size = data.read(buffer, 0, buffer.length)) != -1) {\t                    fout.write(buffer, 0, size);\t                }\t\t\t\t}\t\t\t}\t\t}.walk(zip);\t}"}
{"id": "https://github.com/dmak/jaxb-xew-plugin/blob/d564d6bf8e50c46b056cdb4b46d1d4bee4adfbe3/src/main/java/com/sun/tools/xjc/addon/xew/config/GlobalConfiguration.java#L163-L169", "method_name": "writeSummary", "code": "\tpublic void writeSummary(String s) {\r\t\tif (summaryWriter != null) {\r\t\t\tsummaryWriter.println(s);\r\t\t}\r\r\t\tlogger.info(s);\r\t}\r"}
{"id": "https://github.com/percolate/caffeine/blob/e2265cab474a6397f4d75b1ed928c356a7b9672e/caffeine/src/main/java/com/percolate/caffeine/ClipboardUtils.java#L17-L27", "method_name": "getClipboardText", "code": "    public static String getClipboardText(final Context context) {        final ClipboardManager clipboard = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);        final ClipData clipData = clipboard.getPrimaryClip();        if(clipData != null && clipData.getItemCount() > 0) {            final CharSequence clipboardText = clipData.getItemAt(0).getText();            if(clipboardText != null) {                return clipboardText.toString();            }        }        return null;    }"}
{"id": "https://github.com/VoltDB/voltdb/blob/8afc1031e475835344b5497ea9e7203bc95475ac/src/frontend/org/voltdb/utils/Collector.java#L222-L249", "method_name": "parseJSONFile", "code": "    public static JSONObject parseJSONFile(String configInfoPath) {        JSONObject jsonObject = null;        try {            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(configInfoPath)));            StringBuilder builder = new StringBuilder();            String line = null;            while ((line = bufferedReader.readLine()) != null) {                builder.append(line);            }            bufferedReader.close();            jsonObject = new JSONObject(builder.toString());        } catch (FileNotFoundException e) {            System.err.println(\"config log file '\" + configInfoPath + \"' could not be found.\");            VoltDB.exit(-1);        } catch (IOException e) {            System.err.println(e.getMessage());            VoltDB.exit(-1);        } catch (JSONException e) {            System.err.println(\"Error with config file: \" + configInfoPath);            System.err.println(e.getLocalizedMessage());            VoltDB.exit(-1);        }        return jsonObject;    }"}
{"id": "https://github.com/francesco-ficarola/gexf4j/blob/24199ed172c5457b2293cee4ec1c7a83910239f0/src/main/java/it/uniroma1/dis/wsngroup/gexf4j/core/impl/writer/AbstractEntityWriter.java#L35-L43", "method_name": "toDateString", "code": "    protected String toDateString(Object date) {        String returnValue = null;        if (date instanceof Date) {        \tSimpleDateFormat sdfDate = new SimpleDateFormat(\"yyyy-MM-dd\");            Date d = (Date) date;            returnValue = sdfDate.format(d);        }        return returnValue;    }"}
{"id": "https://github.com/facebookarchive/hadoop-20/blob/2a29bc6ecf30edb1ad8dbde32aa49a317b4d44f4/src/contrib/failmon/src/java/org/apache/hadoop/contrib/failmon/LocalStore.java#L206-L221", "method_name": "zipCompress", "code": "  public static void zipCompress(String filename) throws IOException {    FileOutputStream fos = new FileOutputStream(filename + COMPRESSION_SUFFIX);    CheckedOutputStream csum = new CheckedOutputStream(fos, new CRC32());    ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(csum));    out.setComment(\"Failmon records.\");    BufferedReader in = new BufferedReader(new FileReader(filename));    out.putNextEntry(new ZipEntry(new File(filename).getName()));    int c;    while ((c = in.read()) != -1)      out.write(c);    in.close();    out.finish();    out.close();  }"}
{"id": "https://github.com/datumbox/datumbox-framework/blob/909dff0476e80834f05ecdde0624dd2390e9b0ca/datumbox-framework-core/src/main/java/com/datumbox/framework/core/common/text/extractors/NgramsExtractor.java#L283-L295", "method_name": "useThisWord", "code": "    private boolean useThisWord(Integer wordID, Map<Integer, String> ID2word, Map<Integer, Double> ID2occurrences) {        String word = ID2word.get(wordID);        if(word==null) {            return false;        }        else if(word.length() < parameters.getMinWordLength()) {            return false;        }        else if(ID2occurrences.get(wordID)<parameters.getMinWordOccurrence()) {            return false;        }        return true;    }"}
{"id": "https://github.com/osglworks/java-tool/blob/8b6eee2bccb067eb32e6a7bc4a4dfef7a7d9008b/src/main/java/org/osgl/util/converter/JsonObjectToXmlDocument.java#L29-L32", "method_name": "convert", "code": "    @Override    public Document convert(JSONObject json) {        return JsonXmlConvertHint.convert(json, OsglConfig.xmlRootTag(), OsglConfig.xmlListItemTag());    }"}
{"id": "https://github.com/jMotif/SAX/blob/39ee07a69facaa330def5130b8790aeda85f1061/src/main/java/net/seninp/util/HeatChart.java#L1393-L1409", "method_name": "updateCoordinates", "code": "  private void updateCoordinates() {    // Top-left of heat map.    int x = margin + axisThickness + yAxisLabelSize.height;    x += (yValuesHorizontal ? yAxisValuesWidthMax : yAxisValuesHeight);    int y = titleSize.height + margin;    heatMapTL = new Point(x, y);    // Top-right of heat map.    x = heatMapTL.x + heatMapSize.width;    y = heatMapTL.y + heatMapSize.height;    heatMapBR = new Point(x, y);    // Centre of heat map.    x = heatMapTL.x + (heatMapSize.width / 2);    y = heatMapTL.y + (heatMapSize.height / 2);    heatMapC = new Point(x, y);  }"}
{"id": "https://github.com/Pi4J/pi4j/blob/03cacc62223cc59b3118bfcefadabab979fd84c7/pi4j-example/src/main/java/WiringPiSerialExample.java#L34-L62", "method_name": "main", "code": "    public static void main(String args[]) throws InterruptedException {        System.out.println(\"<--Pi4J--> SERIAL test program\");        // open serial port for communication        int fd = Serial.serialOpen(Serial.DEFAULT_COM_PORT, 38400);        if (fd == -1) {            System.out.println(\" ==>> SERIAL SETUP FAILED\");            return;        }        // infinite loop        while(true) {            // send test ASCII message            Serial.serialPuts(fd, \"TEST\\r\\n\");            // display data received to console            int dataavail = Serial.serialDataAvail(fd);            while(dataavail > 0) {                byte data = Serial.serialGetByte(fd);                System.out.print(data);                dataavail = Serial.serialDataAvail(fd);            }            // wash, rinse, repeat            Thread.sleep(1000);        }    }"}
{"id": "https://github.com/gitbucket/markedj/blob/5e689b58e11d8403c561a9390eb0b21347ca809f/src/main/java/io/github/gitbucket/markedj/Utils.java#L12-L19", "method_name": "escape", "code": "    public static String escape(String html, boolean encode){        if(!encode){            html = html.replaceAll(\"&(?!#?\\\\w+;)\", \"&amp;\");        } else {            html = html.replace(\"&\", \"&amp;\");        }        return html.replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\").replace(\"\\\"\", \"&quot;\").replace(\"'\", \"&#39;\");    }"}
{"id": "https://github.com/sirthias/pegdown/blob/19ca3d3d2bea5df19eb885260ab24f1200a16452/src/main/java/org/pegdown/ToHtmlSerializer.java#L151-L179", "method_name": "visit", "code": "    public void visit(ListItemNode node) {        if (node instanceof TaskListNode) {            // vsch: #185 handle GitHub style task list items, these are a bit messy because the <input> checkbox needs to be            // included inside the optional <p></p> first grand-child of the list item, first child is always RootNode            // because the list item text is recursively parsed.            Node firstChild = node.getChildren().get(0).getChildren().get(0);            boolean firstIsPara = firstChild instanceof ParaNode;            int indent = node.getChildren().size() > 1 ? 2 : 0;            boolean startWasNewLine = printer.endsWithNewLine();            printer.println().print(\"<li class=\\\"task-list-item\\\">\").indent(indent);            if (firstIsPara) {                printer.println().print(\"<p>\");                printer.print(\"<input type=\\\"checkbox\\\" class=\\\"task-list-item-checkbox\\\"\" + (((TaskListNode) node).isDone() ? \" checked=\\\"checked\\\"\" : \"\") + \" disabled=\\\"disabled\\\"></input>\");                visitChildren((SuperNode) firstChild);                // render the other children, the p tag is taken care of here                visitChildrenSkipFirst(node);                printer.print(\"</p>\");            } else {                printer.print(\"<input type=\\\"checkbox\\\" class=\\\"task-list-item-checkbox\\\"\" + (((TaskListNode) node).isDone() ? \" checked=\\\"checked\\\"\" : \"\") + \" disabled=\\\"disabled\\\"></input>\");                visitChildren(node);            }            printer.indent(-indent).printchkln(indent != 0).print(\"</li>\")                    .printchkln(startWasNewLine);        } else {            printConditionallyIndentedTag(node, \"li\");        }    }"}
{"id": "https://github.com/dihedron/dihedron-commons/blob/a5194cdaa0d6417ef4aade6ea407a1cad6e8458e/src/main/java/org/dihedron/core/strings/Strings.java#L460-L465", "method_name": "reverse", "code": "\tpublic static String reverse(String string) {\t\tif(string != null) {\t\t\treturn new StringBuilder(string).reverse().toString();\t\t}\t\treturn null;\t}"}
{"id": "https://github.com/couchbase/couchbase-lite-java-core/blob/3b275642e2d2f231fd155ad9def9c5e9eff3118e/src/main/java/com/couchbase/lite/support/PersistentCookieJar.java#L197-L199", "method_name": "createCookie", "code": "    private static Cookie createCookie(String name, String value, String domain, String path, Date expirationDate) {        return createCookie(name, value, domain, path, expirationDate.getTime());    }"}
{"id": "https://github.com/jtablesaw/tablesaw/blob/68a75b4098ac677e9486df5572cf13ec39f9f701/core/src/main/java/tech/tablesaw/api/DoubleColumn.java#L365-L374", "method_name": "countUnique", "code": "    @Override    public int countUnique() {        DoubleSet uniqueElements = new DoubleOpenHashSet();        for (int i = 0; i < size(); i++) {            if (!isMissing(i)) {                uniqueElements.add(getDouble(i));            }        }        return uniqueElements.size();    }"}
{"id": "https://github.com/webmetrics/browsermob-proxy/blob/a9252e62246ac33d55d51b993ba1159404e7d389/src/main/java/org/browsermob/proxy/http/BrowserMobHttpClient.java#L216-L218", "method_name": "createCookie", "code": "    public void createCookie(String name, String value, String domain) {        createCookie(name, value, domain, null);    }"}
{"id": "https://github.com/Waikato/moa/blob/395982e5100bfe75a3a4d26115462ce2cc74cbb0/moa/src/main/java/moa/clusterers/outliers/utils/mtree/utils/Utils.java#L73-L88", "method_name": "randomSample", "code": "\tpublic static <T> List<T> randomSample(Collection<T> collection, int n) {\t\tList<T> list = new ArrayList<T>(collection);\t\tList<T> sample = new ArrayList<T>(n);\t\tRandom random = new Random();\t\twhile(n > 0  &&  !list.isEmpty()) {\t\t\tint index = random.nextInt(list.size());\t\t\tsample.add(list.get(index));\t\t\tint indexLast = list.size() - 1;\t\t\tT last = list.remove(indexLast);\t\t\tif(index < indexLast) {\t\t\t\tlist.set(index, last);\t\t\t}\t\t\tn--;\t\t}\t\treturn sample;\t}"}
{"id": "https://github.com/deeplearning4j/deeplearning4j/blob/effce52f2afd7eeb53c5bcca699fcd90bd06822f/deeplearning4j/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/conf/distribution/serde/LegacyDistributionDeserializer.java#L37-L86", "method_name": "deserialize", "code": "    @Override    public Distribution deserialize(JsonParser jp, DeserializationContext deserializationContext)                    throws IOException, JsonProcessingException {        //Manually parse old format        JsonNode node = jp.getCodec().readTree(jp);        if (node.has(\"normal\")) {            JsonNode n = node.get(\"normal\");            if (!n.has(\"mean\") || !n.has(\"std\")) {                throw new JsonParseException(\"Cannot deserialize Distribution: legacy format 'normal' wrapper object \"                                + \" is missing 'mean' or 'std' field\", jp.getCurrentLocation());            }            double m = n.get(\"mean\").asDouble();            double s = n.get(\"std\").asDouble();            return new NormalDistribution(m, s);        } else if (node.has(\"gaussian\")) {            JsonNode n = node.get(\"gaussian\");            if (!n.has(\"mean\") || !n.has(\"std\")) {                throw new JsonParseException(\"Cannot deserialize Distribution: legacy format 'gaussian' wrapper object \"                                + \" is missing 'mean' or 'std' field\", jp.getCurrentLocation());            }            double m = n.get(\"mean\").asDouble();            double s = n.get(\"std\").asDouble();            return new GaussianDistribution(m, s);        } else if (node.has(\"uniform\")) {            JsonNode n = node.get(\"uniform\");            if (!n.has(\"lower\") || !n.has(\"upper\")) {                throw new JsonParseException(\"Cannot deserialize Distribution: legacy format 'uniform' wrapper object \"                                + \" is missing 'lower' or 'upper' field\", jp.getCurrentLocation());            }            double l = n.get(\"lower\").asDouble();            double u = n.get(\"upper\").asDouble();            return new UniformDistribution(l, u);        } else if (node.has(\"binomial\")) {            JsonNode n = node.get(\"binomial\");            if (!n.has(\"numberOfTrials\") || !n.has(\"probabilityOfSuccess\")) {                throw new JsonParseException(\"Cannot deserialize Distribution: legacy format 'binomial' wrapper object \"                                + \" is missing 'lower' or 'upper' field\", jp.getCurrentLocation());            }            int num = n.get(\"numberOfTrials\").asInt();            double p = n.get(\"probabilityOfSuccess\").asDouble();            return new BinomialDistribution(num, p);        } else {            throw new JsonParseException(                            \"Cannot deserialize Distribution: expected type field or legacy format wrapper\"                                            + \" object with name being one of {normal, gaussian, uniform, binomial}\",                            jp.getCurrentLocation());        }    }"}
{"id": "https://github.com/clanie/clanie-core/blob/ac8a655b93127f0e281b741c4d53f429be2816ad/src/main/java/dk/clanie/collections/CollectionFactory.java#L288-L290", "method_name": "newPriorityQueue", "code": "\tpublic static <E> PriorityQueue<E> newPriorityQueue(PriorityQueue<? extends E> priorityQueue) {\t\treturn new PriorityQueue<E>(priorityQueue);\t}"}
{"id": "https://github.com/elki-project/elki/blob/b54673327e76198ecd4c8a2a901021f1a9174498/elki-clustering/src/main/java/de/lmu/ifi/dbs/elki/algorithm/clustering/kmeans/quality/BayesianInformationCriterionZhao.java#L73-L107", "method_name": "clustering.getAllClusters()", "code": "  public static <V extends NumberVector> double logLikelihoodZhao(Relation<V> relation, Clustering<? extends MeanModel> clustering, NumberVectorDistanceFunction<? super V> distanceFunction) {    List<? extends Cluster<? extends MeanModel>> clusters = clustering.getAllClusters();    // number of clusters    final int m = clusters.size();    // number of objects in the clustering    int n = 0;    // cluster sizes    int[] n_i = new int[m];    // variances    double[] d_i = new double[m];    // Iterate over clusters:    Iterator<? extends Cluster<? extends MeanModel>> it = clusters.iterator();    for(int i = 0; it.hasNext(); ++i) {      Cluster<? extends MeanModel> cluster = it.next();      n += n_i[i] = cluster.size();      // Note: the paper used 1/(n-m) but that is probably a typo      // as it will cause divisions by zero.      d_i[i] = varianceOfCluster(cluster, distanceFunction, relation) / (double) n_i[i];    }    final int dim = RelationUtil.dimensionality(relation);    // log likelihood of this clustering    double logLikelihood = 0.;    // Aggregate    for(int i = 0; i < m; i++) {      logLikelihood += n_i[i] * FastMath.log(n_i[i] / (double) n) // ni log ni/n          - n_i[i] * dim * .5 * MathUtil.LOGTWOPI // ni*d/2 log2pi          - n_i[i] * .5 * FastMath.log(d_i[i]) // ni/2 log sigma_i          - (n_i[i] - m) * .5; // (ni-m)/2    }    return logLikelihood;  }"}
{"id": "https://github.com/korpling/ANNIS/blob/152a2e34832e015f73ac8ce8a7d4c32641641324/annis-service/src/main/java/annis/administration/CorpusAdministration.java#L270-L324", "method_name": "new File(outDir, e.getName().replaceAll(\"\\\\/\", \"/\"))", "code": "  private List<File> unzipCorpus(File outDir, ZipFile zip)  {    List<File> rootDirs = new ArrayList<>();    Enumeration<? extends ZipEntry> zipEnum = zip.entries();    while (zipEnum.hasMoreElements())    {      ZipEntry e = zipEnum.nextElement();      File outFile = new File(outDir, e.getName().replaceAll(\"\\\\/\", \"/\"));      if (e.isDirectory())      {        if (!outFile.mkdirs())        {          log.warn(\"Could not create output directory \" + outFile.            getAbsolutePath());        }      } // end if directory      else      {        if (\"corpus.tab\".equals(outFile.getName()) || \"corpus.annis\".equals(          outFile.getName()))        {          rootDirs.add(outFile.getParentFile());        }        if (!outFile.getParentFile().isDirectory())        {          if (!outFile.getParentFile().mkdirs())          {            {              log.warn(                \"Could not create output directory for file \" + outFile.                getAbsolutePath());            }          }        }        try (FileOutputStream outStream = new FileOutputStream(outFile);)        {          ByteStreams.copy(zip.getInputStream(e), outStream);        }        catch (FileNotFoundException ex)        {          log.error(null, ex);        }        catch (IOException ex)        {          log.error(null, ex);        }      } // end else is file    } // end for each entry in zip file    return rootDirs;  }"}
{"id": "https://github.com/liquibase/liquibase/blob/86a3b30fa6821ac981056f252f918557f5ebcc60/liquibase-core/src/main/java/liquibase/integration/spring/SpringLiquibase.java#L153-L178", "method_name": "getDatabaseProductName", "code": "\tpublic String getDatabaseProductName() throws DatabaseException {\t\tConnection connection = null;        Database database = null;\t\tString name = \"unknown\";\t\ttry {\t\t\tconnection = getDataSource().getConnection();\t\t\tdatabase = DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(connection));\t\t\tname = database.getDatabaseProductName();\t\t} catch (SQLException e) {\t\t\tthrow new DatabaseException(e);\t\t} finally {            if (database != null) {                database.close();            } else if (connection != null) {\t\t\t\ttry {\t\t\t\t\tif (!connection.getAutoCommit()) {\t\t\t\t\t\tconnection.rollback();\t\t\t\t\t}\t\t\t\t\tconnection.close();                } catch (SQLException e) {\t\t\t\t\tlog.warning(LogType.LOG, \"problem closing connection\", e);\t\t\t\t}\t\t\t}\t\t}\t\treturn name;\t}"}
{"id": "https://github.com/santhosh-tekuri/jlibs/blob/59c28719f054123cf778278154e1b92e943ad232/core/src/main/java/jlibs/core/lang/ArrayUtil.java#L169-L178", "method_name": "[]", "code": "    public static <T> T[] filter(T array[], Filter<T> filter){        List<T> filteredList = new ArrayList<T>(array.length);        for(T element: array){            if(filter.select(element))                filteredList.add(element);        }        @SuppressWarnings(\"unchecked\")        T filteredArray[] = (T[])Array.newInstance(array.getClass().getComponentType(), filteredList.size());        return filteredList.toArray(filteredArray);    }"}
{"id": "https://github.com/nmorel/gwt-jackson/blob/3fdc4350a27a9b64fc437d5fe516bf9191b74824/gwt-jackson/src/main/java/com/github/nmorel/gwtjackson/client/JsonDeserializer.java#L39-L41", "method_name": "deserialize", "code": "    public T deserialize( JsonReader reader, JsonDeserializationContext ctx ) throws JsonDeserializationException {        return deserialize( reader, ctx, JsonDeserializerParameters.DEFAULT );    }"}
{"id": "https://github.com/zamrokk/fabric-sdk-java/blob/d4993ca602f72d412cd682e1b92e805e48b27afa/src/main/java/org/hyperledger/fabric/sdk/security/CryptoPrimitives.java#L226-L233", "method_name": "aesEncrypt", "code": "    private byte[] aesEncrypt(byte[] encryptionKey, byte[] iv, byte[] message)            throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,            InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {        Cipher cipher = Cipher.getInstance(AES_CFB_NO_PADDING_ALGORITHM);        cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(encryptionKey, SYMMETRIC_KEY_TYPE), new IvParameterSpec(iv));        return cipher.doFinal(message);    }"}
{"id": "https://github.com/maven-nar/nar-maven-plugin/blob/3c622e2024296b4203431bbae3bde290a01dac00/src/main/java/com/github/maven_nar/cpptasks/CUtil.java#L125-L140", "method_name": "getExecutableLocation", "code": "  public static File getExecutableLocation(final String exeName) {    //    // must add current working directory to the    // from of the path from the \"path\" environment variable    final File currentDir = new File(System.getProperty(\"user.dir\"));    if (new File(currentDir, exeName).exists()) {      return currentDir;    }    final File[] envPath = CUtil.getPathFromEnvironment(\"PATH\", File.pathSeparator);    for (final File element : envPath) {      if (new File(element, exeName).exists()) {        return element;      }    }    return null;  }"}
{"id": "https://github.com/julianhyde/sqlline/blob/7577f3ebaca0897a9ff01d1553d4576487e1d2c3/src/main/java/sqlline/Commands.java#L1121-L1173", "method_name": "connect", "code": "  public void connect(String line, DispatchCallback callback) throws Exception {    String example = \"Usage: connect <url> <username> <password> [driver]\"        + SqlLine.getSeparator();    String[] parts = sqlLine.split(line);    if (parts == null) {      callback.setToFailure();      return;    }    Properties connectProps = new Properties();    int offset = 1;    for (int i = 1; i < parts.length; i++) {      if (\"-p\".equals(parts[i])) {        if (parts.length - i > 2) {          connectProps.setProperty(parts[i + 1], parts[i + 2]);          i = i + 2;          offset += 3;        } else {          callback.setToFailure();          sqlLine.error(example);          return;        }      }    }    if (parts.length - offset < 2) {      callback.setToFailure();      sqlLine.error(example);      return;    }    String url = parts.length < offset + 1 ? null : parts[offset];    String user = parts.length < offset + 2 ? null : parts[offset + 1];    String pass = parts.length < offset + 3 ? null : parts[offset + 2];    String driver = parts.length < offset + 4 ? null : parts[offset + 3];    Properties props = new Properties();    if (url != null) {      props.setProperty(\"url\", url);    }    if (driver != null) {      props.setProperty(\"driver\", driver);    }    if (user != null) {      props.setProperty(\"user\", user);    }    if (pass != null) {      props.setProperty(\"password\", pass);    }    if (!connectProps.isEmpty()) {      props.put(CONNECT_PROPERTY, connectProps);    }    connect(props, callback);  }"}
{"id": "https://github.com/cvut/JCOP/blob/2ec18315a9a452e5f4e3d07cccfde0310adc465a/src/main/java/cz/cvut/felk/cig/jcop/result/render/CSVRender.java#L67-L143", "method_name": "new CsvWriter(this.outputStream, this.delimiter, this.charset)", "code": "    public void render(Result result) throws IOException {        CsvWriter csvWriter = new CsvWriter(this.outputStream, this.delimiter, this.charset);        // basics        csvWriter.write(\"Algorithm\");        csvWriter.write(\"Problem\");        // times        csvWriter.write(\"CPU Time [ms]\");        csvWriter.write(\"System Time [ms]\");        csvWriter.write(\"User Time [ms]\");        csvWriter.write(\"Clock Time [ms]\");        // optimize stats        csvWriter.write(\"Optimize counter\");        csvWriter.write(\"Optimize/sec (CPU) [1/s]\");        csvWriter.write(\"Optimize/sec (Clock) [1/s]\");        // solution        csvWriter.write(\"Exception\");        csvWriter.write(\"Best solution\");        csvWriter.write(\"Best solution (human readable)\");        csvWriter.write(\"Depth\");        csvWriter.write(\"Fitness\");        csvWriter.write(\"Operations\");        csvWriter.endRecord();        for (ResultEntry resultEntry : result.getResultEntries()) {            PreciseTimestamp start = resultEntry.getStartTimestamp();            PreciseTimestamp stop = resultEntry.getStopTimestamp();            // basics            csvWriter.write(resultEntry.getAlgorithm().toString());            csvWriter.write(resultEntry.getProblem().toString());            // times            csvWriter.write(Long.toString(start.getCpuTimeSpent(stop)));            csvWriter.write(Long.toString(start.getSystemTimeSpent(stop)));            csvWriter.write(Long.toString(start.getUserTimeSpent(stop)));            csvWriter.write(Long.toString(start.getClockTimeSpent(stop)));            // optimize stats            csvWriter.write(Long.toString(resultEntry.getOptimizeCounter()));            csvWriter.write(Long.toString(resultEntry.getOptimizeCounter() * 1000L / start.getCpuTimeSpent(stop)));            csvWriter.write(Long.toString(resultEntry.getOptimizeCounter() * 1000L / start.getClockTimeSpent(stop)));            csvWriter.write(resultEntry.getException() == null ? \"none\" : resultEntry.getException().getClass().toString());            // solution            if (resultEntry.getBestConfiguration() == null) {                csvWriter.write(\"none\");                csvWriter.write(\"-\");                csvWriter.write(\"-\");                csvWriter.write(\"-\");            } else {                StringBuffer stringBufferHumanReadable = new StringBuffer(\"[\");                StringBuffer stringBuffer = new StringBuffer(\"[\");                ConfigurationMap configurationMap = resultEntry.getProblem().getConfigurationMap();                for (int i = 0; i < resultEntry.getBestConfiguration().getDimension(); ++i) {                    stringBuffer.append(i == 0 ? \"\" : \", \").append(configurationMap.map(resultEntry.getBestConfiguration().valueAt(i), i));                    stringBufferHumanReadable.append(i == 0 ? \"\" : \", \").append(resultEntry.getBestConfiguration().valueAt(i));                }                stringBuffer.append(\"]\");                stringBufferHumanReadable.append(\"]\");                csvWriter.write(stringBuffer.toString());                csvWriter.write(stringBufferHumanReadable.toString());                csvWriter.write(Long.toString(resultEntry.getBestConfiguration().getOperationHistory().getCounter()));                csvWriter.write(Double.toString(resultEntry.getBestFitness()));                for (OperationHistory operationHistory : resultEntry.getBestConfiguration().getOperationHistory().getChronologicalList()) {                    csvWriter.write(operationHistory.getOperation().toString());                }            }            csvWriter.endRecord();        }        csvWriter.flush();    }"}
{"id": "https://github.com/jeremylong/DependencyCheck/blob/6cc7690ea12e4ca1454210ceaa2e9a5523f0926c/core/src/main/java/org/owasp/dependencycheck/data/update/nvd/NvdCveParser.java#L80-L110", "method_name": "gson.fromJson(reader, DefCveItem.class)", "code": "    public void parse(File file) throws UpdateException {        LOGGER.debug(\"Parsing \" + file.getName());        try (InputStream fin = new FileInputStream(file);                InputStream in = new GZIPInputStream(fin);                InputStreamReader isr = new InputStreamReader(in, UTF_8);                JsonReader reader = new JsonReader(isr)) {            final Gson gson = new GsonBuilder().create();            reader.beginObject();            while (reader.hasNext() && !JsonToken.BEGIN_ARRAY.equals(reader.peek())) {                reader.skipValue();            }            reader.beginArray();            while (reader.hasNext()) {                final DefCveItem cve = gson.fromJson(reader, DefCveItem.class);                //cve.getCve().getCVEDataMeta().getSTATE();                if (testCveCpeStartWithFilter(cve)) {                    cveDB.updateVulnerability(cve);                }            }        } catch (FileNotFoundException ex) {            LOGGER.error(ex.getMessage());            throw new UpdateException(\"Unable to find the NVD CPE file, `\" + file + \"`, to parse\", ex);        } catch (IOException ex) {            LOGGER.error(\"Error reading NVD JSON data: {}\", file);            LOGGER.debug(\"Error extracting the NVD JSON data from: \" + file.toString(), ex);            throw new UpdateException(\"Unable to find the NVD CPE file to parse\", ex);        }    }"}
{"id": "https://github.com/fhoeben/hsac-fitnesse-fixtures/blob/4e9018d7386a9aa65bfcbf07eb28ae064edd1732/src/main/java/nl/hsac/fitnesse/fixture/util/BsnUtil.java#L14-L50", "method_name": "generateBsn", "code": "    public String generateBsn() {        String Result1 = \"\";        int Nr9 = randomUtil.random(3);        int Nr8 = randomUtil.random(10);        int Nr7 = randomUtil.random(10);        int Nr6 = randomUtil.random(10);        int Nr5 = randomUtil.random(10);        int Nr4 = randomUtil.random(10);        int Nr3 = randomUtil.random(10);        int Nr2 = randomUtil.random(10);        int Nr1 = 0;        int SofiNr = 0;        if ((Nr9 == 0) && (Nr8 == 0) && (Nr7 == 0)) {            Nr8 = 1;        }        SofiNr = 9 * Nr9 + 8 * Nr8 + 7 * Nr7 + 6 * Nr6 + 5 * Nr5 + 4 * Nr4 + 3 * Nr3 + 2 * Nr2;        Nr1 = floor(SofiNr - (floor(SofiNr / 11)) * 11);        if (Nr1 > 9) {            if (Nr2 > 0) {                Nr2 -= 1;                Nr1 = 8;            } else {                Nr2 += 1;                Nr1 = 1;            }        }        Result1 += Nr9;        Result1 += Nr8;        Result1 += Nr7;        Result1 += Nr6;        Result1 += Nr5;        Result1 += Nr4;        Result1 += Nr3;        Result1 += Nr2;        Result1 += Nr1;        return Result1;    }"}
{"id": "https://github.com/groupon/robo-remote/blob/12d242faad50bf90f98657ca9a0c0c3ae1993f07/RoboRemoteClient/src/main/com/groupon/roboremote/roboremoteclient/Solo.java#L428-L430", "method_name": "isCheckBoxChecked", "code": "    public static boolean isCheckBoxChecked(String text) throws Exception {        return Client.getInstance().map(Constants.ROBOTIUM_SOLO, \"isCheckBoxChecked\", text).getBoolean(0);    }"}
{"id": "https://github.com/tkurz/sparql-mm/blob/6f2ca5fc28a7a91ec53250fe57c729744e61884b/src/main/java/com/github/tkurz/sparqlmm/doc/FunctionSet.java#L190-L230", "method_name": "false", "code": "    public void toHTML(File file) throws IOException {        PrintWriter out = new PrintWriter(file);        out.printf(\"<html><head><link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"%s\\\"></head><body>\\n\", STYLE_URL);        out.printf(\"<h1>%s</h1>%n\", TITLE);        out.println();        out.println(\"<p>\");        out.printf(\"The URI for this vocabulary is <code>%s</code>. \", Constants.NAMESPACE);        out.printf(\"When abbreviating terms the suggested prefix is <code>%s</code>. \", Constants.ABBREVIATION);        out.printf(\"Each function in this function set has a URI constructed by appending a term name to the vocabulary URI. For example <code>%s</code>. \", functions.get(0).uri.stringValue());        out.print(\"There are machine readable function description using <a href=\\\"http://www.ldodds.com/schemas/sparql-extension-description/\\\">SPARQL Extension Description Vocabulary]</a> in \");        out.printf(\"<a href=\\\"%s\\\">RDF/XML</a> and <a href=\\\"%s\\\">TURTLE</a>.\", LINK_XML, LINK_TURTLE);        out.println(\"</p>\");        for(FunctionDoc.Reference reference : FunctionDoc.Reference.values()) {            for (FunctionDoc.Type type : FunctionDoc.Type.values()) {                boolean show = false;                //test if it should be displayed                for (Function function : functions) {                    if (function.reference == reference && function.typeName.equals(type.getName()) && function.type.equals(type.getUri())) {                        show = true; break;                    }                }                if(!show) continue;                out.printf(\"<h2>%s %ss</h2>\", reference.getName(), type.getName());                out.println(\"<table>\");                out.println(\"<tr><th>Relation name</th><th>Description</th>\");                for (Function function : functions) {                    if (function.reference == reference && function.typeName.equals(type.getName()) && function.type.equals(type.getUri()))                        out.printf(\"<tr><td>%s:%s( %s )</td><td>%s</td>\\n\", Constants.ABBREVIATION, function.uri.stringValue().substring(Constants.NAMESPACE.length()), function.getPropertyString(\", \",\"<i>\",\"</i>\"), function.description);                }                out.println(\"</table>\");            }        }        out.flush();        out.close();    }"}
{"id": "https://github.com/stripe/stripe-java/blob/acfa8becef3e73bfe3e9d8880bea3f3f30dadeac/src/main/java/com/stripe/model/EventRequestDeserializer.java#L19-L36", "method_name": "new GsonBuilder()        .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)        .create()", "code": "  @Override  public EventRequest deserialize(JsonElement json, Type typeOfT,      JsonDeserializationContext context)      throws JsonParseException {    Gson gson = new GsonBuilder()        .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)        .create();    // API versions 2017-05-25 and earlier render `request` as a string    // instead of a JSON object    if (json.isJsonPrimitive()) {      EventRequest request = new EventRequest();      request.setId(json.getAsString());      return request;    } else {      return gson.fromJson(json, typeOfT);    }  }"}
{"id": "https://github.com/spring-projects/spring-android/blob/941296e152d49a40e0745a3e81628a974f72b7e4/spring-android-rest-template/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java#L52-L62", "method_name": "getHttpStatusCode", "code": "\tprivate HttpStatus getHttpStatusCode(ClientHttpResponse response) throws IOException {\t\tHttpStatus statusCode;\t\ttry {\t\t\tstatusCode = response.getStatusCode();\t\t}\t\tcatch (IllegalArgumentException ex) {\t\t\tthrow new UnknownHttpStatusCodeException(response.getRawStatusCode(),\t\t\t\t\tresponse.getStatusText(), response.getHeaders(), getResponseBody(response), getCharset(response));\t\t}\t\treturn statusCode;\t}"}
{"id": "https://github.com/spring-projects/spring-boot/blob/0b27f7c70e164b2b1a96477f1d9c1acba56790c1/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/info/GitProperties.java#L106-L118", "method_name": "coerceToEpoch", "code": "\tprivate static String coerceToEpoch(String s) {\t\tLong epoch = parseEpochSecond(s);\t\tif (epoch != null) {\t\t\treturn String.valueOf(epoch);\t\t}\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\t\ttry {\t\t\treturn String.valueOf(format.parse(s).getTime());\t\t}\t\tcatch (ParseException ex) {\t\t\treturn s;\t\t}\t}"}
{"id": "https://github.com/iovation/launchkey-java/blob/ceecc70b9b04af07ddc14c57d4bcc933a4e0379c/sdk/src/main/java/com/iovation/launchkey/sdk/transport/apachehttp/ApacheHttpTransport.java#L909-L919", "method_name": "InvalidCredentialsException", "code": "    private Date getCurrentDate()            throws MarshallingError, InvalidResponseException, CommunicationErrorException, CryptographyError,            InvalidCredentialsException {        if (serverTimeOffsetExpires == null || serverTimeOffsetExpires.before(new Date())) {            setServerTimeOffset();        }        Calendar calendar = Calendar.getInstance();        calendar.setTime(new Date());        calendar.add(Calendar.MILLISECOND, serverTimeOffset);        return calendar.getTime();    }"}
{"id": "https://github.com/apache/spark/blob/25ee0474f47d9c30d6f553a7892d9549f91071cf/sql/hive-thriftserver/src/main/java/org/apache/hive/service/cli/thrift/ThriftHttpServlet.java#L303-L308", "method_name": "getHttpOnlyCookieHeader", "code": "  private static String getHttpOnlyCookieHeader(Cookie cookie) {    NewCookie newCookie = new NewCookie(cookie.getName(), cookie.getValue(),      cookie.getPath(), cookie.getDomain(), cookie.getVersion(),      cookie.getComment(), cookie.getMaxAge(), cookie.getSecure());    return newCookie + \"; HttpOnly\";  }"}
{"id": "https://github.com/jpmml/jpmml-evaluator/blob/ac8a48775877b6fa9dbc5f259871f3278489cc61/pmml-evaluator/src/main/java/org/jpmml/evaluator/DistributionUtil.java#L37-L49", "method_name": "probability", "code": "\tstatic\tpublic double probability(ContinuousDistribution distribution, Number x){\t\tif(distribution instanceof GaussianDistribution){\t\t\treturn probability((GaussianDistribution)distribution, x);\t\t} else\t\tif(distribution instanceof PoissonDistribution){\t\t\treturn probability((PoissonDistribution)distribution, x);\t\t}\t\tthrow new UnsupportedElementException(distribution);\t}"}
{"id": "https://github.com/Graylog2/graylog2-server/blob/50b565dcead6e0a372236d5c2f8530dc5726fa9b/graylog2-server/src/main/java/org/graylog2/lookup/adapters/CSVFileDataAdapter.java#L119-L169", "method_name": "csvReader.readNext()", "code": "    private Map<String, String> parseCSVFile() throws IOException {        final InputStream inputStream = Files.newInputStream(Paths.get(config.path()));        final InputStreamReader fileReader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);        final ImmutableMap.Builder<String, String> newLookupBuilder = ImmutableMap.builder();        try (final CSVReader csvReader = new CSVReader(fileReader, config.separatorAsChar(), config.quotecharAsChar())) {            int line = 0;            int keyColumn = -1;            int valueColumn = -1;            while (true) {                final String[] next = csvReader.readNext();                if (next == null) {                    break;                }                line++;                if (line == 1) {                    // The first line in the CSV file provides the column names                    int col = 0;                    for (final String column : next) {                        if (!isNullOrEmpty(column)) {                            if (config.keyColumn().equals(column)) {                                keyColumn = col;                            }                            if (config.valueColumn().equals(column)) {                                valueColumn = col;                            }                        }                        col++;                    }                } else {                    // The other lines are supposed to be data entries                    if (keyColumn < 0 || valueColumn < 0) {                        throw new IllegalStateException(\"Couldn't detect column number for key or value - check CSV file format\");                    }                    if (config.isCaseInsensitiveLookup()) {                        newLookupBuilder.put(next[keyColumn].toLowerCase(Locale.ENGLISH), next[valueColumn]);                    } else {                        newLookupBuilder.put(next[keyColumn], next[valueColumn]);                    }                }            }        } catch (Exception e) {            LOG.error(\"Couldn't parse CSV file {} (settings separator=<{}> quotechar=<{}> key_column=<{}> value_column=<{}>)\", config.path(),                    config.separator(), config.quotechar(), config.keyColumn(), config.valueColumn(), e);            setError(e);        }        return newLookupBuilder.build();    }"}
{"id": "https://github.com/Azure/autorest-clientruntime-for-java/blob/04621e07dbb0456dd5459dd641f06a9fd4f3abad/azure-arm-client-runtime/src/main/java/com/microsoft/azure/arm/utils/RXMapper.java#L28-L35", "method_name": "map", "code": "    public static <T> Observable<T> map(Observable<?> fromObservable, final T toValue) {        if (fromObservable != null) {            return fromObservable.subscribeOn(Schedulers.io())                    .map(new RXMapper<T>(toValue));        } else {            return Observable.empty();        }    }"}
{"id": "https://github.com/venkatramanm/common/blob/b89583efd674f73cf4c04927300a9ea6e49a3e9f/src/main/java/com/venky/xml/XMLElement.java#L88-L94", "method_name": "getParentElement", "code": "    public XMLElement getParentElement() {\r        XMLNode parent = getParentNode();\r        if (parent != null && parent.getInner().getNodeType() == Node.ELEMENT_NODE) {\r            return (XMLElement) parent;\r        }\r        return null;\r    }\r"}
{"id": "https://github.com/RobotiumTech/robotium/blob/75e567c38f26a6a87dc8bef90b3886a20e28d291/robotium-solo/src/main/java/com/robotium/solo/Solo.java#L3440-L3447", "method_name": "isCheckBoxChecked", "code": "\tpublic boolean isCheckBoxChecked(String text)\t{\t\tif(config.commandLogging){\t\t\tLog.d(config.commandLoggingTag, \"isCheckBoxChecked(\\\"\"+text+\"\\\")\");\t\t}\t\t\t\treturn checker.isButtonChecked(CheckBox.class, text);\t}"}
{"id": "https://github.com/raydac/netbeans-mmd-plugin/blob/997493d23556a25354372b6419a64a0fbd0ac6ba/mind-map/mind-map-swing-panel/src/main/java/com/igormaznitsa/mindmap/swing/panel/MindMapPanel.java#L2647-L2668", "method_name": "copyTopicsToClipboard", "code": "  public boolean copyTopicsToClipboard(final boolean cut, @Nonnull @MustNotContainNull final Topic... topics) {    boolean result = false;    if (this.lockIfNotDisposed()) {      try {        if (topics.length > 0) {          final Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();          clipboard.setContents(new MMDTopicsTransferable(topics), this);          if (cut) {            deleteTopics(true, ensureNoRootInArray(topics));          }          result = true;        }      } finally {        this.unlock();      }    }    return result;  }"}
{"id": "https://github.com/sporniket/core/blob/3480ebd72a07422fcc09971be2607ee25efb2c26/sporniket-core-io/src/main/java/com/sporniket/libre/io/TextLoader.java#L188-L205", "method_name": "new char[getBufferSize()]", "code": "\tpublic StringBuffer append(Reader source, StringBuffer buffer) throws IOException\t{\t\tBufferedReader _bufferedReader = new BufferedReader(source);\t\tchar[] _buffer = new char[getBufferSize()]; // load by chunk of 4 ko\t\ttry\t\t{\t\t\tfor (int _countReadChars = 0; _countReadChars >= 0;)\t\t\t{\t\t\t\tbuffer.append(_buffer, 0, _countReadChars);\t\t\t\t_countReadChars = _bufferedReader.read(_buffer);\t\t\t}\t\t}\t\tfinally\t\t{\t\t\t_bufferedReader.close();\t\t}\t\treturn buffer;\t}"}
{"id": "https://github.com/undera/perfmon-agent/blob/535c145e588d59acc88684115485d9170c6260fe/src/kg/apc/perfmon/metrics/TailMetric.java#L32-L43", "method_name": "getValue", "code": "    public void getValue(StringBuffer res) throws SigarException {        String line, lastLine = \"\";        try {            while ((line = getReader().readLine()) != null) {                log.debug(\"Read line: \" + line);                lastLine = line;            }            res.append(lastLine);        } catch (IOException e) {            log.error(\"Cannot read lines from file: \" + filename);        }    }"}
{"id": "https://github.com/forge/core/blob/e140eb03bbe2b3409478ad70c86c3edbef6d9a0c/parser-java/api/src/main/java/org/jboss/forge/addon/parser/java/utils/JLSValidator.java#L209-L212", "method_name": "isReservedWord", "code": "   public static boolean isReservedWord(String word)   {      return JAVA_KEYWORDS.contains(word) || BOOLEAN_LITERALS.contains(word) || NULL_LITERAL.equals(word);   }"}
{"id": "https://github.com/Pi4J/pi4j/blob/03cacc62223cc59b3118bfcefadabab979fd84c7/pi4j-core/src/main/java/com/pi4j/io/serial/impl/SerialImpl.java#L722-L731", "method_name": "write", "code": "    @Override    public void write(byte[] data, int offset, int length) throws IllegalStateException, IOException{        // validate state        if (isClosed()) {            throw new IllegalStateException(\"Serial connection is not open; cannot 'write()'.\");        }        // write serial data to transmit buffer        com.pi4j.jni.Serial.write(fileDescriptor, data, offset, length);    }"}
{"id": "https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/completion/CompletionContext.java#L442-L462", "method_name": "parserList.get(index)", "code": "    private int findToken(String token, int integer, int location) {        int index = location - 1;        while (index >= 0) {            Object o = parserList.get(index);            if (o instanceof DroolsToken) {                if (\"(\".equals(((DroolsToken) o).getText())) {                \tif (getNextInteger(index) == integer){                \t\treturn index;                \t}//                    o = parserList.get(index + 1);//                    if (o instanceof Integer) {//                        if (integer == (Integer) o) {//                            return index;//                        }//                    }                }            }            index--;        }        return -1;    }"}
{"id": "https://github.com/GCRC/nunaliit/blob/0b4abfc64eef2eb8b94f852ce697de2e851d8e67/nunaliit2-json/src/main/java/ca/carleton/gcrc/json/JSONPrettyPrinter.java#L44-L95", "method_name": "jsonObj.keys()", "code": "\tpublic void prettyPrintObject(JSONObject jsonObj, int indentLevel) throws Exception {\t\twriter.write(\"{\");\t\t\t\tIterator<?> it = jsonObj.keys();\t\tif( it.hasNext() ) {\t\t\t// Accumulate keys\t\t\tList<String> keys = new Vector<String>();\t\t\twhile( it.hasNext() ){\t\t\t\tObject key = it.next();\t\t\t\tif( key instanceof String ){\t\t\t\t\tkeys.add( (String)key );\t\t\t\t}\t\t\t}\t\t\t\t\t\t// Sort keys\t\t\tCollections.sort(keys);\t\t\t\t\t\t// Print out each key\t\t\tboolean first = true;\t\t\tfor(String key : keys){\t\t\t\tObject value = jsonObj.get(key);\t\t\t\t\t\t\t\t// Print indentation\t\t\t\twriter.write(\"\\n\");\t\t\t\tfor(int i=0,e=indentLevel+1;i<e;++i){\t\t\t\t\twriter.write(tab);\t\t\t\t}\t\t\t\t\t\t\t\t// Print comma, if needed\t\t\t\tif( first ) {\t\t\t\t\tfirst = false;\t\t\t\t} else {\t\t\t\t\twriter.write(\",\");\t\t\t\t}\t\t\t\t\t\t\t\t// Print key\t\t\t\twriter.write(JSONObject.quote(key));\t\t\t\twriter.write(\":\");\t\t\t\t\t\t\t\t// Print value\t\t\t\tprettyPrint(value, indentLevel+1);\t\t\t}\t\t\t// Print indentation\t\t\twriter.write(\"\\n\");\t\t\tfor(int i=0,e=indentLevel;i<e;++i){\t\t\t\twriter.write(tab);\t\t\t}\t\t}\t\twriter.write(\"}\");\t}"}
{"id": "https://github.com/nemerosa/ontrack/blob/37b0874cbf387b58aba95cd3c1bc3b15e11bc913/ontrack-client/src/main/java/net/nemerosa/ontrack/client/JsonClientImpl.java#L52-L60", "method_name": "post", "code": "    @Override    public JsonNode post(HttpEntity data, String path, Object... parameters) {        return httpClient.post(                this::toJson,                data,                path,                parameters        );    }"}
{"id": "https://github.com/datumbox/datumbox-framework/blob/909dff0476e80834f05ecdde0624dd2390e9b0ca/datumbox-framework-core/src/main/java/com/datumbox/framework/core/mathematics/discrete/Combinatorics.java#L39-L59", "method_name": "permutations", "code": "    public static <T> Collection<List<T>> permutations(Collection<T> elements) {        Collection<List<T>> result = new ArrayList<>();        if (elements.isEmpty()) {            result.add(new LinkedList<>());            return result;        }        List<T> rest = new LinkedList<>(elements);        T head = rest.remove(0);        for (List<T> permutations : permutations(rest)) {            List<List<T>> subLists = new ArrayList<>();            for (int i = 0; i <= permutations.size(); i++) {                List<T> subList = new ArrayList<>();                subList.addAll(permutations);                subList.add(i, head);                subLists.add(subList);            }            result.addAll(subLists);        }        return result;    }"}
{"id": "https://github.com/eclipse/xtext-core/blob/bac941cb75cb24706519845ec174cfef874d7557/org.eclipse.xtext.xtext.wizard/src/org/eclipse/xtext/xtext/wizard/ecore2xtext/UniqueNameUtil.java#L44-L49", "method_name": "uniqueImplName", "code": "\tpublic static String uniqueImplName(ENamedElement element) {\t\tString name = element.getName();\t\tif (name == null)\t\t\tname = element.eClass().getName();\t\treturn uniqueName(element, name + IMPL_NAME_SUFFIX, element2uniqueImplName);\t}"}
{"id": "https://github.com/Coveros/selenified/blob/396cc1f010dd69eed33cc5061c41253de246a4cd/src/main/java/com/coveros/selenified/utilities/Reporter.java#L249-L270", "method_name": "new StringBuilder()", "code": "    private void replaceInFile(String oldText, String newText) {        StringBuilder oldContent = new StringBuilder();        try (FileReader fr = new FileReader(file); BufferedReader reader = new BufferedReader(fr)) {            String line;            while ((line = reader.readLine()) != null) {                oldContent.append(line);                oldContent.append(\"\\r\\n\");            }        } catch (IOException e) {            log.error(e);        }        // replace a word in a file        String newContent = oldContent.toString().replaceAll(oldText, newText);        try (FileWriter writer = new FileWriter(file)) {            writer.write(newContent);        } catch (IOException ioe) {            log.error(ioe);        }    }"}
{"id": "https://github.com/enasequence/sequencetools/blob/4127f5e1a17540239f5810136153fbd6737fa262/src/main/java/uk/ac/ebi/embl/api/validation/helper/EntryUtils.java#L174-L186", "method_name": "getDay", "code": "\tpublic static Date getDay(String string) {\t\tif (string == null) {\t\t\treturn null;\t\t}\t\tDate date = null;\t\ttry {\t\t\tdate = (new SimpleDateFormat(\"dd-MMM-yyyy\").parse(string));\t\t}\t\tcatch (ParseException ex) {\t\t\treturn null;\t\t}\t\treturn date;\t}"}
{"id": "https://github.com/Crab2died/Excel4J/blob/2ab0a3b8226a69ff868c3ead6e724f3a774f5f77/src/main/java/com/github/crab2died/ExcelUtils.java#L1287-L1294", "method_name": "exportObjects2Excel", "code": "    public void exportObjects2Excel(List<?> data, List<String> header, String sheetName,                                    boolean isXSSF, OutputStream os)            throws IOException {        try (Workbook workbook = exportExcelBySimpleHandler(data, header, sheetName, isXSSF)) {            workbook.write(os);        }    }"}
{"id": "https://github.com/zxing/zxing/blob/653ac2a3beb11481eff82e7d5f2bab8a745f7fac/zxing.appspot.com/src/main/java/com/google/zxing/web/generator/client/GeoLocationGenerator.java#L95-L105", "method_name": "getLatitudeField", "code": "  private String getLatitudeField() throws GeneratorException {    String lat = latitude.getText();    if (!lat.matches(LAT_REGEXP)) {      throw new GeneratorException(\"Latitude is not a correct value.\");    }    double val = Double.parseDouble(lat);    if (val < -90.0 || val > 90.0) {      throw new GeneratorException(\"Latitude must be in [-90:90]\");    }    return lat;  }"}
{"id": "https://github.com/jeremylong/DependencyCheck/blob/6cc7690ea12e4ca1454210ceaa2e9a5523f0926c/cli/src/main/java/org/owasp/dependencycheck/CliParser.java#L98-L102", "method_name": "parseArgs", "code": "    private CommandLine parseArgs(String[] args) throws ParseException {        final CommandLineParser parser = new DefaultParser();        final Options options = createCommandLineOptions();        return parser.parse(options, args);    }"}
{"id": "https://github.com/sinofool/alipay-java-sdk/blob/b8bd07915386c8abd005f3d647b82100d966070c/demo/src/main/java/net/sinofool/alipay/demo/DemoAlipayHttpClient.java#L32-L49", "method_name": "post", "code": "    @Override    public String post(String host, int port, String schema, String uri, String body) {        try {            HttpClient client = HttpClients.createDefault();            HttpPost post = new HttpPost(uri);            post.setHeader(\"Host\", host);            post.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");            post.setEntity(new StringEntity(body));            HttpResponse execute = client.execute(new HttpHost(host, port, schema), post);            return response(execute);        } catch (ClientProtocolException e) {            e.printStackTrace();            throw new RuntimeException(e);        } catch (IOException e) {            e.printStackTrace();            throw new RuntimeException(e);        }    }"}
{"id": "https://github.com/sualeh/magnetictrackparser/blob/1da8ff20ac6269b1d523875157278978ba71d260/src/main/java/us/fatehi/magnetictrack/bankcard/BaseTrackData.java#L39-L50", "method_name": "getGroup", "code": "  protected static String getGroup(final Matcher matcher, final int group)  {    final int groupCount = matcher.groupCount();    if (groupCount > group - 1)    {      return matcher.group(group);    }    else    {      return null;    }  }"}
{"id": "https://github.com/netheosgithub/pcs_api/blob/20691e52e144014f99ca75cb7dedc7ba0c18586c/java/src/main/java/net/netheos/pcsapi/providers/dropbox/Dropbox.java#L447-L470", "method_name": "jObj.getString( \"modified\" )", "code": "    private CFile parseCFile( JSONObject jObj )    {        CFile cfile;        if ( jObj.optBoolean( \"is_dir\", false ) ) {            cfile = new CFolder( new CPath( jObj.getString( \"path\" ) ) );        } else {            cfile = new CBlob( new CPath( jObj.getString( \"path\" ) ), jObj.getLong( \"bytes\" ), jObj.getString( \"mime_type\" ) );            String stringDate = jObj.getString( \"modified\" );            try {                // stringDate looks like: \"Fri, 07 Mar 2014 17:47:55 +0000\"                SimpleDateFormat sdf = new SimpleDateFormat( \"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.US );                Date modified = sdf.parse( stringDate );                cfile.setModificationDate( modified );            } catch ( ParseException ex ) {                throw new CStorageException( \"Can't parse date modified: \" + stringDate + \" (\" + ex.getMessage() + \")\", ex );            }        }        return cfile;    }"}
{"id": "https://github.com/ow2-chameleon/fuchsia/blob/4e9318eadbdeb945e529789f573b45386e619bed/bases/knx/calimero/src/main/java/tuwien/auto/calimero/tools/IPConfig.java#L248-L285", "method_name": "readConfig", "code": "\tprivate void readConfig() throws KNXException\r\t{\r\t\tfinal List config = new ArrayList();\r\t\tint pid = PropertyClient.PID.KNX_INDIVIDUAL_ADDRESS;\r\t\tbyte[] data = query(pid);\r\t\tif (data != null)\r\t\t\tadd(config, pid, \"KNXnet/IP server\", new IndividualAddress(data).toString());\r\t\tadd(config, PropertyClient.PID.FRIENDLY_NAME, \"name\", queryFriendlyName());\r\r\t\tpid = PropertyClient.PID.IP_CAPABILITIES;\r\t\tif ((data = query(pid)) != null)\r\t\t\tadd(config, pid, \"IP address assignment available\",\r\t\t\t\tgetIPAssignment(new byte[] { (byte) (data[0] << 1 | 0x01) }));\r\r\t\tpid = PropertyClient.PID.IP_ASSIGNMENT_METHOD;\r\t\tif ((data = query(pid)) != null)\r\t\t\tadd(config, pid, \"IP address assignment enabled\", getIPAssignment(data));\r\r\t\tpid = PropertyClient.PID.CURRENT_IP_ASSIGNMENT_METHOD;\r\t\tif ((data = query(pid)) != null)\r\t\t\tadd(config, pid, \"IP address assignment current\", getIPAssignment(data));\r\r\t\tpid = PropertyClient.PID.KNXNETIP_ROUTING_CAPABILITIES;\r\t\tif ((data = query(pid)) != null)\r\t\t\tadd(config, pid, \"routing capabilities\", getRoutingCaps(data));\r\r\t\taddIP(config, PropertyClient.PID.IP_ADDRESS, \"IP address configured\");\r\t\taddIP(config, PropertyClient.PID.CURRENT_IP_ADDRESS, \"IP address current\");\r\t\taddIP(config, PropertyClient.PID.SUBNET_MASK, \"subnet mask configured\");\r\t\taddIP(config, PropertyClient.PID.CURRENT_SUBNET_MASK, \"subnet mask  current\");\r\t\taddIP(config, PropertyClient.PID.DEFAULT_GATEWAY, \"default gateway configured\");\r\t\taddIP(config, PropertyClient.PID.CURRENT_DEFAULT_GATEWAY,\r\t\t\t\"default gateway current\");\r\t\taddIP(config, PropertyClient.PID.DHCP_BOOTP_SERVER, \"DHCP/BootP server\");\r\t\taddIP(config, PropertyClient.PID.ROUTING_MULTICAST_ADDRESS, \"routing multicast\");\r\r\t\treceivedConfig(config);\r\t}\r"}
{"id": "https://github.com/h2oai/h2o-2/blob/be350f3f2c2fb6f135cc07c41f83fd0e4f521ac1/src/main/java/water/api/Models.java#L355-L365", "method_name": "summarizeNBModel", "code": "  private static void summarizeNBModel(ModelSummary summary, hex.nb.NBModel model) {    // add generic fields such as column names    summarizeModelCommonFields(summary, model);    summary.model_algorithm = \"Naive Bayes\";    JsonObject all_params = (model.get_params()).toJSON();    summary.critical_parameters = whitelistJsonObject(all_params, NB_critical_params);    summary.secondary_parameters = whitelistJsonObject(all_params, NB_secondary_params);    summary.expert_parameters = whitelistJsonObject(all_params, NB_expert_params);  }"}
{"id": "https://github.com/reinert/requestor/blob/40163a75cd17815d5089935d0dd97b8d652ad6d4/requestor/core/requestor-api/src/main/java/io/reinert/requestor/uri/UriParser.java#L173-L190", "method_name": "parseQuery", "code": "    private void parseQuery(String query) {        // throw out the funky business - \"?\"[name\"=\"value\"&\"]+        query = query.replaceAll(\"/&+/g\", \"&\").replaceAll(\"/^\\\\?*&*|&+$/g\", \"\");        if (query.isEmpty())            return;        queryParams = GWT.create(Buckets.class);        String[] p, pairs = query.split(\"&\");        String name, value;        for (final String pair : pairs) {            p = pair.split(\"=\");            name = urlCodec.decodeQueryString(p[0]);            // no \"=\" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters            value = p.length > 1 && !p[1].isEmpty() ? urlCodec.decodeQueryString(p[1]) : null;            queryParams.add(name, value);        }    }"}
{"id": "https://github.com/zvoykish/restdl/blob/3323c3143fe99f54f731860177f5d482fc1b8c0e/restdl-core/src/main/java/com/zvoykish/restdl/objects/TypedObjectFasterXmlDeserializer.java#L25-L36", "method_name": "deserialize", "code": "    @Override    public TypedObject deserialize(JsonParser jp, DeserializationContext ctxt)            throws IOException    {        try {            JsonNode jsonNode = jp.readValueAsTree();            return deserializeObject(jsonNode);        }        catch (Exception e) {            throw new JsonMappingException(\"Invalid object class\", e);        }    }"}
{"id": "https://github.com/GCRC/nunaliit/blob/0b4abfc64eef2eb8b94f852ce697de2e851d8e67/nunaliit2-utils/src/main/java/ca/carleton/gcrc/utils/TextFileUtils.java#L193-L217", "method_name": "tokener.nextValue()", "code": "\tstatic public JSONObject readJsonObjectFile(File file) throws Exception {\t\ttry {\t\t\tJSONObject json = null;\t\t\t\t\t\tString jsonStr = TextFileUtils.readTextFile(file);\t\t\t\t\t\tJSONTokener tokener = new JSONTokener(jsonStr);\t\t\tObject o = tokener.nextValue();\t\t\tif( o instanceof JSONObject ){\t\t\t\tjson = (JSONObject)o;\t\t\t} else {\t\t\t\tthrow new Exception(\"Unexpected class: \"+o.getClass().getName());\t\t\t}\t\t\t\t\t\t// Check that file is empty\t\t\tif( tokener.more() ) {\t\t\t\tthrow new Exception(\"File contains more than the object\");\t\t\t}\t\t\t\t\t\treturn json;\t\t} catch (Exception e) {\t\t\tthrow new Exception(\"Error while parsing JSON Object file: \"+file);\t\t}\t}"}
{"id": "https://github.com/upwork/java-upwork/blob/342297161503a74e9e0bddbd381ab5eebf4dc454/src/com/Upwork/api/UpworkRestClient.java#L125-L159", "method_name": "doPostRequest", "code": "   \tprivate static JSONObject doPostRequest(HttpPost httpPost, HashMap<String, String> params) throws JSONException {    \tJSONObject json = null;        HttpClient postClient = HttpClientBuilder.create().build();        HttpResponse response;                try {            response = postClient.execute(httpPost);                        if(response.getStatusLine().getStatusCode() == 200) {                HttpEntity entity = response.getEntity();                                if (entity != null) {                    InputStream instream = entity.getContent();                      String result = convertStreamToString(instream);                    instream.close();                                        json = new JSONObject(result);                }            } else {            \tjson = UpworkRestClient.genError(response);            }        } catch (ClientProtocolException e) {            json = UpworkRestClient.genError(HTTP_RESPONSE_503, \"Exception: ClientProtocolException\");        } catch (IOException e) {            json = UpworkRestClient.genError(HTTP_RESPONSE_503, \"Exception: IOException\");        } catch (JSONException e) {            json = UpworkRestClient.genError(HTTP_RESPONSE_503, \"Exception: JSONException\");          } catch (Exception e) {            json = UpworkRestClient.genError(HTTP_RESPONSE_503, \"Exception: Exception \" + e.toString());        } finally {            httpPost.abort();        }                return json;    }"}
{"id": "https://github.com/webmetrics/browsermob-proxy/blob/a9252e62246ac33d55d51b993ba1159404e7d389/src/main/java/org/browsermob/proxy/http/BrowserMobHttpClient.java#L220-L227", "method_name": "createCookie", "code": "    public void createCookie(String name, String value, String domain, String path) {        BasicClientCookie cookie = new BasicClientCookie(name, value);        cookie.setDomain(domain);        if (path != null) {            cookie.setPath(path);        }        httpClient.getCookieStore().addCookie(cookie);    }"}
{"id": "https://github.com/spring-cloud/spring-cloud-sleuth/blob/f29c05fb8fba33e23aa21bb13aeb13ab8d27b485/spring-cloud-sleuth-core/src/main/java/org/springframework/cloud/sleuth/instrument/web/SleuthHttpServerParser.java#L62-L85", "method_name": "adapter.statusCode(res)", "code": "\t@Override\tpublic <Resp> void response(HttpAdapter<?, Resp> adapter, Resp res, Throwable error,\t\t\tSpanCustomizer customizer) {\t\tif (res == null) {\t\t\terror(null, error, customizer);\t\t\treturn;\t\t}\t\tInteger httpStatus = adapter.statusCode(res);\t\tif (httpStatus == null) {\t\t\terror(httpStatus, error, customizer);\t\t\treturn;\t\t}\t\tif (httpStatus == HttpServletResponse.SC_OK && error != null) {\t\t\t// Filter chain threw exception but the response status may not have been set\t\t\t// yet, so we have to guess.\t\t\tcustomizer.tag(STATUS_CODE_KEY,\t\t\t\t\tString.valueOf(HttpServletResponse.SC_INTERNAL_SERVER_ERROR));\t\t}\t\t// only tag valid http statuses\t\telse if (httpStatus >= 100 && (httpStatus < 200) || (httpStatus > 399)) {\t\t\tcustomizer.tag(STATUS_CODE_KEY, String.valueOf(httpStatus));\t\t}\t\terror(httpStatus, error, customizer);\t}"}
{"id": "https://github.com/thorntail/thorntail/blob/4a391b68ffae98c6e66d30a3bfb99dadc9509f14/thorntail-runner/src/main/java/org/wildfly/swarm/runner/Runner.java#L173-L180", "method_name": "javaCommand", "code": "    private static String javaCommand() {        Path javaBinPath = Paths.get(System.getProperty(\"java.home\"), \"bin\");        File javaExecutable = javaBinPath.resolve(\"java\").toFile();        if (!javaExecutable.exists()) {            javaExecutable = javaBinPath.resolve(\"java.exe\").toFile();        }        return javaExecutable.getAbsolutePath();    }"}
{"id": "https://github.com/intuit/QuickBooks-V3-Java-SDK/blob/59f988d0776d46620d0b34711c411b2b5b1da06b/payments-api/src/main/java/com/intuit/payment/util/JsonUtil.java#L84-L93", "method_name": "deserialize", "code": "\tpublic static Object deserialize(String json, TypeReference<?> typeReference) throws SerializationException {\t\ttry {\t\t\tlogger.debug(\"Json string to deserialize {} \", json);\t\t\treturn mapper.readValue(json, typeReference);\t\t} catch (IOException e) {\t\t\tlogger.error(\"SerializationException {}\", e.getMessage());\t\t\tSerializationException serializationException = new SerializationException(e);\t\t\tthrow serializationException;\t\t}\t}"}
{"id": "https://github.com/ukase/ukase/blob/30f69cd2f950e15308b19a0ba788eb309933a4f4/core/src/main/java/com/github/ukase/toolkit/ResourceProvider.java#L128-L132", "method_name": "filterKnownEntities", "code": "    private String filterKnownEntities(String html) {        return html.replace(ENTITY_QUOTE, SYMBOL_QUOTE)                .replace(ENTITY_EQUAL_, SYMBOL_EQUAL)                .replace(ENTITY_EQUAL, SYMBOL_EQUAL);    }"}
{"id": "https://github.com/forge/core/blob/e140eb03bbe2b3409478ad70c86c3edbef6d9a0c/resources/impl/src/main/java/org/jboss/forge/addon/resource/zip/ZipFileResourceImpl.java#L98-L109", "method_name": "extractTo", "code": "   @Override   public void extractTo(DirectoryResource directoryResource)   {      try      {         getZipFile().extractAll(directoryResource.getFullyQualifiedName());      }      catch (ZipException e)      {         throw new ResourceException(\"Error while unzipping files\", e);      }   }"}
{"id": "https://github.com/dreamhead/moco/blob/83b0fbb9c505e327de6720cff55e7b18078f2aa9/moco-runner/src/main/java/com/github/dreamhead/moco/bootstrap/parser/StartArgsParser.java#L24-L28", "method_name": "doParse", "code": "    private StartArgs doParse(final String[] args) throws ParseException {        CommandLineParser parser = new DefaultParser();        CommandLine cmd = parser.parse(options(), args);        return parseArgs(cmd);    }"}
{"id": "https://github.com/kuali/ojb-1.0.4/blob/9a544372f67ce965f662cdc71609dd03683c8f04/src/tools/org/apache/ojb/tools/mapping/reversedb/DBTable.java#L102-L130", "method_name": "null", "code": "  public String getFQTableName()\r  {\r    String strReturn = null;\r    // Are table names supported in table definitions?\r    if (aSchema.getDBCatalog().getDBMeta().getSupportsCatalogsInTableDefinitions ())\r    {\r      // Yes, include catalog name in fq table name\r      // Now check, where we have to specify the catalog\r      if (aSchema.getDBCatalog().getDBMeta().getIsCatalogAtStart ())\r      {\r        // At the beginning\r        strReturn = aSchema.getDBCatalog().getCatalogName() \r          + aSchema.getDBCatalog().getDBMeta().getCatalogSeparator ()\r          + aSchema.getSchemaName() + \".\" + this.getTableName();\r      }\r      else\r      {\r        // At the end\r        strReturn = aSchema.getSchemaName() + \".\" + this.getTableName()\r          + aSchema.getDBCatalog().getDBMeta().getCatalogSeparator ()\r          + aSchema.getDBCatalog().getCatalogName();\r      }\r    }\r    else\r    {\r      strReturn = aSchema.getSchemaName() + \".\" + this.getTableName();\r    }\r    return strReturn;\r  }\r"}
{"id": "https://github.com/xwiki/xwiki-commons/blob/5374d8c6d966588c1eac7392c83da610dfb9f129/xwiki-commons-core/xwiki-commons-crypto/xwiki-commons-crypto-pkix/src/main/java/org/xwiki/crypto/pkix/params/x509certificate/extension/X509IpAddress.java#L98-L108", "method_name": "getIpAddress", "code": "    public InetAddress getIpAddress() throws UnknownHostException    {        byte[] ip = this.ipAddress;        if (ip.length == 8 || ip.length == 32) {            ip = new byte[ip.length / 2];            System.arraycopy(this.ipAddress, 0, ip, 0, ip.length);        }        return InetAddress.getByAddress(ip);    }"}
{"id": "https://github.com/mkolisnyk/cucumber-reports/blob/9c9a32f15f0bf1eb1d3d181a11bae9c5eec84a8e/cucumber-report-generator/src/main/java/com/github/mkolisnyk/cucumber/reporting/utils/helpers/StringConversionUtils.java#L45-L58", "method_name": "replaceHtmlEntitiesWithCodes", "code": "    public static String replaceHtmlEntitiesWithCodes(String input) throws IOException {        String output = input;        Map<String, String> entitiesMap = new HashMap<String, String>();        InputStream is = StringConversionUtils.class.getResourceAsStream(\"/html_entities_map.txt\");        String[] result = IOUtils.toString(is).split(\"\\n\");        is.close();        for (String line : result) {            entitiesMap.put(line.split(\"(\\\\s+)\")[0], line.split(\"(\\\\s+)\")[1]);        }        for (Entry<String, String> entry : entitiesMap.entrySet()) {            output = output.replace(entry.getKey(), entry.getValue());        }        return output;    }"}
{"id": "https://github.com/haifengl/smile/blob/e27e43e90fbaacce3f99d30120cf9dd6a764c33d/plot/src/main/java/smile/plot/PlotCanvas.java#L1613-L1628", "method_name": "points", "code": "    public ScatterPlot points(String id, double[][] data, Color color) {        if (data[0].length != base.dimension) {            throw new IllegalArgumentException(\"Invalid data dimension: \" + data[0].length);        }        double[] lowerBound = Math.colMin(data);        double[] upperBound = Math.colMax(data);        extendBound(lowerBound, upperBound);        ScatterPlot plot = new ScatterPlot(data);        plot.setID(id);        plot.setColor(color);        add(plot);        return plot;    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.security.fat.common/src/com/ibm/ws/security/fat/common/utils/CommonIOUtils.java#L46-L104", "method_name": "replaceStringsInFile", "code": " public boolean replaceStringsInFile(String filePath, Map<String, String> replaceValues, String outputFilePath) {        String method = \"replaceStringsInFile\";        if (filePath == null || filePath.isEmpty()) {            Log.info(c, method, \"No file path provided\");            return false;        }        try {            Log.info(c, method, \"Source file name: \" + filePath);            File inp = new File(filePath);            InputStreamReader inputStream = new InputStreamReader(new FileInputStream(inp));            BufferedReader dataStream = new BufferedReader(inputStream);            Vector<String> vec = new Vector<String>(200, 200);            String currentLine = null;            boolean changeMade = false;            while ((currentLine = dataStream.readLine()) != null) {                for (String key : replaceValues.keySet()) {                    String origLine = currentLine;                    String replaceVal = replaceValues.get(key);                    currentLine = currentLine.replace(key, replaceVal);                    if (!origLine.equals(currentLine)) {                        changeMade = true;                        // comment out for now to reduce size of output.txt                        //                        Log.info(c, method, \"origStr: [\" + key + \"], newStr: [\" + replaceVal + \"]\");                        //                        Log.info(c, method, \"Before : \" + origLine);                        //                        Log.info(c, method, \"After  : \" + currentLine);                    }                }                vec.addElement(currentLine);            }            dataStream.close();            if (changeMade) {                if (outputFilePath == null || outputFilePath.isEmpty()) {                    Log.info(c, method, \"Null or empty output file path provided; will write changes to original file\");                    outputFilePath = filePath;                }                Log.info(c, method, \"Change detected; writing changes to file: \" + outputFilePath);                OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(outputFilePath));                PrintWriter ps = new PrintWriter(osw, true);                int totalLines = vec.size();                for (int j = 0; j < totalLines; j++) {                    currentLine = vec.elementAt(j);                    ps.println(currentLine);                }                ps.close();            } else {                Log.info(c, method, \"No changes detected - file was not written!\");            }        } catch (Exception e) {            Log.error(c, method, e);            return false;        }        return true;    }"}
{"id": "https://github.com/overturetool/overture/blob/83175dc6c24fa171cde4fcf61ecb648eba3bdbc1/core/codegen/platform/src/main/java/org/overture/codegen/utils/GeneralCodeGenUtils.java#L373-L377", "method_name": "replaceInFile", "code": "\tpublic static void replaceInFile(File file, String regex,\t\t\tString replacement)\t{\t\treplaceInFile(file.getAbsolutePath(), regex, replacement);\t}"}
{"id": "https://github.com/zaproxy/zaproxy/blob/0cbe5121f2ae1ecca222513d182759210c569bec/src/org/zaproxy/zap/utils/HirshbergMatcher.java#L110-L113", "method_name": "reverseString", "code": "    private static String reverseString(String in) {        StringBuilder out = new StringBuilder(in).reverse();        return out.toString();    }"}
{"id": "https://github.com/OWASP/owasp-java-encoder/blob/bc9a85723f3c1b4819d9aa8aa1b539787128e4ea/core/src/main/java/org/owasp/encoder/Encode.java#L439-L443", "method_name": "forHtmlUnquotedAttribute", "code": "    public static void forHtmlUnquotedAttribute(Writer out, String input)        throws IOException    {        encode(Encoders.HTML_UNQUOTED_ATTRIBUTE_ENCODER, out, input);    }"}
{"id": "https://github.com/jenkinsci/jenkins/blob/44c4d3989232082c254d27ae360aa810669f44b7/core/src/main/java/jenkins/security/stapler/StaticRoutingDecisionProvider.java#L190-L206", "method_name": "save", "code": "    public synchronized void save() {        if (BulkChange.contains(this)) {            return;        }                File file = getConfigFile();        try {            List<String> allSignatures = new ArrayList<>(whitelistSignaturesFromUserControlledList);            blacklistSignaturesFromUserControlledList.stream()                    .map(signature -> \"!\" + signature)                    .forEach(allSignatures::add);                        FileUtils.writeLines(file, allSignatures);        } catch (IOException e) {            LOGGER.log(Level.WARNING, \"Failed to save \" + file.getAbsolutePath(), e);        }    }"}
{"id": "https://github.com/kevinsawicki/http-request/blob/2d62a3e9da726942a93cf16b6e91c0187e6c0136/lib/src/main/java/com/github/kevinsawicki/http/HttpRequest.java#L1264-L1268", "method_name": "head", "code": "  public static HttpRequest head(final CharSequence baseUrl,      final Map<?, ?> params, final boolean encode) {    String url = append(baseUrl, params);    return head(encode ? encode(url) : url);  }"}
{"id": "https://github.com/apache/flink/blob/b62db93bf63cb3bb34dd03d611a779d9e3fc61ac/flink-core/src/main/java/org/apache/flink/util/FileUtils.java#L436-L447", "method_name": "copy", "code": "\tpublic static void copy(Path sourcePath, Path targetPath, boolean executable) throws IOException {\t\t// we unwrap the file system to get raw streams without safety net\t\tFileSystem sFS = FileSystem.getUnguardedFileSystem(sourcePath.toUri());\t\tFileSystem tFS = FileSystem.getUnguardedFileSystem(targetPath.toUri());\t\tif (!tFS.exists(targetPath)) {\t\t\tif (sFS.getFileStatus(sourcePath).isDir()) {\t\t\t\tinternalCopyDirectory(sourcePath, targetPath, executable, sFS, tFS);\t\t\t} else {\t\t\t\tinternalCopyFile(sourcePath, targetPath, executable, sFS, tFS);\t\t\t}\t\t}\t}"}
{"id": "https://github.com/pressgang-ccms/PressGangCCMSCommonUtilities/blob/5ebf5ed30a94c34c33f4708caa04a8da99cbb15c/src/main/java/org/jboss/pressgang/ccms/utils/common/StringUtilities.java#L365-L379", "method_name": "similarLevenshtein", "code": "    public static double similarLevenshtein(String s1, String s2) {        if (s1.equals(s2)) {            return 1.0;        }        // Make sure s1 is the longest string        if (s1.length() < s2.length()) {            String swap = s1;            s1 = s2;            s2 = swap;        }        int bigLength = s1.length();        return (bigLength - StringUtils.getLevenshteinDistance(s2, s1)) / (double) bigLength;    }"}
{"id": "https://github.com/ZuInnoTe/hadoopoffice/blob/58fc9223ee290bcb14847aaaff3fadf39c465e46/fileformat/src/main/java/org/zuinnote/hadoop/office/format/mapreduce/ExcelCellFileInputFormat.java#L36-L41", "method_name": "createRecordReader", "code": "\t@Override\tpublic RecordReader<Text, SpreadSheetCellDAO> createRecordReader(InputSplit split, TaskAttemptContext ctx) {\t// send configuration option to ms excel. The format of the Excel (old vs new) is detected automaitcally\tctx.getConfiguration().set(HadoopOfficeReadConfiguration.CONF_MIMETYPE,\"ms-excel\");\treturn new ExcelCellRecordReader(ctx.getConfiguration(), (FileSplit) split);\t}"}
{"id": "https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/grid/gis/GridBoundariesExtractor.java#L119-L310", "method_name": "yAxis.getMinValue()", "code": "\tprivate void getLatLonsForPolygon( List<Double> polLons, List<Double> polLats){\t\tGridset gridset = gridDataset.getGridsets().get(0);\t\tGridCoordSystem coordSystem = gridset.getGeoCoordSystem();\t\tProjectionImpl fromProj = coordSystem.getProjection();\t\tcoordSystem.getLatLonBoundingBox();\t\tif( coordSystem.getYHorizAxis() instanceof CoordinateAxis1D &&  coordSystem.getXHorizAxis() instanceof CoordinateAxis1D ){\t\t\tCoordinateAxis1D xAxis = (CoordinateAxis1D) coordSystem.getXHorizAxis();\t\t\tCoordinateAxis1D yAxis  =(CoordinateAxis1D) coordSystem.getYHorizAxis();\t\t\t\t\t\tif(coordSystem.isGlobalLon()) {\t\t\t\tdouble maxy = yAxis.getMaxValue();\t\t\t\tdouble miny = yAxis.getMinValue();\t\t\t\tpolLons.add(0.0);\t\t\t\tpolLats.add(miny);\t\t\t\t\t\t\t\tpolLons.add(360.0);\t\t\t\tpolLats.add(miny);\t\t\t\t\t\t\t\tpolLons.add(360.0);\t\t\t\tpolLats.add(maxy);\t\t\t\t\t\t\t\tpolLons.add(0.0);\t\t\t\tpolLats.add(maxy);\t\t\t\t\t\t\t\tpolLons.add(0.0);\t\t\t\tpolLats.add(miny);\t\t\t\t\t\t\t\t\t\t\t\t//polygonWKT.append(\"-180 \"+ miny +\", 180 \"+ miny +\", 180 \"+ maxy +\", -180 \"+ maxy +\", -180 \"+ miny +\"] ))\");\t\t\t\t//polygonWKT.append(\"0 \"+ miny +\", 360 \"+ miny +\", 360 \"+ maxy +\", 0 \"+ maxy +\", 0 \"+ miny +\"] ))\");\t\t\t\t//return polygonWKT.toString();\t\t\t}else{\t\t\t\tdouble[] xCoords = xAxis.getCoordValues();\t\t\t\tdouble[] yCoords = yAxis.getCoordValues();\t\t\t\tLatLonPoint prev = fromProj.projToLatLon(xCoords[0], yCoords[0]);\t\t\t\t//Bottom edge\t\t\t\tfor( double x : xCoords  ){\t\t\t\t\tLatLonPoint point = fromProj.projToLatLon(x, yCoords[0]);\t\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff   )\t\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\tprev = point;\t\t\t\t}\t\t\t\t//Right edge\t\t\t\tfor( double y : yCoords  ){\t\t\t\t\tLatLonPoint point = fromProj.projToLatLon(xCoords[xCoords.length-1], y);\t\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff   )\t\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\t\t\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t}\t  \t\t\t\t//Top\t\t\t\tfor( int i = xCoords.length-1; i>=0; i--  ){\t\t\t\t\tLatLonPoint point = fromProj.projToLatLon(xCoords[i], yCoords[yCoords.length-1]);\t\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff   )\t\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t}\t  \t\t\t\t//Left edge\t\t\t\tfor( int i = yCoords.length-1; i>=0; i--  ){\t\t\t\t\tLatLonPoint point = fromProj.projToLatLon(xCoords[0], yCoords[i]);\t\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff   )\t\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\t\t\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\t\tpolLats.add(point.getLatitude() );\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t}\t\t\t}\t\t\t\t\t}else if( coordSystem.getYHorizAxis() instanceof CoordinateAxis2D &&  coordSystem.getXHorizAxis() instanceof CoordinateAxis2D ){\t\t\t//Get boundaries from 2d axis...\t\t\tCoordinateAxis2D xAxis = (CoordinateAxis2D) coordSystem.getXHorizAxis();\t\t\tCoordinateAxis2D yAxis  =(CoordinateAxis2D) coordSystem.getYHorizAxis();\t\t\tint[] xShape = xAxis.getShape();\t\t\tint[] yShape = yAxis.getShape();\t\t\tLatLonPoint prev = fromProj.projToLatLon(xAxis.getCoordValue(0, 0), yAxis.getCoordValue(0, 0));\t\t\tfor(int i = 0; i < xShape[0]; i++ ){\t\t\t\tdouble x = xAxis.getCoordValue(i, 0);\t\t\t\tdouble y = yAxis.getCoordValue(i, 0);\t\t\t\tLatLonPoint point = fromProj.projToLatLon(x, y);\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff )\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t}\t\t\tfor(int i = 0; i < xShape[1]; i++ ){\t\t\t\tdouble x = xAxis.getCoordValue(xShape[0]-1, i);\t\t\t\tdouble y = yAxis.getCoordValue(xShape[0]-1, i);\t\t\t\tLatLonPoint point = fromProj.projToLatLon(x, y);\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff )\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t\t\t\t\t}\t\t\tfor(int i = xShape[0]-1 ; i >= 0; i-- ){\t\t\t\tdouble x = xAxis.getCoordValue(i, xShape[1]-1);\t\t\t\tdouble y = yAxis.getCoordValue(i, xShape[1]-1);\t\t\t\tLatLonPoint point = fromProj.projToLatLon(x, y);\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff )\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t\t\t\t}\t\t\tfor(int i = xShape[1]-1 ; i >= 0; i-- ){\t\t\t\tdouble x = xAxis.getCoordValue(0, i);\t\t\t\tdouble y = yAxis.getCoordValue(0, i);\t\t\t\tLatLonPoint point = fromProj.projToLatLon(x, y);\t\t\t\tif( point.getLongitude() < minLon ) minLon = point.getLongitude();  \t\t\t\tif( point.getLongitude() > maxLon ) maxLon = point.getLongitude();\t\t\t\tif( Math.abs(prev.getLongitude() - point.getLongitude() ) > maxDiff )\t\t\t\t\tmaxDiff = Math.abs(prev.getLongitude() - point.getLongitude() );\t\t\t\tpolLons.add(point.getLongitude());\t\t\t\tpolLats.add(point.getLatitude());\t\t\t\t\t\t\t\t\tprev = point;\t\t\t\t\t\t\t}\t\t\t\t\t}\t}"}
{"id": "https://github.com/zeromq/jeromq/blob/8b4a2960b468d08b7aebb0d40bfb947e08fed040/src/main/java/org/zeromq/ZFrame.java#L309-L315", "method_name": "recv", "code": "    private byte[] recv(Socket socket, int flags)    {        Utils.checkArgument(socket != null, \"socket parameter must not be null\");        data = socket.recv(flags);        more = socket.hasReceiveMore();        return data;    }"}
{"id": "https://github.com/jeremiehuchet/acrachilisync/blob/4eadb0218623e77e0d92b5a08515eea2db51e988/acrachilisync-core/src/main/java/fr/dudie/acrachilisync/model/AcraReport.java#L95-L109", "method_name": "toDate", "code": "    private Date toDate(final String pStringDate) {        // weird manipulation to parse the date... remove ':' from the timezone        // before: 2011-07-12T22:42:40.000+02:00        // after: 2011-07-12T22:42:40.000+0200        final StringBuilder _date = new StringBuilder();        _date.append(pStringDate.substring(0, pStringDate.length() - 3));        _date.append(pStringDate.substring(pStringDate.length() - 2));        try {            return new SimpleDateFormat(RFC_339_DATE_FORMAT).parse(_date.toString());        } catch (final ParseException e) {            throw new IllegalArgumentException(                    \"The given spreadsheet ListEntry usercrashdate field value is malformed\", e);        }    }"}
{"id": "https://github.com/CenturyLinkCloud/mdw/blob/91167fe65a25a5d7022cdcf8b0fae8506f5b87ce/mdw-services/src/com/centurylink/mdw/service/data/process/ProcessCache.java#L117-L131", "method_name": "getProcessInstanceDefinition0", "code": "    private Process getProcessInstanceDefinition0(Long processId, Long processInstDefId) {        Process procdef = getProcess0(processId);        if (procdef != null) {            try {                Document instanceDoc = getWorkflowDao().getDocument(processInstDefId);                Process process = (Process) instanceDoc.getObject(Jsonable.class.getName(), null);                process.setName(procdef.getName());                process.setPackageName(procdef.getPackageName());                return process;            } catch (DataAccessException ex) {                logger.severeException(\"Error retrieving instance document\", ex);            }        }        return null;    }"}
{"id": "https://github.com/line/armeria/blob/67d29e019fd35a35f89c45cc8f9119ff9b12b44d/grpc/src/main/java/com/linecorp/armeria/internal/grpc/GrpcStatus.java#L157-L180", "method_name": "httpStatusToGrpcCode", "code": "    private static Status.Code httpStatusToGrpcCode(int httpStatusCode) {        if (httpStatusCode >= 100 && httpStatusCode < 200) {            // 1xx. These headers should have been ignored.            return Status.Code.INTERNAL;        }        switch (httpStatusCode) {            case HttpURLConnection.HTTP_BAD_REQUEST:  // 400            case 431: // Request Header Fields Too Large                return Status.Code.INTERNAL;            case HttpURLConnection.HTTP_UNAUTHORIZED:  // 401                return Status.Code.UNAUTHENTICATED;            case HttpURLConnection.HTTP_FORBIDDEN:  // 403                return Status.Code.PERMISSION_DENIED;            case HttpURLConnection.HTTP_NOT_FOUND:  // 404                return Status.Code.UNIMPLEMENTED;            case 429:  // Too Many Requests            case HttpURLConnection.HTTP_BAD_GATEWAY:  // 502            case HttpURLConnection.HTTP_UNAVAILABLE:  // 503            case HttpURLConnection.HTTP_GATEWAY_TIMEOUT:  // 504                return Status.Code.UNAVAILABLE;            default:                return Status.Code.UNKNOWN;        }    }"}
{"id": "https://github.com/molgenis/molgenis/blob/b4d0d6b27e6f6c8d7505a3863dc03b589601f987/molgenis-dataexplorer/src/main/java/org/molgenis/dataexplorer/download/DataExplorerDownloadHandler.java#L73-L82", "method_name": "writeToCsv", "code": "  public void writeToCsv(      DataRequest dataRequest, OutputStream outputStream, char separator, boolean noQuotes)      throws IOException {    try (CsvWriter csvWriter = new CsvWriter(outputStream, separator, noQuotes)) {      csvWriter.setEntityWriteMode(getEntityWriteMode(dataRequest.getEntityValues()));      String entityTypeId = dataRequest.getEntityName();      writeCsvHeaders(dataRequest, csvWriter);      csvWriter.add(dataService.findAll(entityTypeId, dataRequest.getQuery()));    }  }"}
{"id": "https://github.com/fozziethebeat/S-Space/blob/a608102737dfd3d59038a9ead33fe60356bc6029/src/main/java/edu/ucla/sspace/index/RandomIndexVectorGenerator.java#L170-L212", "method_name": "new HashSet<Integer>()", "code": "    public TernaryVector generate() {        HashSet<Integer> pos = new HashSet<Integer>();        HashSet<Integer> neg = new HashSet<Integer>();                // Randomly decide how many bits to set in the index vector based on the        // variance.        int bitsToSet = numVectorValues +            (int)(RANDOM.nextDouble() * variance *                  ((RANDOM.nextDouble() > .5) ? 1 : -1));        for (int i = 0; i < bitsToSet; ++i) {            boolean picked = false;            // loop to ensure we actually pick the full number of bits            while (!picked) {                // pick some random index                int index = RANDOM.nextInt(indexVectorLength);                                    // check that we haven't already added this index                if (pos.contains(index) || neg.contains(index))                    continue;                                    // decide positive or negative                ((RANDOM.nextDouble() > .5) ? pos : neg).add(index);                picked = true;            }        }                    int[] positive = new int[pos.size()];        int[] negative = new int[neg.size()];        Iterator<Integer> it = pos.iterator();        for (int i = 0; i < positive.length; ++i)             positive[i] = it.next();        it = neg.iterator();        for (int i = 0; i < negative.length; ++i)             negative[i] = it.next();                        // sort so we can use a binary search in getValue()        Arrays.sort(positive);        Arrays.sort(negative);        return new TernaryVector(indexVectorLength, positive, negative);    }"}
{"id": "https://github.com/BorderTech/wcomponents/blob/d1a2b2243270067db030feb36ca74255aaa94436/wcomponents-examples/src/main/java/com/github/bordertech/wcomponents/examples/theme/WHeadingExample.java#L178-L181", "method_name": "makeHeadingLabel", "code": "\tprivate WDecoratedLabel makeHeadingLabel(final String text, final String statusText) {\t\treturn new WDecoratedLabel(new WImage(\"/image/information.png\", \"Informative heading\"),\t\t\t\tnew WText(text), new WStyledText(statusText, WStyledText.Type.EMPHASISED));\t}"}
{"id": "https://github.com/bmwcarit/joynr/blob/b7a92bad1cf2f093de080facd2c803560f4c6c26/java/core/clustercontroller/src/main/java/io/joynr/messaging/http/UrlResolver.java#L83-L97", "method_name": "encodeSendUrl", "code": "    private String encodeSendUrl(String encodedChannelUrl) {        if (Utilities.isSessionEncodedInUrl(encodedChannelUrl, httpConstants.getHTTP_SESSION_ID_NAME())) {            String channelUrlWithoutSessionId = Utilities.getUrlWithoutSessionId(encodedChannelUrl,                                                                                 httpConstants.getHTTP_SESSION_ID_NAME());            String sessionId = Utilities.getSessionId(encodedChannelUrl, httpConstants.getHTTP_SESSION_ID_NAME());            return Utilities.getSessionEncodedUrl(channelUrlWithoutSessionId + \"message/\",                                                  httpConstants.getHTTP_SESSION_ID_NAME(),                                                  sessionId);        } else {            return encodedChannelUrl + \"message/\";        }    }"}
{"id": "https://github.com/willowtreeapps/Hyperion-Android/blob/1910f53869a53f1395ba90588a0b4db7afdec79c/hyperion-shared-preferences/src/main/java/com/willowtreeapps/hyperion/sharedpreferences/detail/SharedPreferencesDetailAdapter.java#L133-L137", "method_name": "getKeysSorted", "code": "    private List<String> getKeysSorted() {        List<String> sortedList = new ArrayList<>(getKeys());        Collections.sort(sortedList);        return sortedList;    }"}
{"id": "https://github.com/Waikato/moa/blob/395982e5100bfe75a3a4d26115462ce2cc74cbb0/moa/src/main/java/moa/clusterers/clustream/WithKmeans.java#L305-L356", "method_name": "new ArrayList<ArrayList<Cluster>>()", "code": "\tprotected static Clustering kMeans(int k, Cluster[] centers, List<? extends Cluster> data) {\t\tassert (centers.length == k);\t\tassert (k > 0);\t\tint dimensions = centers[0].getCenter().length;\t\tArrayList<ArrayList<Cluster>> clustering = new ArrayList<ArrayList<Cluster>>();\t\tfor (int i = 0; i < k; i++) {\t\t\tclustering.add(new ArrayList<Cluster>());\t\t}\t\twhile (true) {\t\t\t// Assign points to clusters\t\t\tfor (Cluster point : data) {\t\t\t\tdouble minDistance = distance(point.getCenter(), centers[0].getCenter());\t\t\t\tint closestCluster = 0;\t\t\t\tfor (int i = 1; i < k; i++) {\t\t\t\t\tdouble distance = distance(point.getCenter(), centers[i].getCenter());\t\t\t\t\tif (distance < minDistance) {\t\t\t\t\t\tclosestCluster = i;\t\t\t\t\t\tminDistance = distance;\t\t\t\t\t}\t\t\t\t}\t\t\t\tclustering.get(closestCluster).add(point);\t\t\t}\t\t\t// Calculate new centers and clear clustering lists\t\t\tSphereCluster[] newCenters = new SphereCluster[centers.length];\t\t\tfor (int i = 0; i < k; i++) {\t\t\t\tnewCenters[i] = calculateCenter(clustering.get(i), dimensions);\t\t\t\tclustering.get(i).clear();\t\t\t}\t\t\t\t\t\t// Convergence check\t\t\tboolean converged = true;\t\t\tfor (int i = 0; i < k; i++) {\t\t\t\tif (!Arrays.equals(centers[i].getCenter(), newCenters[i].getCenter())) {\t\t\t\t\tconverged = false;\t\t\t\t\tbreak;\t\t\t\t}\t\t\t}\t\t\t\t\t\tif (converged) {\t\t\t\tbreak;\t\t\t} else {\t\t\t\tcenters = newCenters;\t\t\t}\t\t}\t\treturn new Clustering(centers);\t}"}
{"id": "https://github.com/vanilladb/vanillabench/blob/f38e76ea2ea781f00d80032a8457b01154872b54/src/main/java/org/vanilladb/bench/util/RandomValueGenerator.java#L51-L71", "method_name": "randomChooseFromDistribution", "code": "\tpublic int randomChooseFromDistribution(double... probs) {\t\tint result = -1;\t\tint[] range = new int[probs.length];\t\tdouble accuracy = 1000;\t\tint total = 0;\t\tfor (int i = 0; i < probs.length; i++) {\t\t\trange[i] = (int) (probs[i] * accuracy);\t\t\ttotal += range[i];\t\t}\t\tint randNum = (int) (rng.nextDouble() * total);\t\tfor (int i = 0; i < range.length; i++) {\t\t\trandNum -= range[i];\t\t\tif (randNum <= 0) {\t\t\t\tresult = i;\t\t\t\tbreak;\t\t\t}\t\t}\t\treturn result;\t}"}
{"id": "https://github.com/teatrove/teatrove/blob/7039bdd4da6817ff8c737f7e4e07bac7e3ad8bea/trove/src/main/java/org/teatrove/trove/net/PlainSocketFactory.java#L92-L101", "method_name": "createSocket", "code": "    public CheckedSocket createSocket(long timeout)        throws ConnectException, SocketException    {        Socket socket = SocketConnector.connect            (mAddr, mPort, mLocalAddr, mLocalPort, timeout);        if (socket == null) {            throw new ConnectException(\"Connect timeout expired: \" + timeout);        }        return CheckedSocket.check(socket);    }"}
{"id": "https://github.com/TheHortonMachine/hortonmachine/blob/d2b436bbdf951dc1fda56096a42dbc0eae4d35a5/gears/src/main/java/oms3/ngmf/util/cosu/Efficiencies.java#L181-L224", "method_name": "new double[3]", "code": "    public static double[] linearReg(double[] xData, double[] yData) {        sameArrayLen(xData, yData);        double sumYValue = 0;        double meanYValue = 0;        double sumXValue = 0;        double meanXValue = 0;        double sumX = 0;        double sumY = 0;        double prod = 0;        double NODATA = -9999;        int nstat = xData.length;        double[] regCoef = new double[3]; //(intercept, gradient, r?)        int counter = 0;        //calculating sums        for (int i = 0; i < nstat; i++) {            if ((yData[i] != NODATA) && (xData[i] != NODATA)) {                sumYValue += yData[i];                sumXValue += xData[i];                counter++;            }        }        //calculating means        meanYValue = sumYValue / counter;        meanXValue = sumXValue / counter;        //calculating regression coefficients        for (int i = 0; i < nstat; i++) {            if ((yData[i] != NODATA) && (xData[i] != NODATA)) {                sumX += Math.pow((xData[i] - meanXValue), 2);                sumY += Math.pow((yData[i] - meanYValue), 2);                prod += ((xData[i] - meanXValue) * (yData[i] - meanYValue));            }        }        if (sumX > 0 && sumY > 0) {            regCoef[1] = prod / sumX;  //gradient            regCoef[0] = meanYValue - regCoef[1] * meanXValue; //intercept            regCoef[2] = Math.pow((prod / Math.sqrt(sumX * sumY)), 2); //r?        } else {            regCoef[1] = 0;            regCoef[0] = 0;            regCoef[2] = 0;        }        return regCoef;    }"}
{"id": "https://github.com/intuit/QuickBooks-V3-Java-SDK/blob/59f988d0776d46620d0b34711c411b2b5b1da06b/ipp-v3-java-devkit/src/main/java/com/intuit/ipp/util/DateUtils.java#L142-L148", "method_name": "getDateWithPrevDays", "code": "    public static Date getDateWithPrevDays(int noOfDays) throws ParseException {        Calendar currentDate = Calendar.getInstance();        currentDate.add(Calendar.DATE, -noOfDays);        SimpleDateFormat formatter = new SimpleDateFormat(DATE_yyyyMMddTHHmmssSSSZ);        String dateNow = formatter.format(currentDate.getTime());        return getDateFromString(dateNow);    }"}
{"id": "https://github.com/azkaban/azkaban/blob/d258ea7d6e66807c6eff79c5325d6d3443618dff/azkaban-common/src/main/java/azkaban/project/AzkabanProjectLoader.java#L266-L273", "method_name": "unzipFile", "code": "  private File unzipFile(final File archiveFile) throws IOException {    final ZipFile zipfile = new ZipFile(archiveFile);    final File unzipped = Utils.createTempDir(this.tempDir);    Utils.unzip(zipfile, unzipped);    zipfile.close();    return unzipped;  }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.security.openidconnect.clients.common/src/com/ibm/ws/security/openidconnect/clients/common/OidcClientUtil.java#L286-L288", "method_name": "createCookie", "code": "    public static Cookie createCookie(String cookieName, @Sensitive String cookieValue, HttpServletRequest req) {        return createCookie(cookieName, cookieValue, -1, req);    }"}
{"id": "https://github.com/code4everything/util/blob/1fc9f0ead1108f4d7208ba7c000df4244f708418/src/main/java/com/zhazhapan/util/Utils.java#L293-L298", "method_name": "copyToClipboard", "code": "    public static void copyToClipboard(String string) {        ClipboardContent content = new ClipboardContent();        content.putString(string);        Clipboard.getSystemClipboard().setContent(content);        logger.info(\"copy '\" + string + \"' to clipboard\");    }"}
{"id": "https://github.com/fhoeben/hsac-fitnesse-fixtures/blob/4e9018d7386a9aa65bfcbf07eb28ae064edd1732/src/main/java/nl/hsac/fitnesse/junit/reportmerge/HtmlReportIndexGenerator.java#L58-L60", "method_name": "createHtmlOverviewFile", "code": "    protected String createHtmlOverviewFile(File parentDir, List<TestReportHtml> htmls) throws IOException {\r        return new HtmlOverviewFileWriter(parentDir).write(htmls);\r    }\r"}
{"id": "https://github.com/pressgang-ccms/PressGangCCMSCommonUtilities/blob/5ebf5ed30a94c34c33f4708caa04a8da99cbb15c/src/main/java/org/jboss/pressgang/ccms/utils/common/StringUtilities.java#L388-L402", "method_name": "similarDamerauLevenshtein", "code": "    public static double similarDamerauLevenshtein(String s1, String s2) {        if (s1.equals(s2)) {            return 1.0;        }        // Make sure s1 is the longest string        if (s1.length() < s2.length()) {            String swap = s1;            s1 = s2;            s2 = swap;        }        int bigLength = s1.length();        return (bigLength - getDamerauLevenshteinDistance(s2, s1)) / (double) bigLength;    }"}
{"id": "https://github.com/javalite/activejdbc/blob/ffcf5457cace19622a8f71e856cbbbe9e7dd5fcc/activejdbc/src/main/java/org/javalite/activejdbc/Configuration.java#L217-L221", "method_name": "readPropertyFile", "code": "    private Properties readPropertyFile(String file) throws IOException {        String fileName = file.startsWith(\"/\") ? file : \"/\" + file;        LOGGER.info(\"Reading properties from: \" + fileName + \". Will try classpath, then file system.\");        return Util.readProperties(fileName);    }"}
{"id": "https://github.com/cloudant/sync-android/blob/5f1416ed1bd9ab05d7a4b8736480c8ae68bd7383/cloudant-sync-datastore-android-encryption/src/main/java/com/cloudant/sync/datastore/encryption/DPKEncryptionUtil.java#L98-L107", "method_name": "new IvParameterSpec(iv)", "code": "    public static byte[] decryptAES(SecretKey key, byte[] iv, byte[] encryptedBytes) throws            NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException,            InvalidKeyException, BadPaddingException, IllegalBlockSizeException {        Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");        IvParameterSpec ivParameter = new IvParameterSpec(iv);        // see http://stackoverflow.com/a/11506343        Key encryptionKey = new SecretKeySpec(key.getEncoded(),\"AES\");        aesCipher.init(Cipher.DECRYPT_MODE, encryptionKey, ivParameter);        return aesCipher.doFinal(encryptedBytes);    }"}
{"id": "https://github.com/Coveros/selenified/blob/396cc1f010dd69eed33cc5061c41253de246a4cd/src/main/java/com/coveros/selenified/utilities/Reporter.java#L741-L752", "method_name": "generatePdf", "code": "    private void generatePdf() {        File pdfFile = new File(directory, filename + \".pdf\");        try (OutputStream os = new FileOutputStream(pdfFile)) {            PdfRendererBuilder builder = new PdfRendererBuilder();            builder.withHtmlContent(getHtmlForPDFConversion(), \"file://\" + pdfFile.getAbsolutePath()                    .replaceAll(\" \", \"%20\"));            builder.toStream(os);            builder.run();        } catch (Exception e) {            log.error(e);        }    }"}
{"id": "https://github.com/hankcs/HanLP/blob/a538d0722ab2e4980a9dcd9ea40324fc3ddba7ce/src/main/java/com/hankcs/hanlp/mining/cluster/Cluster.java#L289-L319", "method_name": "new ArrayList<Document>(nclusters)", "code": "    void section(int nclusters)    {        if (size() < nclusters)            return;        sectioned_clusters_ = new ArrayList<Cluster<K>>(nclusters);        List<Document> centroids = new ArrayList<Document>(nclusters);        // choose_randomly(nclusters, centroids);        choose_smartly(nclusters, centroids);        for (int i = 0; i < centroids.size(); i++)        {            Cluster<K> cluster = new Cluster<K>();            sectioned_clusters_.add(cluster);        }        for (Document<K> d : documents_)        {            double max_similarity = -1.0;            int max_index = 0;            for (int j = 0; j < centroids.size(); j++)            {                double similarity = SparseVector.inner_product(d.feature(), centroids.get(j).feature());                if (max_similarity < similarity)                {                    max_similarity = similarity;                    max_index = j;                }            }            sectioned_clusters_.get(max_index).add_document(d);        }    }"}
{"id": "https://github.com/spring-projects/spring-shell/blob/23d99f45eb8f487e31a1f080c837061313bbfafa/spring-shell-standard-commands/src/main/java/org/springframework/shell/standard/commands/History.java#L58-L72", "method_name": "history", "code": "    @ShellMethod(value = \"Display or save the history of previously run commands\")    public List<String> history(@ShellOption(help = \"A file to save history to.\", defaultValue = ShellOption.NULL) File file) throws IOException {        if (file == null) {            List<String> result = new ArrayList<>(jLineHistory.size());            jLineHistory.forEach(e -> result.add(e.line()));            return result;        } else {            try (FileWriter w = new FileWriter(file)) {                for (org.jline.reader.History.Entry entry : jLineHistory) {                    w.append(entry.line()).append(System.lineSeparator());                }            }            return Collections.singletonList(String.format(\"Wrote %d entries to %s\", jLineHistory.size(), file));        }    }"}
{"id": "https://github.com/VoltDB/voltdb/blob/8afc1031e475835344b5497ea9e7203bc95475ac/src/hsqldb19b3/org/hsqldb_voltpatches/ParserBase.java#L819-L821", "method_name": "convertToNumber", "code": "    public Number convertToNumber(String s, NumberType type) {        return scanner.convertToNumber(s, type);    }"}
{"id": "https://github.com/Teddy-Zhu/SilentGo/blob/27f58b0cafe56b2eb9fc6993efa9ca2b529661e1/orm/src/main/java/com/silentgo/orm/source/jdbc/JDBCPool.java#L41-L49", "method_name": "getDBConnect", "code": "    @Override    public synchronized DBConnect getDBConnect() {        DBConnect connect = threadConnect.get();        if (connect == null) {            connect = useConnect();            threadConnect.set(connect);        }        return connect;    }"}
{"id": "https://github.com/EsotericSoftware/jsonbeans/blob/ff4502d0ff86cc77aa5c61d47371d0c66c14fe2f/src/com/esotericsoftware/jsonbeans/Json.java#L1040-L1042", "method_name": "prettyPrint", "code": "\tpublic String prettyPrint (String json, PrettyPrintSettings settings) {\r\t\treturn new JsonReader().parse(json).prettyPrint(settings);\r\t}\r"}
{"id": "https://github.com/intuit/QuickBooks-V3-Java-SDK/blob/59f988d0776d46620d0b34711c411b2b5b1da06b/ipp-v3-java-devkit/src/main/java/com/intuit/ipp/util/DateUtils.java#L113-L118", "method_name": "getCurrentDateTime", "code": "    public static Date getCurrentDateTime() throws ParseException {        Calendar currentDate = Calendar.getInstance();        SimpleDateFormat formatter = new SimpleDateFormat(DATE_yyyyMMddTHHmmssSSSZ);        String dateNow = formatter.format(currentDate.getTime());        return getDateFromString(dateNow);    }"}
{"id": "https://github.com/OpenLiberty/open-liberty/blob/ca725d9903e63645018f9fa8cbda25f60af83a5d/dev/com.ibm.ws.jdbc/src/com/ibm/ws/rsadapter/impl/WSManagedConnectionFactoryImpl.java#L1283-L1298", "method_name": "dsConfig.get().onConnect", "code": "    private void postGetConnectionHandling(Connection conn) throws SQLException {        helper.doConnectionSetup(conn);        String[] sqlCommands = dsConfig.get().onConnect;        if (sqlCommands != null && sqlCommands.length > 0)            onConnect(conn, sqlCommands);        // Log the database and driver versions on first getConnection.        if (!wasUsedToGetAConnection) {            // Wait until after the connection succeeds to set the indicator.            // This accounts for the scenario where the first connection attempt is bad.            // The information needs to be read again on the second attempt.            helper.gatherAndDisplayMetaDataInfo(conn, this);            wasUsedToGetAConnection = true;        }    }"}
{"id": "https://github.com/gosu-lang/gosu-lang/blob/d6e9261b137ce66fef3726cabe7826d4a1f946b7/gosu-core-api/src/main/java/gw/util/GosuStringUtil.java#L5279-L5284", "method_name": "reverse", "code": "  public static String reverse(String str) {      if (str == null) {          return null;      }      return new StringBuffer(str).reverse().toString();  }"}
{"id": "https://github.com/kuali/ojb-1.0.4/blob/9a544372f67ce965f662cdc71609dd03683c8f04/src/tools/org/apache/ojb/tools/mapping/reversedb/gui/actions/DBConnectAction.java#L47-L82", "method_name": "connectToDB", "code": "  private java.sql.Connection connectToDB(String strJDBCDriver, String strJDBCURL, \r    String strUsername, String strPassword)\r  {\r      try\r      {\r          Class.forName(strJDBCDriver); // \"com.informix.jdbc.IfxDriver\"\r          java.sql.Connection conn = \r            java.sql.DriverManager.getConnection(strJDBCURL, \r                strUsername, strPassword);  // \"jdbc:informix-sqli://moon:1526/bci_test:INFORMIXSERVER=ol_bci\", \"informix\", \"informix\"\r          return conn;\r      }\r      catch (java.sql.SQLException sqlEx)\r      {\r          java.sql.SQLException currentSqlEx = sqlEx;\r          System.out.println (sqlEx.getErrorCode() + \":\" + sqlEx.getMessage());\r          while (currentSqlEx.getNextException() != null)\r          {\r            currentSqlEx = currentSqlEx.getNextException();\r            System.out.println (sqlEx.getErrorCode() + \":\" + sqlEx.getMessage());\r          }\r          JOptionPane.showMessageDialog(mainFrame, \"Error connecting to database:\\n\" + sqlEx.getMessage(), \"SQL Error\", JOptionPane.ERROR_MESSAGE);          \r          return null;\r      }\r      catch (java.lang.ClassNotFoundException clNotFoundEx)\r      {\r          clNotFoundEx.printStackTrace();\r          JOptionPane.showMessageDialog(mainFrame, \"Cannot find driver class:\\n\" + clNotFoundEx.getMessage(), \"Class Not Found\", JOptionPane.ERROR_MESSAGE);\r          return null;\r      }\r      catch (Throwable t)\r      {\r          t.printStackTrace();\r          JOptionPane.showMessageDialog(mainFrame, \"Unknown error:\\n\" + t.getMessage(), \"Unknown Error\", JOptionPane.ERROR_MESSAGE);\r          return null;\r      }              \r  }  \r"}
